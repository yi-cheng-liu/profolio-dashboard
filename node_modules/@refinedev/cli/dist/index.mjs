var c=(e=>(e.REACT_SCRIPT="react-scripts",e.REMIX="remix",e.NEXTJS="nextjs",e.VITE="vite",e.CRACO="craco",e.PARCEL="parcel",e.UNKNOWN="unknown",e))(c||{});var f=(r=>(r.ANTD="antd",r.MUI="mui",r.MANTINE="mantine",r.CHAKRA="chakra-ui",r))(f||{});var g=(t=>(t.NPM="npm",t.YARN="yarn",t.PNPM="pnpm",t))(g||{});var d=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,l=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,p=n=>{let s=n.matchAll(d),o=[];for(let t of s){let[r,m,i,e,a]=t;o.push({statement:r,importPath:a,...m&&{defaultImport:m},...i&&{namedImports:i},...e&&{namespaceImport:e}})}return o==null?void 0:o.filter(Boolean)},u=n=>{let s=n.matchAll(l),o=[];for(let t of s){let[r,m,i,e,a]=t;o.push({statement:r,fromName:m.trim(),toName:e.trim(),afterCharacter:a})}return o};var I=(n,s)=>{let o=p(n),t=o[o.length-1],r=t?n.indexOf(t.statement):n.length-1;return`${n.slice(0,r+(t==null?void 0:t.statement.length))}
${s}
${n.slice(r+(t==null?void 0:t.statement.length))}`};import{readFileSync as h}from"fs-extra";import{join as x}from"path";function N(n){if(this!=null&&this.absolutePackageDir)try{return h(x(this.absolutePackageDir,n)).toString()}catch{return}}export{g as PackageManagerTypes,c as ProjectTypes,f as UIFrameworks,I as appendAfterImports,N as getFileContent,p as getImports,u as getNameChangeInImport};
//# sourceMappingURL=index.mjs.map