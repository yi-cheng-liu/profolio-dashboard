{"version":3,"sources":["../src/hooks/form/useForm.ts","../src/hooks/form/useModalForm/useModalForm.ts","../src/hooks/modal/useModal/index.tsx","../src/hooks/form/useDrawerForm/useDrawerForm.ts","../src/hooks/form/useStepsForm/useStepsForm.ts","../src/hooks/table/useTable/useTable.ts","../src/definitions/table/index.ts","../src/hooks/table/useTable/paginationLink.tsx","../src/hooks/table/useEditableTable/useEditableTable.ts","../src/hooks/fields/useSelect/index.ts","../src/hooks/fields/useCheckboxGroup/index.ts","../src/hooks/fields/useRadioGroup/index.ts","../src/hooks/import/index.tsx","../src/hooks/list/useSimpleList/useSimpleList.ts","../src/hooks/useFileUploadState/index.ts","../src/hooks/useSiderVisible/index.ts","../src/contexts/themedLayoutContext/index.tsx","../src/hooks/useThemedLayoutContext/index.ts","../src/providers/notificationProvider/index.tsx","../src/components/undoableNotification/index.tsx","../src/components/layout/index.tsx","../src/components/layout/sider/index.tsx","../src/components/layout/sider/styles.ts","../src/components/layout/header/index.tsx","../src/components/layout/title/index.tsx","../src/components/themedLayout/index.tsx","../src/components/themedLayout/sider/index.tsx","../src/components/themedLayout/sider/styles.ts","../src/components/themedLayout/header/index.tsx","../src/components/themedLayout/title/index.tsx","../src/components/themedLayoutV2/index.tsx","../src/components/themedLayoutV2/sider/index.tsx","../src/components/themedLayoutV2/sider/styles.ts","../src/components/themedLayoutV2/header/index.tsx","../src/components/themedLayoutV2/title/index.tsx","../src/components/buttons/create/index.tsx","../src/components/buttons/edit/index.tsx","../src/components/buttons/delete/index.tsx","../src/components/buttons/refresh/index.tsx","../src/components/buttons/show/index.tsx","../src/components/buttons/list/index.tsx","../src/components/buttons/export/index.tsx","../src/components/buttons/save/index.tsx","../src/components/buttons/clone/index.tsx","../src/components/buttons/import/index.tsx","../src/components/crud/list/index.tsx","../src/components/crud/create/index.tsx","../src/components/crud/edit/index.tsx","../src/components/crud/show/index.tsx","../src/components/fields/text/index.tsx","../src/components/fields/tag/index.tsx","../src/components/fields/email/index.tsx","../src/components/fields/image/index.tsx","../src/components/fields/boolean/index.tsx","../src/components/fields/date/index.tsx","../src/components/fields/file/index.tsx","../src/components/fields/url/index.tsx","../src/components/fields/number/index.tsx","../src/components/fields/markdown/index.tsx","../src/components/table/components/filterDropdown/index.tsx","../src/components/pages/error/index.tsx","../src/components/pages/login/index.tsx","../src/components/pages/login/styles.ts","../src/components/pages/ready/index.tsx","../src/components/pages/welcome/index.tsx","../src/components/pages/auth/index.tsx","../src/components/pages/auth/components/login/index.tsx","../src/components/pages/auth/components/styles.ts","../src/components/pages/auth/components/register/index.tsx","../src/components/pages/auth/components/forgotPassword/index.tsx","../src/components/pages/auth/components/updatePassword/index.tsx","../src/components/breadcrumb/index.tsx","../src/components/pageHeader/index.tsx","../src/components/autoSaveIndicator/index.tsx","../src/definitions/filter-mappers/index.ts","../src/definitions/upload/index.ts","../src/definitions/themes/index.ts"],"sourcesContent":["import React from \"react\";\nimport {\n  type FormInstance,\n  type FormProps,\n  Form,\n  type ButtonProps,\n} from \"antd\";\nimport { useForm as useFormSF } from \"sunflower-antd\";\nimport {\n  type AutoSaveProps,\n  flattenObjectKeys,\n  propertyPathToArray,\n} from \"@refinedev/core\";\n\nimport {\n  type HttpError,\n  type BaseRecord,\n  useForm as useFormCore,\n  type UseFormReturnType as UseFormReturnTypeCore,\n  useWarnAboutChange,\n  type UseFormProps as UseFormPropsCore,\n  type CreateResponse,\n  type UpdateResponse,\n  pickNotDeprecated,\n  useTranslate,\n  useRefineContext,\n} from \"@refinedev/core\";\n\nexport type UseFormProps<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n> = UseFormPropsCore<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> & {\n  submitOnEnter?: boolean;\n  /**\n   * Shows notification when unsaved changes exist\n   */\n  warnWhenUnsavedChanges?: boolean;\n  /**\n   * Disables server-side validation\n   * @default false\n   * @see {@link https://refine.dev/docs/advanced-tutorials/forms/server-side-form-validation/}\n   */\n  disableServerSideValidation?: boolean;\n} & AutoSaveProps<TVariables>;\n\nexport type UseFormReturnType<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n> = UseFormReturnTypeCore<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> & {\n  form: FormInstance<TVariables>;\n  formProps: FormProps<TVariables>;\n  saveButtonProps: ButtonProps & {\n    onClick: () => void;\n  };\n  onFinish: (\n    values?: TVariables,\n  ) => Promise<CreateResponse<TResponse> | UpdateResponse<TResponse> | void>;\n};\n\n/**\n * `useForm` is used to manage forms. It uses Ant Design {@link https://ant.design/components/form/ Form} data scope management under the hood and returns the required props for managing the form actions.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useForm} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n * @typeParam TResponse - Result data returned by the mutation function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TData`\n * @typeParam TResponseError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}. Defaults to `TError`\n *\n *\n */\nexport const useForm = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n>({\n  action,\n  resource,\n  onMutationSuccess: onMutationSuccessProp,\n  onMutationError: onMutationErrorProp,\n  autoSave,\n  submitOnEnter = false,\n  warnWhenUnsavedChanges: warnWhenUnsavedChangesProp,\n  redirect,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  queryMeta,\n  mutationMeta,\n  liveMode,\n  liveParams,\n  mutationMode,\n  dataProviderName,\n  onLiveEvent,\n  invalidates,\n  undoableTimeout,\n  queryOptions,\n  createMutationOptions,\n  updateMutationOptions,\n  id: idFromProps,\n  overtimeOptions,\n  optimisticUpdateMap,\n  disableServerSideValidation: disableServerSideValidationProp = false,\n}: UseFormProps<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> = {}): UseFormReturnType<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> => {\n  const { options } = useRefineContext();\n  const disableServerSideValidation =\n    options?.disableServerSideValidation || disableServerSideValidationProp;\n\n  const translate = useTranslate();\n\n  const [formAnt] = Form.useForm();\n  const formSF = useFormSF<TResponse, TVariables>({\n    form: formAnt,\n  });\n  const { form } = formSF;\n\n  const useFormCoreResult = useFormCore<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n  >({\n    onMutationSuccess: onMutationSuccessProp\n      ? onMutationSuccessProp\n      : undefined,\n    onMutationError: async (error, _variables, _context) => {\n      if (disableServerSideValidation) {\n        onMutationErrorProp?.(error, _variables, _context);\n        return;\n      }\n\n      // antd form expects error object to be in a specific format.\n      let parsedErrors: {\n        name: string | number | (string | number)[];\n        errors?: string[] | undefined;\n      }[] = [];\n\n      // reset antd errors before setting new errors\n      const fieldsValue = form.getFieldsValue() as unknown as object;\n\n      const fields = Object.keys(flattenObjectKeys(fieldsValue));\n\n      parsedErrors = fields.map((field) => {\n        return {\n          name: propertyPathToArray(field),\n          errors: undefined,\n        };\n      });\n\n      form.setFields(parsedErrors);\n\n      const errors = error?.errors;\n      // parse errors to antd form errors\n      for (const key in errors) {\n        const fieldError = errors[key];\n\n        let newError: string[] = [];\n\n        if (Array.isArray(fieldError)) {\n          newError = fieldError;\n        }\n\n        if (typeof fieldError === \"string\") {\n          newError = [fieldError];\n        }\n\n        if (typeof fieldError === \"boolean\" && fieldError) {\n          newError = [\"Field is not valid.\"];\n        }\n\n        if (typeof fieldError === \"object\" && \"key\" in fieldError) {\n          const translatedMessage = translate(\n            fieldError.key,\n            fieldError.message,\n          );\n\n          newError = [translatedMessage];\n        }\n\n        parsedErrors.push({\n          name: propertyPathToArray(key),\n          errors: newError,\n        });\n      }\n\n      form.setFields([...parsedErrors]);\n\n      onMutationErrorProp?.(error, _variables, _context);\n    },\n    redirect,\n    action,\n    resource,\n    successNotification,\n    errorNotification,\n    meta: pickNotDeprecated(meta, metaData),\n    metaData: pickNotDeprecated(meta, metaData),\n    queryMeta,\n    mutationMeta,\n    liveMode,\n    liveParams,\n    mutationMode,\n    dataProviderName,\n    onLiveEvent,\n    invalidates,\n    undoableTimeout,\n    queryOptions,\n    createMutationOptions,\n    updateMutationOptions,\n    id: idFromProps,\n    overtimeOptions,\n    optimisticUpdateMap,\n    autoSave,\n  });\n\n  const { formLoading, onFinish, queryResult, id, onFinishAutoSave } =\n    useFormCoreResult;\n\n  const { warnWhenUnsavedChanges: warnWhenUnsavedChangesRefine, setWarnWhen } =\n    useWarnAboutChange();\n  const warnWhenUnsavedChanges =\n    warnWhenUnsavedChangesProp ?? warnWhenUnsavedChangesRefine;\n\n  React.useEffect(() => {\n    form.resetFields();\n  }, [queryResult?.data?.data, id]);\n\n  const onKeyUp = (event: React.KeyboardEvent<HTMLFormElement>) => {\n    if (submitOnEnter && event.key === \"Enter\") {\n      form.submit();\n    }\n  };\n\n  const onValuesChange = (changeValues: object, allValues: any) => {\n    if (changeValues && warnWhenUnsavedChanges) {\n      setWarnWhen(true);\n    }\n\n    if (autoSave?.enabled) {\n      setWarnWhen(false);\n\n      const onFinishFromProps = autoSave?.onFinish ?? ((values) => values);\n\n      return onFinishAutoSave(onFinishFromProps(allValues)).catch(\n        (error) => error,\n      );\n    }\n\n    return changeValues;\n  };\n\n  const saveButtonProps = {\n    disabled: formLoading,\n    onClick: () => {\n      form.submit();\n    },\n  };\n\n  return {\n    form: formSF.form,\n    formProps: {\n      ...formSF.formProps,\n      onFinish: (values: TVariables) =>\n        onFinish(values).catch((error) => error),\n      onKeyUp,\n      onValuesChange,\n      initialValues: queryResult?.data?.data,\n    },\n    saveButtonProps,\n    ...useFormCoreResult,\n    onFinish: async (values?: TVariables) => {\n      return await onFinish(values ?? formSF.form.getFieldsValue(true));\n    },\n  };\n};\n","import React, { useCallback } from \"react\";\nimport type { FormInstance, FormProps, ModalProps } from \"antd\";\n\nimport {\n  useTranslate,\n  useWarnAboutChange,\n  type HttpError,\n  type UseFormProps as UseFormPropsCore,\n  type BaseRecord,\n  type LiveModeProps,\n  type BaseKey,\n  useUserFriendlyName,\n  useResource,\n  type FormWithSyncWithLocationParams,\n  useParsed,\n  useGo,\n  useInvalidate,\n} from \"@refinedev/core\";\nimport { useForm, type UseFormProps, type UseFormReturnType } from \"../useForm\";\nimport { useModal } from \"@hooks/modal\";\n\nexport type useModalFormFromSFReturnType<TResponse, TVariables> = {\n  open: boolean;\n  form: FormInstance<TVariables>;\n  show: (id?: BaseKey) => void;\n  close: () => void;\n  modalProps: ModalProps;\n  formProps: FormProps<TVariables>;\n  formLoading: boolean;\n  defaultFormValuesLoading: boolean;\n  formValues: {};\n  initialValues: {};\n  formResult: undefined;\n  submit: (values?: TVariables) => Promise<TResponse>;\n  /** @deprecated Please use `open` instead. */\n  visible: boolean;\n};\n\ntype useModalFormConfig = {\n  action: \"show\" | \"edit\" | \"create\" | \"clone\";\n};\n\nexport type UseModalFormReturnType<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n> = Omit<\n  UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n  >,\n  \"saveButtonProps\" | \"deleteButtonProps\"\n> &\n  useModalFormFromSFReturnType<TResponse, TVariables>;\n\nexport type UseModalFormProps<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n> = UseFormPropsCore<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> &\n  UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n  > &\n  useModalFormConfig &\n  LiveModeProps &\n  FormWithSyncWithLocationParams & {\n    defaultVisible?: boolean;\n    autoSubmitClose?: boolean;\n    autoResetForm?: boolean;\n  };\n/**\n * `useModalForm` hook allows you to manage a form within a modal. It returns Ant Design {@link https://ant.design/components/form/ Form} and {@link https://ant.design/components/modal/ Modal} components props.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/form/useModalForm} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n *\n */\nexport const useModalForm = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n>({\n  syncWithLocation,\n  defaultVisible = false,\n  autoSubmitClose = true,\n  autoResetForm = true,\n  autoSave,\n  invalidates,\n  ...rest\n}: UseModalFormProps<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n>): UseModalFormReturnType<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> => {\n  const [initiallySynced, setInitiallySynced] = React.useState(false);\n  const invalidate = useInvalidate();\n\n  const {\n    resource,\n    action: actionFromParams,\n    identifier,\n  } = useResource(rest.resource);\n\n  const parsed = useParsed();\n  const go = useGo();\n  const getUserFriendlyName = useUserFriendlyName();\n\n  const action = rest.action ?? actionFromParams ?? \"\";\n\n  const syncingId = !(\n    typeof syncWithLocation === \"object\" && syncWithLocation?.syncId === false\n  );\n\n  const syncWithLocationKey =\n    typeof syncWithLocation === \"object\" && \"key\" in syncWithLocation\n      ? syncWithLocation.key\n      : resource && action && syncWithLocation\n        ? `modal-${identifier}-${action}`\n        : undefined;\n\n  const useFormProps = useForm<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n  >({\n    meta: {\n      ...(syncWithLocationKey ? { [syncWithLocationKey]: undefined } : {}),\n      ...rest.meta,\n    },\n    autoSave,\n    invalidates,\n    ...rest,\n  });\n\n  const { form, formProps, id, setId, formLoading, onFinish, autoSaveProps } =\n    useFormProps;\n\n  const translate = useTranslate();\n\n  const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n  const { show, close, modalProps } = useModal({\n    modalProps: {\n      open: defaultVisible,\n    },\n  });\n\n  const visible = modalProps.open || false;\n  const sunflowerUseModal: useModalFormFromSFReturnType<TResponse, TVariables> =\n    {\n      modalProps,\n      form,\n      formLoading,\n      formProps,\n      formResult: undefined,\n      formValues: form.getFieldsValue,\n      defaultFormValuesLoading: false,\n      initialValues: {},\n      submit: onFinish as any,\n      close,\n      open: modalProps.open || false,\n      show,\n      visible,\n    };\n\n  React.useEffect(() => {\n    if (initiallySynced === false && syncWithLocationKey) {\n      const openStatus = parsed?.params?.[syncWithLocationKey]?.open;\n\n      if (typeof openStatus === \"boolean\") {\n        if (openStatus) {\n          show();\n        }\n      } else if (typeof openStatus === \"string\") {\n        if (openStatus === \"true\") {\n          show();\n        }\n      }\n\n      if (syncingId) {\n        const idFromParams = parsed?.params?.[syncWithLocationKey]?.id;\n        if (idFromParams) {\n          setId?.(idFromParams);\n        }\n      }\n\n      setInitiallySynced(true);\n    }\n  }, [syncWithLocationKey, parsed, syncingId, setId]);\n\n  React.useEffect(() => {\n    if (initiallySynced === true) {\n      if (visible && syncWithLocationKey) {\n        go({\n          query: {\n            [syncWithLocationKey]: {\n              ...parsed?.params?.[syncWithLocationKey],\n              open: true,\n              ...(syncingId && id && { id }),\n            },\n          },\n          options: { keepQuery: true },\n          type: \"replace\",\n        });\n      } else if (syncWithLocationKey && !visible) {\n        go({\n          query: {\n            [syncWithLocationKey]: undefined,\n          },\n          options: { keepQuery: true },\n          type: \"replace\",\n        });\n      }\n    }\n  }, [id, visible, show, syncWithLocationKey, syncingId]);\n\n  const saveButtonPropsSF = {\n    disabled: formLoading,\n    loading: formLoading,\n    onClick: () => {\n      form.submit();\n    },\n  };\n\n  const handleClose = useCallback(() => {\n    if (autoSaveProps.status === \"success\" && autoSave?.invalidateOnClose) {\n      invalidate({\n        id,\n        invalidates: invalidates || [\"list\", \"many\", \"detail\"],\n        dataProviderName: rest.dataProviderName,\n        resource: identifier,\n      });\n    }\n\n    if (warnWhen) {\n      const warnWhenConfirm = window.confirm(\n        translate(\n          \"warnWhenUnsavedChanges\",\n          \"Are you sure you want to leave? You have unsaved changes.\",\n        ),\n      );\n\n      if (warnWhenConfirm) {\n        setWarnWhen(false);\n      } else {\n        return;\n      }\n    }\n\n    setId?.(undefined);\n    sunflowerUseModal.close();\n  }, [warnWhen, autoSaveProps.status]);\n\n  const handleShow = useCallback(\n    (showId?: BaseKey) => {\n      if (typeof showId !== \"undefined\") {\n        setId?.(showId);\n      }\n      const needsIdToOpen = action === \"edit\" || action === \"clone\";\n      const hasId = typeof showId !== \"undefined\" || typeof id !== \"undefined\";\n      if (needsIdToOpen ? hasId : true) {\n        sunflowerUseModal.show();\n      }\n    },\n    [id],\n  );\n\n  const { visible: _visible, ...otherModalProps } = modalProps;\n  const newModalProps = { open: _visible, ...otherModalProps };\n\n  return {\n    ...useFormProps,\n    ...sunflowerUseModal,\n    show: handleShow,\n    close: handleClose,\n    open: visible,\n    formProps: {\n      ...formProps,\n      ...useFormProps.formProps,\n      onValuesChange: formProps?.onValuesChange,\n      onKeyUp: formProps?.onKeyUp,\n      onFinish: async (values) => {\n        await onFinish(values);\n\n        if (autoSubmitClose) {\n          close();\n        }\n\n        if (autoResetForm) {\n          form.resetFields();\n        }\n      },\n    },\n    modalProps: {\n      ...newModalProps,\n      width: \"1000px\",\n      okButtonProps: saveButtonPropsSF,\n      title: translate(\n        `${identifier}.titles.${rest.action}`,\n        `${getUserFriendlyName(\n          `${rest.action} ${\n            resource?.meta?.label ??\n            resource?.options?.label ??\n            resource?.label ??\n            identifier\n          }`,\n          \"singular\",\n        )}`,\n      ),\n      okText: translate(\"buttons.save\", \"Save\"),\n      cancelText: translate(\"buttons.cancel\", \"Cancel\"),\n      onCancel: handleClose,\n      forceRender: true,\n    },\n    formLoading,\n  };\n};\n","import type { ModalProps } from \"antd\";\nimport {\n  useModal as useCoreModal,\n  type useModalReturnType as useCoreModelReturnType,\n} from \"@refinedev/core\";\n\nexport type useModalReturnType = {\n  modalProps: ModalProps;\n} & Omit<useCoreModelReturnType, \"visible\">;\n\nexport type useModalProps = {\n  /**\n   * Default props for Ant Design {@link https://ant.design/components/modal/ `<Modal>`} component.\n   */\n  modalProps?: ModalProps;\n};\n\n/**\n * By using `useModal` you get props for your records from API in accordance with Ant Design {@link https://ant.design/components/modal/ `<Modal>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/ui/useModal} for more details.\n */\nexport const useModal = ({\n  modalProps = {},\n}: useModalProps = {}): useModalReturnType => {\n  const { show, close, visible } = useCoreModal({\n    defaultVisible: modalProps.open,\n  });\n\n  return {\n    modalProps: {\n      ...modalProps,\n      onCancel: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        modalProps.onCancel?.(e);\n        close();\n      },\n      open: visible,\n      visible,\n    },\n    show,\n    close,\n  };\n};\n","import React, { useCallback } from \"react\";\nimport type { UseFormConfig } from \"sunflower-antd\";\nimport type { FormInstance, FormProps, DrawerProps, ButtonProps } from \"antd\";\nimport {\n  useTranslate,\n  useWarnAboutChange,\n  type UseFormProps as UseFormPropsCore,\n  type HttpError,\n  type LiveModeProps,\n  type BaseRecord,\n  type FormWithSyncWithLocationParams,\n  type BaseKey,\n  useResource,\n  useParsed,\n  useGo,\n  useModal,\n  useInvalidate,\n} from \"@refinedev/core\";\n\nimport { useForm, type UseFormProps, type UseFormReturnType } from \"../useForm\";\nimport type { DeleteButtonProps } from \"../../../components\";\n\nexport interface UseDrawerFormConfig extends UseFormConfig {\n  action: \"show\" | \"edit\" | \"create\" | \"clone\";\n}\n\nexport type UseDrawerFormProps<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n> = UseFormPropsCore<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> &\n  UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n  > &\n  UseDrawerFormConfig &\n  LiveModeProps &\n  FormWithSyncWithLocationParams & {\n    defaultVisible?: boolean;\n    autoSubmitClose?: boolean;\n    autoResetForm?: boolean;\n  };\n\nexport type UseDrawerFormReturnType<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n> = UseFormReturnType<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> & {\n  formProps: FormProps<TVariables> & {\n    form: FormInstance<TVariables>;\n  };\n  show: (id?: BaseKey) => void;\n  close: () => void;\n  drawerProps: DrawerProps;\n  saveButtonProps: ButtonProps;\n  deleteButtonProps: DeleteButtonProps;\n  formLoading: boolean;\n};\n\n/**\n * `useDrawerForm` hook allows you to manage a form within a drawer. It returns Ant Design {@link https://ant.design/components/form/ Form} and {@link https://ant.design/components/drawer/ Drawer} components props.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/form/useDrawerForm} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n *\n */\n\nexport const useDrawerForm = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n>({\n  syncWithLocation,\n  defaultVisible = false,\n  autoSubmitClose = true,\n  autoResetForm = true,\n  autoSave,\n  invalidates,\n  ...rest\n}: UseDrawerFormProps<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n>): UseDrawerFormReturnType<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> => {\n  const invalidate = useInvalidate();\n  const [initiallySynced, setInitiallySynced] = React.useState(false);\n\n  const { visible, show, close } = useModal({\n    defaultVisible,\n  });\n\n  const {\n    resource,\n    action: actionFromParams,\n    identifier,\n  } = useResource(rest.resource);\n\n  const parsed = useParsed();\n  const go = useGo();\n\n  const action = rest.action ?? actionFromParams ?? \"\";\n\n  const syncingId = !(\n    typeof syncWithLocation === \"object\" && syncWithLocation?.syncId === false\n  );\n\n  const syncWithLocationKey =\n    typeof syncWithLocation === \"object\" && \"key\" in syncWithLocation\n      ? syncWithLocation.key\n      : resource && action && syncWithLocation\n        ? `drawer-${resource?.identifier ?? resource?.name}-${action}`\n        : undefined;\n\n  const useFormProps = useForm<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n  >({\n    meta: {\n      ...(syncWithLocationKey ? { [syncWithLocationKey]: undefined } : {}),\n      ...rest.meta,\n    },\n    autoSave,\n    invalidates,\n    ...rest,\n  });\n\n  const { form, formProps, formLoading, id, setId, onFinish, autoSaveProps } =\n    useFormProps;\n\n  React.useEffect(() => {\n    if (initiallySynced === false && syncWithLocationKey) {\n      const openStatus = parsed?.params?.[syncWithLocationKey]?.open;\n      if (typeof openStatus === \"boolean\") {\n        openStatus ? show() : close();\n      } else if (typeof openStatus === \"string\") {\n        if (openStatus === \"true\") {\n          show();\n        }\n      }\n\n      if (syncingId) {\n        const idFromParams = parsed?.params?.[syncWithLocationKey]?.id;\n        if (idFromParams) {\n          setId?.(idFromParams);\n        }\n      }\n\n      setInitiallySynced(true);\n    }\n  }, [syncWithLocationKey, parsed, syncingId, setId, initiallySynced]);\n\n  React.useEffect(() => {\n    if (initiallySynced === true) {\n      if (visible && syncWithLocationKey) {\n        go({\n          query: {\n            [syncWithLocationKey]: {\n              ...parsed?.params?.[syncWithLocationKey],\n              open: true,\n              ...(syncingId && id && { id }),\n            },\n          },\n          options: { keepQuery: true },\n          type: \"replace\",\n        });\n      } else if (syncWithLocationKey && !visible) {\n        go({\n          query: {\n            [syncWithLocationKey]: undefined,\n          },\n          options: { keepQuery: true },\n          type: \"replace\",\n        });\n      }\n    }\n  }, [\n    id,\n    visible,\n    show,\n    close,\n    syncWithLocationKey,\n    syncingId,\n    initiallySynced,\n  ]);\n\n  const translate = useTranslate();\n\n  const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n  const saveButtonProps = {\n    disabled: formLoading,\n    onClick: () => {\n      form.submit();\n    },\n    loading: formLoading,\n  };\n\n  const deleteButtonProps = {\n    recordItemId: id,\n    onSuccess: () => {\n      setId?.(undefined);\n      close();\n    },\n  };\n\n  const handleClose = useCallback(() => {\n    if (autoSaveProps.status === \"success\" && autoSave?.invalidateOnClose) {\n      invalidate({\n        id,\n        invalidates: invalidates || [\"list\", \"many\", \"detail\"],\n        dataProviderName: rest.dataProviderName,\n        resource: identifier,\n      });\n    }\n\n    if (warnWhen) {\n      const warnWhenConfirm = window.confirm(\n        translate(\n          \"warnWhenUnsavedChanges\",\n          \"Are you sure you want to leave? You have unsaved changes.\",\n        ),\n      );\n\n      if (warnWhenConfirm) {\n        setWarnWhen(false);\n      } else {\n        return;\n      }\n    }\n\n    close();\n    setId?.(undefined);\n  }, [warnWhen]);\n\n  const handleShow = useCallback(\n    (showId?: BaseKey) => {\n      if (typeof showId !== \"undefined\") {\n        setId?.(showId);\n      }\n      const needsIdToOpen = action === \"edit\" || action === \"clone\";\n      const hasId = typeof showId !== \"undefined\" || typeof id !== \"undefined\";\n      if (needsIdToOpen ? hasId : true) {\n        show();\n      }\n    },\n    [id],\n  );\n\n  return {\n    ...useFormProps,\n    show: handleShow,\n    close: handleClose,\n    formProps: {\n      form,\n      ...useFormProps.formProps,\n      onValuesChange: formProps?.onValuesChange,\n      onKeyUp: formProps?.onKeyUp,\n      onFinish: async (values) => {\n        await onFinish(values);\n\n        if (autoSubmitClose) {\n          close();\n        }\n\n        if (autoResetForm) {\n          form.resetFields();\n        }\n      },\n    },\n    drawerProps: {\n      width: \"500px\",\n      onClose: handleClose,\n      open: visible,\n      forceRender: true,\n    },\n    saveButtonProps,\n    deleteButtonProps,\n    formLoading,\n  };\n};\n","import {\n  useStepsForm as useStepsFormSF,\n  type UseStepsFormConfig,\n} from \"sunflower-antd\";\nimport type { FormInstance, FormProps } from \"antd\";\n\nimport type {\n  HttpError,\n  UseFormProps as UseFormPropsCore,\n  BaseRecord,\n} from \"@refinedev/core\";\n\nimport { useForm, type UseFormProps, type UseFormReturnType } from \"../useForm\";\n\nexport type UseStepsFormFromSFReturnType<TResponse, TVariables> = {\n  current: number;\n  gotoStep: (step: number) => Promise<TVariables> | true;\n  stepsProps: {\n    current: number;\n    onChange: (currentStep: number) => void;\n  };\n  formProps: FormProps<TVariables>;\n  formLoading: boolean;\n  defaultFormValuesLoading: boolean;\n  formValues: {};\n  initialValues: {};\n  formResult: undefined;\n  form: FormInstance<TVariables>;\n  submit: (values?: TVariables) => Promise<TResponse>;\n};\n\nexport type UseStepsFormReturnType<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n> = UseFormReturnType<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> &\n  UseStepsFormFromSFReturnType<TResponse, TVariables>;\n\nexport type UseStepsFormProps<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n> = UseFormPropsCore<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> &\n  UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n  > &\n  UseStepsFormConfig;\n\n/**\n * `useStepsForm` hook allows you to split your form under an Ant Design based {@link https://ant.design/components/steps/ Steps} component and provides you with a few useful functionalities that will help you manage your form.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/form/useStepsForm} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n *\n */\nexport const useStepsForm = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n>(\n  props: UseStepsFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n  > = {},\n): UseStepsFormReturnType<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> => {\n  const useFormProps = useForm<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n  >({\n    ...props,\n  });\n  const { form, formProps } = useFormProps;\n\n  const stepsPropsSunflower = useStepsFormSF<TResponse, TVariables>({\n    isBackValidate: false,\n    form: form,\n    submit: (values: any) => {\n      formProps?.onFinish?.(values);\n    },\n    ...props,\n  });\n\n  return {\n    ...useFormProps,\n    ...stepsPropsSunflower,\n    formLoading: useFormProps.formLoading,\n    formProps: {\n      ...stepsPropsSunflower.formProps,\n      ...useFormProps.formProps,\n      onValuesChange: formProps?.onValuesChange,\n      onKeyUp: formProps?.onKeyUp,\n    },\n    saveButtonProps: {\n      ...useFormProps.saveButtonProps,\n      onClick: () => stepsPropsSunflower.submit(),\n    },\n  };\n};\n","import React, { Children, createElement, Fragment } from \"react\";\nimport {\n  Grid,\n  type FormProps,\n  Form,\n  type TablePaginationConfig,\n  type TableProps,\n} from \"antd\";\nimport { useForm as useFormSF } from \"sunflower-antd\";\n\nimport {\n  useLiveMode,\n  type BaseRecord,\n  type CrudFilters,\n  type HttpError,\n  useTable as useTableCore,\n  type useTableProps as useTablePropsCore,\n  type useTableReturnType as useTableCoreReturnType,\n  pickNotDeprecated,\n  useSyncWithLocation,\n} from \"@refinedev/core\";\n\nimport {\n  mapAntdSorterToCrudSorting,\n  mapAntdFilterToCrudFilter,\n} from \"@definitions/table\";\nimport { PaginationLink } from \"./paginationLink\";\nimport type { FilterValue, SorterResult } from \"../../../definitions/table\";\n\nexport type useTableProps<TQueryFnData, TError, TSearchVariables, TData> =\n  useTablePropsCore<TQueryFnData, TError, TData> & {\n    onSearch?: (data: TSearchVariables) => CrudFilters | Promise<CrudFilters>;\n  };\n\nexport type useTableReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TSearchVariables = unknown,\n> = useTableCoreReturnType<TData, TError> & {\n  searchFormProps: FormProps<TSearchVariables>;\n  tableProps: TableProps<TData>;\n};\n\n/**\n * By using useTable, you are able to get properties that are compatible with\n * Ant Design {@link https://ant.design/components/table/ `<Table>`} component.\n * All features such as sorting, filtering and pagination comes as out of box.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/table/useTable/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TSearchVariables - Values for search params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useTable = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TSearchVariables = unknown,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  onSearch,\n  initialCurrent,\n  initialPageSize,\n  hasPagination = true,\n  pagination,\n  initialSorter,\n  permanentSorter,\n  initialFilter,\n  permanentFilter,\n  defaultSetFilterBehavior,\n  filters: filtersFromProp,\n  sorters: sortersFromProp,\n  syncWithLocation,\n  resource,\n  successNotification,\n  errorNotification,\n  queryOptions,\n  liveMode: liveModeFromProp,\n  onLiveEvent,\n  liveParams,\n  meta,\n  metaData,\n  dataProviderName,\n}: useTableProps<\n  TQueryFnData,\n  TError,\n  TSearchVariables,\n  TData\n> = {}): useTableReturnType<TData, TError, TSearchVariables> => {\n  const {\n    tableQueryResult,\n    current,\n    setCurrent,\n    pageSize,\n    setPageSize,\n    filters,\n    setFilters,\n    sorters,\n    setSorters,\n    sorter,\n    setSorter,\n    createLinkForSyncWithLocation,\n    pageCount,\n    overtime,\n  } = useTableCore<TQueryFnData, TError, TData>({\n    permanentSorter,\n    permanentFilter,\n    initialCurrent,\n    initialPageSize,\n    pagination,\n    hasPagination,\n    filters: filtersFromProp,\n    sorters: sortersFromProp,\n    initialSorter,\n    initialFilter,\n    syncWithLocation,\n    resource,\n    defaultSetFilterBehavior,\n    successNotification,\n    errorNotification,\n    queryOptions,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    meta: pickNotDeprecated(meta, metaData),\n    metaData: pickNotDeprecated(meta, metaData),\n    dataProviderName,\n  });\n  const { syncWithLocation: defaultSyncWithLocation } = useSyncWithLocation();\n  const shouldSyncWithLocation = syncWithLocation ?? defaultSyncWithLocation;\n  const breakpoint = Grid.useBreakpoint();\n  const [form] = Form.useForm<TSearchVariables>();\n  const formSF = useFormSF<any, TSearchVariables>({\n    form: form,\n  });\n  const liveMode = useLiveMode(liveModeFromProp);\n\n  const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n  const isPaginationEnabled =\n    (pagination?.mode ?? hasPaginationString) !== \"off\";\n\n  const preferredInitialFilters = pickNotDeprecated(\n    filtersFromProp?.initial,\n    initialFilter,\n  );\n\n  const { data, isFetched, isLoading } = tableQueryResult;\n\n  React.useEffect(() => {\n    if (shouldSyncWithLocation) {\n      // get registered fields of form\n      const registeredFields = formSF.form.getFieldsValue() as Record<\n        string,\n        any\n      >;\n      // map `filters` for registered fields\n      const filterFilterMap = Object.keys(registeredFields).reduce(\n        (acc, curr) => {\n          // find filter for current field\n          const filter = filters.find(\n            (filter) => \"field\" in filter && filter.field === curr,\n          );\n          // if filter exists, set value to filter value\n          if (filter) {\n            acc[curr] = filter?.value;\n          }\n          return acc;\n        },\n        {} as Record<string, any>,\n      );\n      // set values to form\n      formSF.form.setFieldsValue(filterFilterMap as any);\n    }\n  }, [shouldSyncWithLocation]);\n\n  const onChange = (\n    paginationState: TablePaginationConfig,\n    tableFilters: Record<string, FilterValue | null>,\n    sorter: SorterResult | SorterResult[],\n  ) => {\n    if (tableFilters && Object.keys(tableFilters).length > 0) {\n      // Map Antd:Filter -> refine:CrudFilter\n      const crudFilters = mapAntdFilterToCrudFilter(\n        tableFilters,\n        filters,\n        preferredInitialFilters,\n      );\n      setFilters(crudFilters);\n    }\n\n    if (sorter && Object.keys(sorter).length > 0) {\n      // Map Antd:Sorter -> refine:CrudSorting\n      const crudSorting = mapAntdSorterToCrudSorting(sorter);\n      setSorters(crudSorting);\n    }\n\n    if (isPaginationEnabled) {\n      setCurrent?.(paginationState.current || 1);\n      setPageSize?.(paginationState.pageSize || 10);\n    }\n  };\n\n  const onFinish = async (value: TSearchVariables) => {\n    if (onSearch) {\n      const searchFilters = await onSearch(value);\n      setFilters(searchFilters);\n\n      if (isPaginationEnabled) {\n        setCurrent?.(1);\n      }\n    }\n  };\n\n  const antdPagination = (): false | TablePaginationConfig => {\n    if (isPaginationEnabled) {\n      return {\n        itemRender: (page, type, element) => {\n          const link = createLinkForSyncWithLocation({\n            pagination: {\n              pageSize,\n              current: page,\n            },\n            sorters,\n            filters,\n          });\n\n          if (type === \"page\") {\n            return createElement(PaginationLink, {\n              to: link,\n              element: `${page}`,\n            });\n          }\n          if (type === \"next\" || type === \"prev\") {\n            return createElement(PaginationLink, {\n              to: link,\n              element: element,\n            });\n          }\n\n          if (type === \"jump-next\" || type === \"jump-prev\") {\n            const elementChildren = (element as React.ReactElement)?.props\n              ?.children;\n\n            return createElement(PaginationLink, {\n              to: link,\n              element:\n                Children.count(elementChildren) > 1\n                  ? createElement(Fragment, {}, elementChildren)\n                  : elementChildren,\n            });\n          }\n\n          return element;\n        },\n        pageSize,\n        current,\n        simple: !breakpoint.sm,\n        position: !breakpoint.sm ? [\"bottomCenter\"] : [\"bottomRight\"],\n        total: data?.total,\n      };\n    }\n\n    return false;\n  };\n\n  return {\n    searchFormProps: {\n      ...formSF.formProps,\n      onFinish,\n    },\n    tableProps: {\n      dataSource: data?.data,\n      loading: liveMode === \"auto\" ? isLoading : !isFetched,\n      onChange,\n      pagination: antdPagination(),\n      scroll: { x: true },\n    },\n    tableQueryResult,\n    sorters,\n    sorter,\n    filters,\n    setSorters,\n    setSorter,\n    setFilters,\n    current,\n    setCurrent,\n    pageSize,\n    setPageSize,\n    pageCount,\n    createLinkForSyncWithLocation,\n    overtime,\n  };\n};\n","import {\n  type CrudFilters,\n  type CrudOperators,\n  type CrudSorting,\n  type CrudFilter,\n  getDefaultFilter as getDefaultFilterCore,\n  getDefaultSortOrder as getDefaultSortOrderCore,\n  type ConditionalFilter,\n  type LogicalFilter,\n} from \"@refinedev/core\";\nimport type { TableProps } from \"antd\";\n\nexport type FilterValue = Parameters<\n  NonNullable<TableProps[\"onChange\"]>\n>[1][string];\nexport type SortOrder = NonNullable<TableProps[\"sortDirections\"]>[number];\nexport type SorterResult = Exclude<\n  Parameters<NonNullable<TableProps[\"onChange\"]>>[2],\n  any[]\n>;\n\nexport const getDefaultSortOrder = (\n  columnName: string,\n  sorter?: CrudSorting,\n): SortOrder | undefined => {\n  const sort = getDefaultSortOrderCore(columnName, sorter);\n\n  if (sort) {\n    return `${sort}end`;\n  }\n\n  return undefined;\n};\n\n/**\n * @deprecated getDefaultFilter moved to `@refinedev/core`. Use from `@refinedev/core`\n */\nexport const getDefaultFilter = (\n  columnName: string,\n  filters?: CrudFilters,\n  operatorType: CrudOperators = \"eq\",\n): CrudFilter[\"value\"] | undefined => {\n  return getDefaultFilterCore(columnName, filters, operatorType);\n};\n\nexport const mapAntdSorterToCrudSorting = (\n  sorter: SorterResult | SorterResult[],\n): CrudSorting => {\n  const crudSorting: CrudSorting = [];\n  if (Array.isArray(sorter)) {\n    sorter\n      .sort((a, b) => {\n        return ((a.column?.sorter as { multiple?: number }).multiple ?? 0) <\n          ((b.column?.sorter as { multiple?: number }).multiple ?? 0)\n          ? -1\n          : 0;\n      })\n      .map((item) => {\n        if (item.field && item.order) {\n          const field = Array.isArray(item.field)\n            ? item.field.join(\".\")\n            : `${item.field}`;\n\n          crudSorting.push({\n            field: `${item.columnKey ?? field}`,\n            order: item.order.replace(\"end\", \"\") as \"asc\" | \"desc\",\n          });\n        }\n      });\n  } else {\n    if (sorter.field && sorter.order) {\n      const field = Array.isArray(sorter.field)\n        ? sorter.field.join(\".\")\n        : `${sorter.field}`;\n\n      crudSorting.push({\n        field: `${sorter.columnKey ?? field}`,\n        order: sorter.order.replace(\"end\", \"\") as \"asc\" | \"desc\",\n      });\n    }\n  }\n\n  return crudSorting;\n};\n\nexport const mapAntdFilterToCrudFilter = (\n  tableFilters: Record<\n    string,\n    | FilterValue\n    | (string | number | boolean)\n    | (string | number | boolean)[]\n    | null\n  >,\n  prevFilters: CrudFilters,\n  initialFilters?: CrudFilters,\n): CrudFilters => {\n  const crudFilters: CrudFilters = [];\n  const mapInitialFilter: Record<string, CrudFilter> = (\n    initialFilters ?? []\n  ).reduce((acc, item) => {\n    const field =\n      (item as ConditionalFilter).key || (item as LogicalFilter).field;\n    return { ...acc, [field]: item };\n  }, {});\n\n  Object.keys(tableFilters).map((field) => {\n    const value = tableFilters[field];\n    const operator =\n      prevFilters\n        .filter((i) => i.operator !== \"or\")\n        .find((p: any) => p.field === field)?.operator ||\n      mapInitialFilter[field]?.operator;\n\n    if (operator !== \"or\" && operator !== \"and\") {\n      crudFilters.push({\n        field,\n        operator: operator ?? (Array.isArray(value) ? \"in\" : \"eq\"),\n        value,\n      });\n    }\n  });\n\n  return crudFilters;\n};\n","import { useLink, useRouterContext, useRouterType } from \"@refinedev/core\";\nimport React, { type ReactNode } from \"react\";\n\ninterface PaginationLinkProps {\n  to: string;\n  element: ReactNode;\n}\n\nexport const PaginationLink = ({ to, element }: PaginationLinkProps) => {\n  const { Link: LegacyLink } = useRouterContext();\n  const routerType = useRouterType();\n  const Link = useLink();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  return (\n    <ActiveLink\n      to={to}\n      replace={false}\n      onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n      }}\n    >\n      {element}\n    </ActiveLink>\n  );\n};\n","import { useTable } from \"@hooks\";\nimport type {\n  BaseKey,\n  BaseRecord,\n  HttpError,\n  UseFormProps,\n} from \"@refinedev/core\";\nimport type { ButtonProps } from \"antd\";\n\nimport type { useTableProps, useTableReturnType } from \"../useTable\";\nimport { type UseFormReturnType, useForm } from \"../../form/useForm\";\n\nexport type useEditableTableReturnType<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TSearchVariables = unknown,\n  TData extends BaseRecord = TQueryFnData,\n> = useTableReturnType<TData, TError, TSearchVariables> &\n  UseFormReturnType<TQueryFnData, TError, TVariables> & {\n    saveButtonProps: ButtonProps & {\n      onClick: () => void;\n    };\n    cancelButtonProps: ButtonProps & {\n      onClick: () => void;\n    };\n    editButtonProps: (id: BaseKey) => ButtonProps & {\n      onClick: () => void;\n    };\n    isEditing: (id: BaseKey) => boolean;\n  };\n\ntype useEditableTableProps<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TSearchVariables = unknown,\n  TData extends BaseRecord = TQueryFnData,\n> = Omit<\n  useTableProps<TQueryFnData, TError, TSearchVariables, TData>,\n  \"successNotification\" | \"errorNotification\"\n> &\n  UseFormProps<TQueryFnData, TError, TVariables> & {\n    /**\n     * When true, row will be closed after successful submit.\n     */\n    autoSubmitClose?: boolean;\n  };\n\n/**\n * `useEditeableTable` allows you to implement edit feature on the table with ease,\n * on top of all the features that {@link https://refine.dev/docs/api-reference/core/hooks/useTable/ `useTable`} provides.\n * `useEditableTable` return properties that can be used on Ant Design's {@link https://ant.design/components/table/ `<Table>`}\n * and {@link https://ant.design/components/form/ `<Form>`} components.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/table/useTable/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params\n * @typeParam TSearchVariables - Values for search params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\nexport const useEditableTable = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TSearchVariables = unknown,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  autoSubmitClose = true,\n  ...props\n}: useEditableTableProps<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TSearchVariables,\n  TData\n> = {}): useEditableTableReturnType<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TSearchVariables,\n  TData\n> => {\n  const table = useTable<TQueryFnData, TError, TSearchVariables, TData>({\n    ...props,\n    successNotification: undefined,\n    errorNotification: undefined,\n  });\n  const edit = useForm<TQueryFnData, TError, TVariables>({\n    ...props,\n    action: \"edit\",\n    redirect: false,\n  });\n\n  const { id: editId, setId, saveButtonProps } = edit;\n\n  const cancelButtonProps = {\n    onClick: () => {\n      setId(undefined);\n    },\n  };\n\n  const editButtonProps = (id: BaseKey) => {\n    return {\n      onClick: () => setId(id),\n    };\n  };\n\n  const isEditing = (id: BaseKey) => id === editId;\n\n  return {\n    ...table,\n    ...edit,\n    formProps: {\n      ...edit.formProps,\n      onFinish: async (values) => {\n        const result = await edit.onFinish(values);\n        if (autoSubmitClose) {\n          setId(undefined);\n        }\n        return result;\n      },\n    },\n    saveButtonProps,\n    cancelButtonProps,\n    editButtonProps,\n    isEditing,\n  };\n};\n","import type { SelectProps } from \"antd/lib/select\";\nimport type { QueryObserverResult } from \"@tanstack/react-query\";\n\nimport {\n  useSelect as useSelectCore,\n  type BaseRecord,\n  type GetManyResponse,\n  type GetListResponse,\n  type HttpError,\n  type UseSelectProps,\n  type BaseOption,\n} from \"@refinedev/core\";\n\nexport type UseSelectReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TOption extends BaseOption = BaseOption,\n> = {\n  selectProps: SelectProps<TOption>;\n  queryResult: QueryObserverResult<GetListResponse<TData>>;\n  defaultValueQueryResult: QueryObserverResult<GetManyResponse<TData>>;\n};\n\n/**\n * `useSelect` hook allows you to manage an Ant Design {@link https://ant.design/components/select/ Select} component when records in a resource needs to be used as select options.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/field/useSelect/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useSelect = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n  TOption extends BaseOption = BaseOption,\n>(\n  props: UseSelectProps<TQueryFnData, TError, TData>,\n): UseSelectReturnType<TData, TOption> => {\n  const { queryResult, defaultValueQueryResult, onSearch, options } =\n    useSelectCore<TQueryFnData, TError, TData, TOption>(props);\n\n  return {\n    selectProps: {\n      options,\n      onSearch,\n      loading: defaultValueQueryResult.isFetching,\n      showSearch: true,\n      filterOption: false,\n    },\n    queryResult,\n    defaultValueQueryResult,\n  };\n};\n","import type { QueryObserverResult } from \"@tanstack/react-query\";\nimport type { Checkbox } from \"antd\";\n\nimport {\n  type BaseRecord,\n  type GetListResponse,\n  type HttpError,\n  type UseSelectProps,\n  useSelect,\n  type BaseKey,\n  pickNotDeprecated,\n  type BaseOption,\n} from \"@refinedev/core\";\n\nexport type UseCheckboxGroupReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TOption extends BaseOption = BaseOption,\n> = {\n  checkboxGroupProps: Omit<\n    React.ComponentProps<typeof Checkbox.Group>,\n    \"options\"\n  > & {\n    options: TOption[];\n  };\n  queryResult: QueryObserverResult<GetListResponse<TData>>;\n};\n\ntype UseCheckboxGroupProps<TQueryFnData, TError, TData> = Omit<\n  UseSelectProps<TQueryFnData, TError, TData>,\n  \"defaultValue\"\n> & {\n  /**\n   * Sets the default value\n   */\n  defaultValue?: BaseKey[];\n};\n\n/**\n * `useCheckboxGroup` hook allows you to manage an Ant Design {@link https://ant.design/components/checkbox/#components-checkbox-demo-group Checkbox.Group} component when records in a resource needs to be used as checkbox options.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/field/useCheckboxGroup/} for more details\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useCheckboxGroup = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n  TOption extends BaseOption = BaseOption,\n>({\n  resource,\n  sort,\n  sorters,\n  filters,\n  optionLabel,\n  optionValue,\n  queryOptions,\n  fetchSize,\n  pagination,\n  liveMode,\n  defaultValue,\n  onLiveEvent,\n  liveParams,\n  meta,\n  metaData,\n  dataProviderName,\n}: UseCheckboxGroupProps<\n  TQueryFnData,\n  TError,\n  TData\n>): UseCheckboxGroupReturnType<TData, TOption> => {\n  const { queryResult, options } = useSelect<\n    TQueryFnData,\n    TError,\n    TData,\n    TOption\n  >({\n    resource,\n    sort,\n    sorters,\n    filters,\n    optionLabel,\n    optionValue,\n    queryOptions,\n    fetchSize,\n    pagination,\n    liveMode,\n    defaultValue,\n    onLiveEvent,\n    liveParams,\n    meta: pickNotDeprecated(meta, metaData),\n    metaData: pickNotDeprecated(meta, metaData),\n    dataProviderName,\n  });\n  return {\n    checkboxGroupProps: {\n      options,\n      defaultValue,\n    },\n    queryResult,\n  };\n};\n","import type { QueryObserverResult } from \"@tanstack/react-query\";\nimport type { Radio } from \"antd\";\n\nimport {\n  type BaseKey,\n  type BaseOption,\n  type BaseRecord,\n  type GetListResponse,\n  type HttpError,\n  pickNotDeprecated,\n  useSelect,\n  type UseSelectProps,\n} from \"@refinedev/core\";\n\nexport type UseRadioGroupReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TOption extends BaseOption = BaseOption,\n> = {\n  radioGroupProps: Omit<React.ComponentProps<typeof Radio.Group>, \"options\"> & {\n    options: TOption[];\n  };\n  queryResult: QueryObserverResult<GetListResponse<TData>>;\n};\n\ntype UseRadioGroupProps<TQueryFnData, TError, TData> = Omit<\n  UseSelectProps<TQueryFnData, TError, TData>,\n  \"defaultValue\"\n> & {\n  /**\n   * Sets the default value\n   */\n  defaultValue?: BaseKey;\n};\n\n/**\n * `useRadioGroup` hook allows you to manage an Ant Design {@link https://ant.design/components/radio/#components-radio-demo-radiogroup-with-name Radio.Group} component when records in a resource needs to be used as radio options.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/field/useRadioGroup/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useRadioGroup = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n  TOption extends BaseOption = BaseOption,\n>({\n  resource,\n  sort,\n  sorters,\n  filters,\n  optionLabel,\n  optionValue,\n  queryOptions,\n  fetchSize,\n  pagination,\n  liveMode,\n  defaultValue,\n  onLiveEvent,\n  liveParams,\n  meta,\n  metaData,\n  dataProviderName,\n}: UseRadioGroupProps<TQueryFnData, TError, TData>): UseRadioGroupReturnType<\n  TData,\n  TOption\n> => {\n  const { queryResult, options } = useSelect<\n    TQueryFnData,\n    TError,\n    TData,\n    TOption\n  >({\n    resource,\n    sort,\n    sorters,\n    filters,\n    optionLabel,\n    optionValue,\n    queryOptions,\n    fetchSize,\n    pagination,\n    liveMode,\n    defaultValue,\n    onLiveEvent,\n    liveParams,\n    meta: pickNotDeprecated(meta, metaData),\n    metaData: pickNotDeprecated(meta, metaData),\n    dataProviderName,\n  });\n\n  return {\n    radioGroupProps: {\n      options,\n      defaultValue,\n    },\n    queryResult,\n  };\n};\n","import React from \"react\";\nimport {\n  type ButtonProps,\n  notification,\n  type UploadProps,\n  Progress,\n} from \"antd\";\nimport {\n  useTranslate,\n  useResource,\n  type BaseRecord,\n  type HttpError,\n  useImport as useImportCore,\n  type UseImportReturnType,\n  type ImportOptions,\n  pickNotDeprecated,\n} from \"@refinedev/core\";\n\n/**\n * `useImport` hook allows you to handle your csv import logic easily.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/import/useImport} for more details.\n *\n * @typeParam TItem - Interface of parsed csv data\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useImport = <\n  TItem = any,\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = any,\n>({\n  resource: resourceFromProp,\n  resourceName,\n  mapData = (item) => item as unknown as TVariables,\n  paparseOptions,\n  batchSize = Number.MAX_SAFE_INTEGER,\n  onFinish,\n  meta,\n  metaData,\n  dataProviderName,\n  onProgress: onProgressFromProp,\n}: ImportOptions<TItem, TVariables, TData> = {}): Omit<\n  UseImportReturnType<TData, TVariables, TError>,\n  \"handleChange\" | \"inputProps\"\n> & {\n  uploadProps: UploadProps;\n  buttonProps: ButtonProps;\n} => {\n  const t = useTranslate();\n\n  const { resource } = useResource(resourceFromProp ?? resourceName);\n\n  const { mutationResult, isLoading, handleChange } = useImportCore<\n    TItem,\n    TData,\n    TError,\n    TVariables\n  >({\n    resource: resource?.identifier ?? resource?.name,\n    mapData,\n    paparseOptions,\n    batchSize,\n    meta: pickNotDeprecated(meta, metaData),\n    metaData: pickNotDeprecated(meta, metaData),\n    dataProviderName,\n    onFinish,\n    onProgress:\n      onProgressFromProp ??\n      (({ totalAmount, processedAmount }) => {\n        if (totalAmount > 0 && processedAmount > 0) {\n          const description = (\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                marginTop: \"-7px\",\n              }}\n            >\n              <Progress\n                type=\"circle\"\n                percent={Math.floor((processedAmount / totalAmount) * 100)}\n                size={50}\n                strokeColor=\"#1890ff\"\n                status=\"normal\"\n              />\n              <span style={{ marginLeft: 8, width: \"100%\" }}>\n                {t(\n                  \"notifications.importProgress\",\n                  {\n                    processed: processedAmount,\n                    total: totalAmount,\n                  },\n                  `Importing: ${processedAmount}/${totalAmount}`,\n                )}\n              </span>\n            </div>\n          );\n\n          notification.open({\n            description,\n            message: null,\n            key: `${resource}-import`,\n            duration: 0,\n          });\n\n          if (processedAmount >= totalAmount) {\n          }\n\n          if (processedAmount === totalAmount) {\n            setTimeout(() => {\n              notification.destroy(`${resource}-import`);\n            }, 4500);\n          }\n        }\n      }),\n  });\n\n  return {\n    uploadProps: {\n      onChange: handleChange,\n      beforeUpload: () => false,\n      showUploadList: false,\n      accept: \".csv\",\n    },\n    buttonProps: {\n      type: \"default\",\n      loading: isLoading,\n    },\n    mutationResult,\n    isLoading,\n  };\n};\n","import { Children, createElement, Fragment } from \"react\";\nimport { type ListProps, type FormProps, Form, Grid } from \"antd\";\n\nimport {\n  type BaseRecord,\n  type CrudFilters,\n  type HttpError,\n  useTable as useTableCore,\n  type useTableProps as useTablePropsCore,\n  type useTableReturnType,\n  pickNotDeprecated,\n} from \"@refinedev/core\";\nimport { useLiveMode } from \"@refinedev/core\";\nimport { PaginationLink } from \"@hooks/table/useTable/paginationLink\";\nimport type { PaginationConfig } from \"antd/lib/pagination\";\n\nexport type useSimpleListProps<TQueryFnData, TError, TSearchVariables, TData> =\n  useTablePropsCore<TQueryFnData, TError, TData> & {\n    onSearch?: (data: TSearchVariables) => CrudFilters | Promise<CrudFilters>;\n  };\n\nexport type useSimpleListReturnType<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TSearchVariables = unknown,\n  TData extends BaseRecord = TQueryFnData,\n> = Omit<useTableReturnType<TData>, \"tableQueryResult\"> & {\n  listProps: ListProps<TData>;\n  queryResult: useTableReturnType[\"tableQueryResult\"];\n  searchFormProps: FormProps<TSearchVariables>;\n};\n\n/**\n * By using `useSimpleList` you get props for your records from API in accordance with Ant Design {@link https://ant.design/components/list/ `<List>`} component.\n * All features such as pagination, sorting come out of the box.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/list/useSimpleList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TSearchVariables - Antd form values\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useSimpleList = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TSearchVariables = unknown,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource,\n  initialCurrent,\n  initialPageSize,\n  pagination,\n  hasPagination = true,\n  initialSorter,\n  permanentSorter,\n  initialFilter,\n  permanentFilter,\n  defaultSetFilterBehavior,\n  filters: filtersFromProp,\n  sorters: sortersFromProp,\n  onSearch,\n  queryOptions,\n  syncWithLocation,\n  successNotification,\n  errorNotification,\n  liveMode: liveModeFromProp,\n  onLiveEvent,\n  liveParams,\n  meta,\n  metaData,\n  dataProviderName,\n}: useSimpleListProps<\n  TQueryFnData,\n  TError,\n  TSearchVariables,\n  TData\n> = {}): useSimpleListReturnType<TData, TSearchVariables> => {\n  const {\n    sorters,\n    sorter,\n    filters,\n    current,\n    pageSize,\n    pageCount,\n    setFilters,\n    setCurrent,\n    setPageSize,\n    setSorter,\n    setSorters,\n    createLinkForSyncWithLocation,\n    tableQueryResult: queryResult,\n    overtime,\n  } = useTableCore({\n    resource,\n    initialSorter,\n    permanentSorter,\n    initialFilter,\n    permanentFilter,\n    filters: filtersFromProp,\n    sorters: sortersFromProp,\n    defaultSetFilterBehavior,\n    initialCurrent,\n    initialPageSize,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    meta: pickNotDeprecated(meta, metaData),\n    metaData: pickNotDeprecated(meta, metaData),\n    syncWithLocation,\n    dataProviderName,\n    pagination,\n    hasPagination,\n  });\n\n  const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n  const isPaginationEnabled =\n    (pagination?.mode ?? hasPaginationString) !== \"off\";\n\n  const breakpoint = Grid.useBreakpoint();\n\n  const liveMode = useLiveMode(liveModeFromProp);\n\n  const [form] = Form.useForm<TSearchVariables>();\n\n  const { data, isFetched, isLoading } = queryResult;\n\n  const onChange = (page: number, pageSize?: number): void => {\n    if (isPaginationEnabled) {\n      setCurrent(page);\n      setPageSize(pageSize || 10);\n    }\n  };\n\n  const onFinish = async (values: TSearchVariables) => {\n    if (onSearch) {\n      const searchFilters = await onSearch(values);\n      if (isPaginationEnabled) {\n        setCurrent?.(1);\n      }\n      return setFilters(searchFilters);\n    }\n  };\n\n  const antdPagination = (): false | PaginationConfig => {\n    if (isPaginationEnabled) {\n      return {\n        itemRender: (page, type, element) => {\n          const link = createLinkForSyncWithLocation({\n            pagination: {\n              pageSize,\n              current: page,\n            },\n            sorters,\n            filters,\n          });\n\n          if (type === \"page\") {\n            return createElement(PaginationLink, {\n              to: link,\n              element: `${page}`,\n            });\n          }\n          if (type === \"next\" || type === \"prev\") {\n            return createElement(PaginationLink, {\n              to: link,\n              element: element,\n            });\n          }\n\n          if (type === \"jump-next\" || type === \"jump-prev\") {\n            const elementChildren = (element as React.ReactElement)?.props\n              ?.children;\n\n            return createElement(PaginationLink, {\n              to: link,\n              element:\n                Children.count(elementChildren) > 1\n                  ? createElement(Fragment, {}, elementChildren)\n                  : elementChildren,\n            });\n          }\n\n          return element;\n        },\n        pageSize,\n        current,\n        simple: !breakpoint.sm,\n        total: data?.total,\n        onChange,\n      };\n    }\n\n    return false;\n  };\n\n  return {\n    searchFormProps: {\n      form,\n      onFinish,\n    },\n    listProps: {\n      dataSource: data?.data,\n      loading: liveMode === \"auto\" ? isLoading : !isFetched,\n      pagination: antdPagination(),\n    },\n    queryResult,\n    filters,\n    setFilters,\n    sorter,\n    setSorter,\n    sorters,\n    setSorters,\n    current,\n    setCurrent,\n    pageSize,\n    setPageSize,\n    pageCount,\n    createLinkForSyncWithLocation,\n    overtime,\n  };\n};\n","import { useCallback, useMemo, useState } from \"react\";\nimport type { UploadChangeParam } from \"antd/lib/upload\";\n\nexport type UseFileUploadStateType = () => {\n  isLoading: boolean;\n  onChange: (info: UploadChangeParam) => void;\n};\n\nexport const useFileUploadState: UseFileUploadStateType = () => {\n  const [isLoading, setIsloading] = useState(false);\n\n  const onChange = useCallback((info: UploadChangeParam) => {\n    const fileListLoadings = mapStatusToLoading(info.fileList);\n\n    if (fileListLoadings.includes(true)) {\n      setIsloading(true);\n    } else {\n      setIsloading(false);\n    }\n  }, []);\n\n  return useMemo(() => ({ isLoading, onChange }), [isLoading]);\n};\n\nconst mapStatusToLoading = (files: UploadChangeParam[\"fileList\"]) => {\n  return files.map((file) => {\n    switch (file.status) {\n      case \"uploading\":\n        return true;\n      default:\n        return false;\n    }\n  });\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"@contexts\";\n\nexport type UseSiderVisibleType = {\n  siderVisible: boolean;\n  drawerSiderVisible: boolean;\n  setSiderVisible: (visible: boolean) => void;\n  setDrawerSiderVisible: (visible: boolean) => void;\n};\n\n/**\n * @deprecated Please use `useThemedLayoutContext` instead.\n */\nexport const useSiderVisible = (): UseSiderVisibleType => {\n  const {\n    mobileSiderOpen,\n    siderCollapsed,\n    setMobileSiderOpen,\n    setSiderCollapsed,\n  } = useContext(ThemedLayoutContext);\n\n  return {\n    siderVisible: mobileSiderOpen,\n    setSiderVisible: setMobileSiderOpen,\n    drawerSiderVisible: siderCollapsed,\n    setDrawerSiderVisible: setSiderCollapsed,\n  };\n};\n","import React, { type ReactNode, useState } from \"react\";\n\nimport type { IThemedLayoutContext } from \"./IThemedLayoutContext\";\n\nexport const ThemedLayoutContext = React.createContext<IThemedLayoutContext>({\n  siderCollapsed: false,\n  mobileSiderOpen: false,\n  setSiderCollapsed: () => undefined,\n  setMobileSiderOpen: () => undefined,\n});\n\nexport const ThemedLayoutContextProvider: React.FC<{\n  children: ReactNode;\n  initialSiderCollapsed?: boolean;\n}> = ({ children, initialSiderCollapsed }) => {\n  const [siderCollapsed, setSiderCollapsed] = useState(\n    initialSiderCollapsed ?? false,\n  );\n  const [mobileSiderOpen, setMobileSiderOpen] = useState(false);\n\n  return (\n    <ThemedLayoutContext.Provider\n      value={{\n        siderCollapsed,\n        mobileSiderOpen,\n        setSiderCollapsed,\n        setMobileSiderOpen,\n      }}\n    >\n      {children}\n    </ThemedLayoutContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"@contexts\";\nimport type { IThemedLayoutContext } from \"@contexts/themedLayoutContext/IThemedLayoutContext\";\n\nexport type UseThemedLayoutContextType = IThemedLayoutContext;\n\nexport const useThemedLayoutContext = (): UseThemedLayoutContextType => {\n  const {\n    mobileSiderOpen,\n    siderCollapsed,\n    setMobileSiderOpen,\n    setSiderCollapsed,\n  } = useContext(ThemedLayoutContext);\n\n  return {\n    mobileSiderOpen,\n    siderCollapsed,\n    setMobileSiderOpen,\n    setSiderCollapsed,\n  };\n};\n","import type { NotificationProvider } from \"@refinedev/core\";\nimport { App, notification as staticNotification } from \"antd\";\nimport React from \"react\";\n\nimport { UndoableNotification } from \"@components/undoableNotification\";\n\n/**\n * @deprecated `notificationProvider` is deprecated due to not being compatible with theme changes in Ant Design. Please use `useNotificationProvider` export as your notification provider.\n * @see https://refine.dev/docs/api-reference/antd/theming/#usenotificationprovider-compatible-with-theme\n */\n\nexport const notificationProvider: NotificationProvider = {\n  open: ({\n    key,\n    message,\n    description,\n    type,\n    cancelMutation,\n    undoableTimeout,\n  }) => {\n    if (type === \"progress\") {\n      staticNotification.open({\n        key,\n        description: (\n          <UndoableNotification\n            notificationKey={key}\n            message={message}\n            cancelMutation={() => {\n              cancelMutation?.();\n              staticNotification.destroy(key ?? \"\");\n            }}\n            undoableTimeout={undoableTimeout}\n          />\n        ),\n        message: null,\n        duration: 0,\n        closeIcon: <></>,\n      });\n    } else {\n      staticNotification.open({\n        key,\n        description: message,\n        message: description ?? null,\n        type,\n      });\n    }\n  },\n  close: (key) => staticNotification.destroy(key),\n};\n\nexport const useNotificationProvider = (): NotificationProvider => {\n  const { notification: notificationFromContext } = App.useApp();\n  const notification =\n    \"open\" in notificationFromContext\n      ? notificationFromContext\n      : staticNotification;\n\n  const notificationProvider: NotificationProvider = {\n    open: ({\n      key,\n      message,\n      description,\n      type,\n      cancelMutation,\n      undoableTimeout,\n    }) => {\n      if (type === \"progress\") {\n        notification.open({\n          key,\n          description: (\n            <UndoableNotification\n              notificationKey={key}\n              message={message}\n              cancelMutation={() => {\n                cancelMutation?.();\n                notification.destroy(key ?? \"\");\n              }}\n              undoableTimeout={undoableTimeout}\n            />\n          ),\n          message: null,\n          duration: 0,\n          closeIcon: <></>,\n        });\n      } else {\n        notification.open({\n          key,\n          description: message,\n          message: description ?? null,\n          type,\n        });\n      }\n    },\n    close: (key) => notification.destroy(key),\n  };\n\n  return notificationProvider;\n};\n","import React from \"react\";\nimport { Button, Progress } from \"antd\";\nimport type { OpenNotificationParams } from \"@refinedev/core\";\nimport { UndoOutlined } from \"@ant-design/icons\";\n\nexport type UndoableNotificationProps = {\n  notificationKey: OpenNotificationParams[\"key\"];\n  message: OpenNotificationParams[\"message\"];\n  cancelMutation: OpenNotificationParams[\"cancelMutation\"];\n  undoableTimeout: OpenNotificationParams[\"undoableTimeout\"];\n};\n\nexport const UndoableNotification: React.FC<UndoableNotificationProps> = ({\n  message,\n  cancelMutation,\n  undoableTimeout,\n}) => (\n  <div\n    style={{\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      marginTop: \"-7px\",\n    }}\n  >\n    <Progress\n      type=\"circle\"\n      percent={(undoableTimeout ?? 0) * 20}\n      format={(time) => time && time / 20}\n      size={50}\n      strokeColor=\"#1890ff\"\n      status=\"normal\"\n    />\n    <span style={{ marginLeft: 8, width: \"100%\" }}>{message}</span>\n    <Button\n      style={{ flexShrink: 0 }}\n      onClick={cancelMutation}\n      disabled={undoableTimeout === 0}\n      // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n      icon={<UndoOutlined />}\n    />\n  </div>\n);\n","import React from \"react\";\nimport { Grid, Layout as AntdLayout } from \"antd\";\n\nimport { Sider as DefaultSider } from \"./sider\";\nimport { Header as DefaultHeader } from \"./header\";\nimport type { RefineLayoutLayoutProps } from \"./types\";\n\n/**\n * @deprecated use `<ThemedLayout>` instead with 100% backward compatibility.\n * @see https://refine.dev/docs/api-reference/antd/components/antd-themed-layout\n **/\nexport const Layout: React.FC<RefineLayoutLayoutProps> = ({\n  children,\n  Header,\n  Sider,\n  Title,\n  Footer,\n  OffLayoutArea,\n}) => {\n  const breakpoint = Grid.useBreakpoint();\n  const SiderToRender = Sider ?? DefaultSider;\n  const HeaderToRender = Header ?? DefaultHeader;\n  const isSmall = typeof breakpoint.sm === \"undefined\" ? true : breakpoint.sm;\n\n  return (\n    <AntdLayout style={{ minHeight: \"100vh\" }}>\n      <SiderToRender Title={Title} />\n      <AntdLayout>\n        <HeaderToRender />\n        <AntdLayout.Content>\n          <div\n            style={{\n              minHeight: 360,\n              padding: isSmall ? 24 : 12,\n            }}\n          >\n            {children}\n          </div>\n          {OffLayoutArea && <OffLayoutArea />}\n        </AntdLayout.Content>\n        {Footer && <Footer />}\n      </AntdLayout>\n    </AntdLayout>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Layout, Menu, Grid, ConfigProvider, Drawer, Button } from \"antd\";\nimport {\n  DashboardOutlined,\n  LogoutOutlined,\n  UnorderedListOutlined,\n  BarsOutlined,\n} from \"@ant-design/icons\";\nimport {\n  useTranslate,\n  useLogout,\n  useTitle,\n  CanAccess,\n  type ITreeMenu,\n  useIsExistAuthentication,\n  useRouterContext,\n  useMenu,\n  useRefineContext,\n  useLink,\n  useRouterType,\n  useActiveAuthProvider,\n  pickNotDeprecated,\n  useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport { Title as DefaultTitle } from \"@components\";\n\nimport { drawerButtonStyles } from \"./styles\";\nimport type { RefineLayoutSiderProps } from \"../types\";\n\nexport const Sider: React.FC<RefineLayoutSiderProps> = ({\n  Title: TitleFromProps,\n  render,\n  meta,\n}) => {\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const [drawerOpen, setDrawerOpen] = useState<boolean>(false);\n  const isExistAuthentication = useIsExistAuthentication();\n  const routerType = useRouterType();\n  const NewLink = useLink();\n  const { warnWhen, setWarnWhen } = useWarnAboutChange();\n  const { Link: LegacyLink } = useRouterContext();\n  const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n  const TitleFromContext = useTitle();\n  const translate = useTranslate();\n  const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n  const breakpoint = Grid.useBreakpoint();\n  const { hasDashboard } = useRefineContext();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: mutateLogout } = useLogout({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const isMobile =\n    typeof breakpoint.lg === \"undefined\" ? false : !breakpoint.lg;\n\n  const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n  const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n    return tree.map((item: ITreeMenu) => {\n      const {\n        icon,\n        label,\n        route,\n        key,\n        name,\n        children,\n        parentName,\n        meta,\n        options,\n      } = item;\n\n      if (children.length > 0) {\n        return (\n          <CanAccess\n            key={item.key}\n            resource={name.toLowerCase()}\n            action=\"list\"\n            params={{\n              resource: item,\n            }}\n          >\n            <Menu.SubMenu\n              key={item.key}\n              // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n              icon={icon ?? <UnorderedListOutlined />}\n              title={label}\n            >\n              {renderTreeView(children, selectedKey)}\n            </Menu.SubMenu>\n          </CanAccess>\n        );\n      }\n      const isSelected = key === selectedKey;\n      const isRoute = !(\n        pickNotDeprecated(meta?.parent, options?.parent, parentName) !==\n          undefined && children.length === 0\n      );\n      return (\n        <CanAccess\n          key={item.key}\n          resource={name.toLowerCase()}\n          action=\"list\"\n          params={{\n            resource: item,\n          }}\n        >\n          <Menu.Item\n            key={item.key}\n            style={{\n              fontWeight: isSelected ? \"bold\" : \"normal\",\n            }}\n            // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n            icon={icon ?? (isRoute && <UnorderedListOutlined />)}\n          >\n            <Link to={route ?? \"\"}>{label}</Link>\n            {!collapsed && isSelected && (\n              <div className=\"ant-menu-tree-arrow\" />\n            )}\n          </Menu.Item>\n        </CanAccess>\n      );\n    });\n  };\n\n  const handleLogout = () => {\n    if (warnWhen) {\n      const confirm = window.confirm(\n        translate(\n          \"warnWhenUnsavedChanges\",\n          \"Are you sure you want to leave? You have unsaved changes.\",\n        ),\n      );\n\n      if (confirm) {\n        setWarnWhen(false);\n        mutateLogout();\n      }\n    } else {\n      mutateLogout();\n    }\n  };\n\n  const logout = isExistAuthentication && (\n    // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n    <Menu.Item key=\"logout\" onClick={handleLogout} icon={<LogoutOutlined />}>\n      {translate(\"buttons.logout\", \"Logout\")}\n    </Menu.Item>\n  );\n\n  const dashboard = hasDashboard ? (\n    <Menu.Item\n      key=\"dashboard\"\n      style={{\n        fontWeight: selectedKey === \"/\" ? \"bold\" : \"normal\",\n      }}\n      // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n      icon={<DashboardOutlined />}\n    >\n      <Link to=\"/\">{translate(\"dashboard.title\", \"Dashboard\")}</Link>\n      {!collapsed && selectedKey === \"/\" && (\n        <div className=\"ant-menu-tree-arrow\" />\n      )}\n    </Menu.Item>\n  ) : null;\n\n  const items = renderTreeView(menuItems, selectedKey);\n\n  const renderSider = () => {\n    if (render) {\n      return render({\n        dashboard,\n        items,\n        logout,\n        collapsed,\n      });\n    }\n    return (\n      <>\n        {dashboard}\n        {items}\n        {logout}\n      </>\n    );\n  };\n\n  const renderMenu = () => {\n    return (\n      <>\n        <Menu\n          theme=\"dark\"\n          selectedKeys={selectedKey ? [selectedKey] : []}\n          defaultOpenKeys={defaultOpenKeys}\n          mode=\"inline\"\n          onClick={() => {\n            setDrawerOpen(false);\n            if (!breakpoint.lg) {\n              setCollapsed(true);\n            }\n          }}\n        >\n          {renderSider()}\n        </Menu>\n      </>\n    );\n  };\n\n  const renderDrawerSider = () => {\n    return (\n      <>\n        <Drawer\n          open={drawerOpen}\n          onClose={() => setDrawerOpen(false)}\n          placement=\"left\"\n          closable={false}\n          width={200}\n          bodyStyle={{\n            padding: 0,\n          }}\n          maskClosable={true}\n        >\n          <Layout>\n            <Layout.Sider style={{ height: \"100vh\", overflow: \"hidden\" }}>\n              <RenderToTitle collapsed={false} />\n              {renderMenu()}\n            </Layout.Sider>\n          </Layout>\n        </Drawer>\n        <Button\n          style={drawerButtonStyles}\n          size=\"large\"\n          onClick={() => setDrawerOpen(true)}\n          // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n          icon={<BarsOutlined />}\n        />\n      </>\n    );\n  };\n\n  const renderContent = () => {\n    if (isMobile) {\n      return renderDrawerSider();\n    }\n\n    return (\n      <Layout.Sider\n        collapsible\n        collapsed={collapsed}\n        onCollapse={(collapsed: boolean): void => setCollapsed(collapsed)}\n        collapsedWidth={80}\n        breakpoint=\"lg\"\n      >\n        <RenderToTitle collapsed={collapsed} />\n        {renderMenu()}\n      </Layout.Sider>\n    );\n  };\n\n  return (\n    <ConfigProvider\n      theme={{\n        components: {\n          Menu: {\n            colorItemBg: \"transparent\",\n            colorItemText: \"#fff\",\n            colorItemTextSelected: \"#fff\",\n            colorItemBgSelected: \"transparent\",\n            colorItemTextHover: \"#fff\",\n          },\n        },\n      }}\n    >\n      {renderContent()}\n    </ConfigProvider>\n  );\n};\n","import type { CSSProperties } from \"react\";\n\nexport const drawerButtonStyles: CSSProperties = {\n  borderTopLeftRadius: 0,\n  borderBottomLeftRadius: 0,\n  position: \"fixed\",\n  top: 64,\n  zIndex: 999,\n};\n","import { useActiveAuthProvider, useGetIdentity } from \"@refinedev/core\";\nimport { Avatar, Layout as AntdLayout, Space, Typography } from \"antd\";\nimport React from \"react\";\nimport type { RefineLayoutHeaderProps } from \"../types\";\n\nexport const Header: React.FC<RefineLayoutHeaderProps> = () => {\n  const authProvider = useActiveAuthProvider();\n  const { data: user } = useGetIdentity({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const shouldRenderHeader = user && (user.name || user.avatar);\n\n  return shouldRenderHeader ? (\n    <AntdLayout.Header\n      style={{\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        padding: \"0px 24px\",\n        height: \"64px\",\n      }}\n    >\n      <Space style={{ marginLeft: \"8px\" }}>\n        {user?.name && (\n          <Typography.Text style={{ color: \"white\" }} strong>\n            {user.name}\n          </Typography.Text>\n        )}\n        {user?.avatar && <Avatar src={user?.avatar} alt={user?.name} />}\n      </Space>\n    </AntdLayout.Header>\n  ) : null;\n};\n","import React from \"react\";\nimport {\n  type TitleProps,\n  useRouterContext,\n  useRouterType,\n  useLink,\n} from \"@refinedev/core\";\n\nexport const Title: React.FC<TitleProps> = ({ collapsed }) => {\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  return (\n    <ActiveLink to=\"/\">\n      {collapsed ? (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <img\n            src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine-mini.svg\"\n            alt=\"Refine\"\n            style={{\n              margin: \"0 auto\",\n              padding: \"12px 0\",\n              maxHeight: \"65.5px\",\n            }}\n          />\n        </div>\n      ) : (\n        <img\n          src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n          alt=\"Refine\"\n          style={{\n            width: \"200px\",\n            padding: \"12px 24px\",\n          }}\n        />\n      )}\n    </ActiveLink>\n  );\n};\n","import React from \"react\";\nimport { Grid, Layout as AntdLayout } from \"antd\";\n\nimport { ThemedSider as DefaultSider } from \"./sider\";\nimport { ThemedHeader as DefaultHeader } from \"./header\";\nimport type { RefineThemedLayoutProps } from \"./types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/antd/components/antd-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedLayout: React.FC<RefineThemedLayoutProps> = ({\n  children,\n  Header,\n  Sider,\n  Title,\n  Footer,\n  OffLayoutArea,\n}) => {\n  const breakpoint = Grid.useBreakpoint();\n  const SiderToRender = Sider ?? DefaultSider;\n  const HeaderToRender = Header ?? DefaultHeader;\n  const isSmall = typeof breakpoint.sm === \"undefined\" ? true : breakpoint.sm;\n\n  return (\n    <AntdLayout style={{ minHeight: \"100vh\" }}>\n      <SiderToRender Title={Title} />\n      <AntdLayout>\n        <HeaderToRender />\n        <AntdLayout.Content>\n          <div\n            style={{\n              minHeight: 360,\n              padding: isSmall ? 24 : 12,\n            }}\n          >\n            {children}\n          </div>\n          {OffLayoutArea && <OffLayoutArea />}\n        </AntdLayout.Content>\n        {Footer && <Footer />}\n      </AntdLayout>\n    </AntdLayout>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Layout, Menu, Grid, Drawer, Button, theme } from \"antd\";\nimport {\n  DashboardOutlined,\n  LogoutOutlined,\n  UnorderedListOutlined,\n  BarsOutlined,\n  LeftOutlined,\n  RightOutlined,\n} from \"@ant-design/icons\";\nimport {\n  useTranslate,\n  useLogout,\n  useTitle,\n  CanAccess,\n  type ITreeMenu,\n  useIsExistAuthentication,\n  useRouterContext,\n  useMenu,\n  useRefineContext,\n  useLink,\n  useRouterType,\n  useActiveAuthProvider,\n  pickNotDeprecated,\n  useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport { drawerButtonStyles } from \"./styles\";\nimport type { RefineThemedLayoutSiderProps } from \"../types\";\nimport { ThemedTitle } from \"@components\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/antd/components/antd-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedSider: React.FC<RefineThemedLayoutSiderProps> = ({\n  Title: TitleFromProps,\n  render,\n  meta,\n}) => {\n  const { token } = theme.useToken();\n\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const [drawerOpen, setDrawerOpen] = useState<boolean>(false);\n  const isExistAuthentication = useIsExistAuthentication();\n  const routerType = useRouterType();\n  const NewLink = useLink();\n  const { warnWhen, setWarnWhen } = useWarnAboutChange();\n  const { Link: LegacyLink } = useRouterContext();\n  const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n  const TitleFromContext = useTitle();\n  const translate = useTranslate();\n  const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n  const breakpoint = Grid.useBreakpoint();\n  const { hasDashboard } = useRefineContext();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: mutateLogout } = useLogout({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const isMobile =\n    typeof breakpoint.lg === \"undefined\" ? false : !breakpoint.lg;\n\n  const RenderToTitle = TitleFromProps ?? TitleFromContext ?? ThemedTitle;\n\n  const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n    return tree.map((item: ITreeMenu) => {\n      const {\n        icon,\n        label,\n        route,\n        key,\n        name,\n        children,\n        parentName,\n        meta,\n        options,\n      } = item;\n\n      if (children.length > 0) {\n        return (\n          <CanAccess\n            key={item.key}\n            resource={name.toLowerCase()}\n            action=\"list\"\n            params={{\n              resource: item,\n            }}\n          >\n            <Menu.SubMenu\n              key={item.key}\n              // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n              icon={icon ?? <UnorderedListOutlined />}\n              title={label}\n            >\n              {renderTreeView(children, selectedKey)}\n            </Menu.SubMenu>\n          </CanAccess>\n        );\n      }\n      const isSelected = key === selectedKey;\n      const isRoute = !(\n        pickNotDeprecated(meta?.parent, options?.parent, parentName) !==\n          undefined && children.length === 0\n      );\n\n      return (\n        <CanAccess\n          key={item.key}\n          resource={name.toLowerCase()}\n          action=\"list\"\n          params={{\n            resource: item,\n          }}\n        >\n          <Menu.Item\n            key={item.key}\n            // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n            icon={icon ?? (isRoute && <UnorderedListOutlined />)}\n          >\n            <Link to={route ?? \"\"}>{label}</Link>\n            {!collapsed && isSelected && (\n              <div className=\"ant-menu-tree-arrow\" />\n            )}\n          </Menu.Item>\n        </CanAccess>\n      );\n    });\n  };\n\n  const handleLogout = () => {\n    if (warnWhen) {\n      const confirm = window.confirm(\n        translate(\n          \"warnWhenUnsavedChanges\",\n          \"Are you sure you want to leave? You have unsaved changes.\",\n        ),\n      );\n\n      if (confirm) {\n        setWarnWhen(false);\n        mutateLogout();\n      }\n    } else {\n      mutateLogout();\n    }\n  };\n\n  const logout = isExistAuthentication && (\n    <Menu.Item\n      key=\"logout\"\n      onClick={() => handleLogout()}\n      // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n      icon={<LogoutOutlined />}\n    >\n      {translate(\"buttons.logout\", \"Logout\")}\n    </Menu.Item>\n  );\n\n  const dashboard = hasDashboard ? (\n    // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n    <Menu.Item key=\"dashboard\" icon={<DashboardOutlined />}>\n      <Link to=\"/\">{translate(\"dashboard.title\", \"Dashboard\")}</Link>\n      {!collapsed && selectedKey === \"/\" && (\n        <div className=\"ant-menu-tree-arrow\" />\n      )}\n    </Menu.Item>\n  ) : null;\n\n  const items = renderTreeView(menuItems, selectedKey);\n\n  const renderSider = () => {\n    if (render) {\n      return render({\n        dashboard,\n        items,\n        logout,\n        collapsed,\n      });\n    }\n    return (\n      <>\n        {dashboard}\n        {items}\n        {logout}\n      </>\n    );\n  };\n\n  const renderMenu = () => {\n    return (\n      <>\n        <Menu\n          selectedKeys={selectedKey ? [selectedKey] : []}\n          defaultOpenKeys={defaultOpenKeys}\n          mode=\"inline\"\n          style={{\n            marginTop: \"8px\",\n            border: \"none\",\n          }}\n          onClick={() => {\n            setDrawerOpen(false);\n            if (!breakpoint.lg) {\n              setCollapsed(true);\n            }\n          }}\n        >\n          {renderSider()}\n        </Menu>\n      </>\n    );\n  };\n\n  const renderDrawerSider = () => {\n    return (\n      <>\n        <Drawer\n          open={drawerOpen}\n          onClose={() => setDrawerOpen(false)}\n          placement=\"left\"\n          closable={false}\n          width={200}\n          bodyStyle={{\n            padding: 0,\n          }}\n          maskClosable={true}\n        >\n          <Layout>\n            <Layout.Sider\n              style={{\n                height: \"100vh\",\n                overflow: \"hidden\",\n                backgroundColor: token.colorBgContainer,\n                borderRight: `1px solid ${token.colorBgElevated}`,\n              }}\n            >\n              <div\n                style={{\n                  width: \"200px\",\n                  padding: \"0 16px\",\n                  display: \"flex\",\n                  justifyContent: \"flex-start\",\n                  alignItems: \"center\",\n                  height: \"64px\",\n                  backgroundColor: token.colorBgElevated,\n                }}\n              >\n                <RenderToTitle collapsed={false} />\n              </div>\n              {renderMenu()}\n            </Layout.Sider>\n          </Layout>\n        </Drawer>\n        <Button\n          style={drawerButtonStyles}\n          size=\"large\"\n          onClick={() => setDrawerOpen(true)}\n          // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n          icon={<BarsOutlined />}\n        />\n      </>\n    );\n  };\n\n  if (isMobile) {\n    return renderDrawerSider();\n  }\n\n  return (\n    <Layout.Sider\n      style={{\n        backgroundColor: token.colorBgContainer,\n        borderRight: `1px solid ${token.colorBgElevated}`,\n      }}\n      collapsible\n      collapsed={collapsed}\n      onCollapse={(collapsed) => setCollapsed(collapsed)}\n      collapsedWidth={80}\n      breakpoint=\"lg\"\n      trigger={\n        <Button\n          type=\"text\"\n          style={{\n            borderRadius: 0,\n            height: \"100%\",\n            width: \"100%\",\n            backgroundColor: token.colorBgElevated,\n          }}\n        >\n          {collapsed ? (\n            // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n            <RightOutlined\n              style={{\n                color: token.colorPrimary,\n              }}\n            />\n          ) : (\n            // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n            <LeftOutlined\n              style={{\n                color: token.colorPrimary,\n              }}\n            />\n          )}\n        </Button>\n      }\n    >\n      <div\n        style={{\n          width: collapsed ? \"80px\" : \"200px\",\n          padding: collapsed ? \"0\" : \"0 16px\",\n          display: \"flex\",\n          justifyContent: collapsed ? \"center\" : \"flex-start\",\n          alignItems: \"center\",\n          height: \"64px\",\n          backgroundColor: token.colorBgElevated,\n          fontSize: \"14px\",\n        }}\n      >\n        <RenderToTitle collapsed={collapsed} />\n      </div>\n      {renderMenu()}\n    </Layout.Sider>\n  );\n};\n","import type { CSSProperties } from \"react\";\n\nexport const drawerButtonStyles: CSSProperties = {\n  borderTopLeftRadius: 0,\n  borderBottomLeftRadius: 0,\n  position: \"fixed\",\n  top: 64,\n  zIndex: 999,\n};\n","import React from \"react\";\nimport { Layout as AntdLayout, Typography, Avatar, Space, theme } from \"antd\";\nimport { useActiveAuthProvider, useGetIdentity } from \"@refinedev/core\";\nimport type { RefineThemedLayoutHeaderProps } from \"../types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/antd/components/antd-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedHeader: React.FC<RefineThemedLayoutHeaderProps> = () => {\n  const { token } = theme.useToken();\n\n  const authProvider = useActiveAuthProvider();\n  const { data: user } = useGetIdentity({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const shouldRenderHeader = user && (user.name || user.avatar);\n\n  if (!shouldRenderHeader) {\n    return null;\n  }\n\n  return (\n    <AntdLayout.Header\n      style={{\n        backgroundColor: token.colorBgElevated,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        padding: \"0px 24px\",\n        height: \"64px\",\n      }}\n    >\n      <Space>\n        <Space size=\"middle\">\n          {user?.name && <Typography.Text strong>{user.name}</Typography.Text>}\n          {user?.avatar && <Avatar src={user?.avatar} alt={user?.name} />}\n        </Space>\n      </Space>\n    </AntdLayout.Header>\n  );\n};\n","import React from \"react\";\nimport { useRouterContext, useRouterType, useLink } from \"@refinedev/core\";\nimport { Typography, theme, Space } from \"antd\";\nimport type { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst defaultText = \"Refine Project\";\n\nconst defaultIcon = (\n  <svg\n    width={24}\n    height={24}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    data-testid=\"refine-logo\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M13.7889 0.422291C12.6627 -0.140764 11.3373 -0.140764 10.2111 0.422291L2.21115 4.42229C0.85601 5.09986 0 6.48491 0 8V16C0 17.5151 0.85601 18.9001 2.21115 19.5777L10.2111 23.5777C11.3373 24.1408 12.6627 24.1408 13.7889 23.5777L21.7889 19.5777C23.144 18.9001 24 17.5151 24 16V8C24 6.48491 23.144 5.09986 21.7889 4.42229L13.7889 0.422291ZM8 8C8 5.79086 9.79086 4 12 4C14.2091 4 16 5.79086 16 8V16C16 18.2091 14.2091 20 12 20C9.79086 20 8 18.2091 8 16V8Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M14 8C14 9.10457 13.1046 10 12 10C10.8954 10 10 9.10457 10 8C10 6.89543 10.8954 6 12 6C13.1046 6 14 6.89543 14 8Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/antd/components/antd-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedTitle: React.FC<RefineLayoutThemedTitleProps> = ({\n  collapsed,\n  icon = defaultIcon,\n  text = defaultText,\n  wrapperStyles,\n}) => {\n  const { token } = theme.useToken();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  return (\n    <ActiveLink\n      to=\"/\"\n      style={{\n        display: \"inline-block\",\n        textDecoration: \"none\",\n      }}\n    >\n      <Space\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          fontSize: \"inherit\",\n          ...wrapperStyles,\n        }}\n      >\n        <div\n          style={{\n            height: \"24px\",\n            width: \"24px\",\n            color: token.colorPrimary,\n          }}\n        >\n          {icon}\n        </div>\n\n        {!collapsed && (\n          <Typography.Title\n            style={{\n              fontSize: \"inherit\",\n              marginBottom: 0,\n              fontWeight: 700,\n            }}\n          >\n            {text}\n          </Typography.Title>\n        )}\n      </Space>\n    </ActiveLink>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { Grid, Layout as AntdLayout } from \"antd\";\n\nimport { ThemedSiderV2 as DefaultSider } from \"./sider\";\nimport { ThemedHeaderV2 as DefaultHeader } from \"./header\";\nimport type { RefineThemedLayoutV2Props } from \"./types\";\nimport { ThemedLayoutContextProvider } from \"@contexts\";\n\nexport const ThemedLayoutV2: React.FC<RefineThemedLayoutV2Props> = ({\n  children,\n  Header,\n  Sider,\n  Title,\n  Footer,\n  OffLayoutArea,\n  initialSiderCollapsed,\n}) => {\n  const breakpoint = Grid.useBreakpoint();\n  const SiderToRender = Sider ?? DefaultSider;\n  const HeaderToRender = Header ?? DefaultHeader;\n  const isSmall = typeof breakpoint.sm === \"undefined\" ? true : breakpoint.sm;\n  const hasSider = !!SiderToRender({ Title });\n\n  return (\n    <ThemedLayoutContextProvider initialSiderCollapsed={initialSiderCollapsed}>\n      <AntdLayout style={{ minHeight: \"100vh\" }} hasSider={hasSider}>\n        <SiderToRender Title={Title} />\n        <AntdLayout>\n          <HeaderToRender />\n          <AntdLayout.Content>\n            <div\n              style={{\n                minHeight: 360,\n                padding: isSmall ? 24 : 12,\n              }}\n            >\n              {children}\n            </div>\n            {OffLayoutArea && <OffLayoutArea />}\n          </AntdLayout.Content>\n          {Footer && <Footer />}\n        </AntdLayout>\n      </AntdLayout>\n    </ThemedLayoutContextProvider>\n  );\n};\n","import React from \"react\";\nimport { Layout, Menu, Grid, Drawer, Button, theme } from \"antd\";\nimport {\n  DashboardOutlined,\n  LogoutOutlined,\n  UnorderedListOutlined,\n  BarsOutlined,\n  LeftOutlined,\n  RightOutlined,\n} from \"@ant-design/icons\";\nimport {\n  useTranslate,\n  useLogout,\n  useTitle,\n  CanAccess,\n  type ITreeMenu,\n  useIsExistAuthentication,\n  useRouterContext,\n  useMenu,\n  useRefineContext,\n  useLink,\n  useRouterType,\n  useActiveAuthProvider,\n  pickNotDeprecated,\n  useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport { drawerButtonStyles } from \"./styles\";\nimport type { RefineThemedLayoutV2SiderProps } from \"../types\";\nimport { ThemedTitleV2 } from \"@components\";\nimport { useThemedLayoutContext } from \"@hooks\";\n\nexport const ThemedSiderV2: React.FC<RefineThemedLayoutV2SiderProps> = ({\n  Title: TitleFromProps,\n  render,\n  meta,\n  fixed,\n  activeItemDisabled = false,\n}) => {\n  const { token } = theme.useToken();\n  const {\n    siderCollapsed,\n    setSiderCollapsed,\n    mobileSiderOpen,\n    setMobileSiderOpen,\n  } = useThemedLayoutContext();\n\n  const isExistAuthentication = useIsExistAuthentication();\n  const routerType = useRouterType();\n  const NewLink = useLink();\n  const { warnWhen, setWarnWhen } = useWarnAboutChange();\n  const { Link: LegacyLink } = useRouterContext();\n  const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n  const TitleFromContext = useTitle();\n  const translate = useTranslate();\n  const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n  const breakpoint = Grid.useBreakpoint();\n  const { hasDashboard } = useRefineContext();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: mutateLogout } = useLogout({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const isMobile =\n    typeof breakpoint.lg === \"undefined\" ? false : !breakpoint.lg;\n\n  const RenderToTitle = TitleFromProps ?? TitleFromContext ?? ThemedTitleV2;\n\n  const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n    return tree.map((item: ITreeMenu) => {\n      const {\n        icon,\n        label,\n        route,\n        key,\n        name,\n        children,\n        parentName,\n        meta,\n        options,\n      } = item;\n\n      if (children.length > 0) {\n        return (\n          <CanAccess\n            key={item.key}\n            resource={name.toLowerCase()}\n            action=\"list\"\n            params={{\n              resource: item,\n            }}\n          >\n            <Menu.SubMenu\n              key={item.key}\n              // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n              icon={icon ?? <UnorderedListOutlined />}\n              title={label}\n            >\n              {renderTreeView(children, selectedKey)}\n            </Menu.SubMenu>\n          </CanAccess>\n        );\n      }\n      const isSelected = key === selectedKey;\n      const isRoute = !(\n        pickNotDeprecated(meta?.parent, options?.parent, parentName) !==\n          undefined && children.length === 0\n      );\n\n      const linkStyle: React.CSSProperties =\n        activeItemDisabled && isSelected ? { pointerEvents: \"none\" } : {};\n\n      return (\n        <CanAccess\n          key={item.key}\n          resource={name.toLowerCase()}\n          action=\"list\"\n          params={{\n            resource: item,\n          }}\n        >\n          <Menu.Item\n            key={item.key}\n            // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n            icon={icon ?? (isRoute && <UnorderedListOutlined />)}\n            style={linkStyle}\n          >\n            <Link to={route ?? \"\"} style={linkStyle}>\n              {label}\n            </Link>\n            {!siderCollapsed && isSelected && (\n              <div className=\"ant-menu-tree-arrow\" />\n            )}\n          </Menu.Item>\n        </CanAccess>\n      );\n    });\n  };\n\n  const handleLogout = () => {\n    if (warnWhen) {\n      const confirm = window.confirm(\n        translate(\n          \"warnWhenUnsavedChanges\",\n          \"Are you sure you want to leave? You have unsaved changes.\",\n        ),\n      );\n\n      if (confirm) {\n        setWarnWhen(false);\n        mutateLogout();\n      }\n    } else {\n      mutateLogout();\n    }\n  };\n\n  const logout = isExistAuthentication && (\n    <Menu.Item\n      key=\"logout\"\n      onClick={() => handleLogout()}\n      // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n      icon={<LogoutOutlined />}\n    >\n      {translate(\"buttons.logout\", \"Logout\")}\n    </Menu.Item>\n  );\n\n  const dashboard = hasDashboard ? (\n    // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n    <Menu.Item key=\"dashboard\" icon={<DashboardOutlined />}>\n      <Link to=\"/\">{translate(\"dashboard.title\", \"Dashboard\")}</Link>\n      {!siderCollapsed && selectedKey === \"/\" && (\n        <div className=\"ant-menu-tree-arrow\" />\n      )}\n    </Menu.Item>\n  ) : null;\n\n  const items = renderTreeView(menuItems, selectedKey);\n\n  const renderSider = () => {\n    if (render) {\n      return render({\n        dashboard,\n        items,\n        logout,\n        collapsed: siderCollapsed,\n      });\n    }\n    return (\n      <>\n        {dashboard}\n        {items}\n        {logout}\n      </>\n    );\n  };\n\n  const renderMenu = () => {\n    return (\n      <Menu\n        selectedKeys={selectedKey ? [selectedKey] : []}\n        defaultOpenKeys={defaultOpenKeys}\n        mode=\"inline\"\n        style={{\n          paddingTop: \"8px\",\n          border: \"none\",\n          overflow: \"auto\",\n          height: \"calc(100% - 72px)\",\n        }}\n        onClick={() => {\n          setMobileSiderOpen(false);\n        }}\n      >\n        {renderSider()}\n      </Menu>\n    );\n  };\n\n  const renderDrawerSider = () => {\n    return (\n      <>\n        <Drawer\n          open={mobileSiderOpen}\n          onClose={() => setMobileSiderOpen(false)}\n          placement=\"left\"\n          closable={false}\n          width={200}\n          bodyStyle={{\n            padding: 0,\n          }}\n          maskClosable={true}\n        >\n          <Layout>\n            <Layout.Sider\n              style={{\n                height: \"100vh\",\n                backgroundColor: token.colorBgContainer,\n                borderRight: `1px solid ${token.colorBgElevated}`,\n              }}\n            >\n              <div\n                style={{\n                  width: \"200px\",\n                  padding: \"0 16px\",\n                  display: \"flex\",\n                  justifyContent: \"flex-start\",\n                  alignItems: \"center\",\n                  height: \"64px\",\n                  backgroundColor: token.colorBgElevated,\n                }}\n              >\n                <RenderToTitle collapsed={false} />\n              </div>\n              {renderMenu()}\n            </Layout.Sider>\n          </Layout>\n        </Drawer>\n        <Button\n          style={drawerButtonStyles}\n          size=\"large\"\n          onClick={() => setMobileSiderOpen(true)}\n          // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n          icon={<BarsOutlined />}\n        />\n      </>\n    );\n  };\n\n  if (isMobile) {\n    return renderDrawerSider();\n  }\n\n  const siderStyles: React.CSSProperties = {\n    backgroundColor: token.colorBgContainer,\n    borderRight: `1px solid ${token.colorBgElevated}`,\n  };\n\n  if (fixed) {\n    siderStyles.position = \"fixed\";\n    siderStyles.top = 0;\n    siderStyles.height = \"100vh\";\n    siderStyles.zIndex = 999;\n  }\n\n  return (\n    <>\n      {fixed && (\n        <div\n          style={{\n            width: siderCollapsed ? \"80px\" : \"200px\",\n            transition: \"all 0.2s\",\n          }}\n        />\n      )}\n      <Layout.Sider\n        style={siderStyles}\n        collapsible\n        collapsed={siderCollapsed}\n        onCollapse={(collapsed, type) => {\n          if (type === \"clickTrigger\") {\n            setSiderCollapsed(collapsed);\n          }\n        }}\n        collapsedWidth={80}\n        breakpoint=\"lg\"\n        trigger={\n          <Button\n            type=\"text\"\n            style={{\n              borderRadius: 0,\n              height: \"100%\",\n              width: \"100%\",\n              backgroundColor: token.colorBgElevated,\n            }}\n          >\n            {siderCollapsed ? (\n              // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n              <RightOutlined\n                style={{\n                  color: token.colorPrimary,\n                }}\n              />\n            ) : (\n              // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n              <LeftOutlined\n                style={{\n                  color: token.colorPrimary,\n                }}\n              />\n            )}\n          </Button>\n        }\n      >\n        <div\n          style={{\n            width: siderCollapsed ? \"80px\" : \"200px\",\n            padding: siderCollapsed ? \"0\" : \"0 16px\",\n            display: \"flex\",\n            justifyContent: siderCollapsed ? \"center\" : \"flex-start\",\n            alignItems: \"center\",\n            height: \"64px\",\n            backgroundColor: token.colorBgElevated,\n            fontSize: \"14px\",\n          }}\n        >\n          <RenderToTitle collapsed={siderCollapsed} />\n        </div>\n        {renderMenu()}\n      </Layout.Sider>\n    </>\n  );\n};\n","import type { CSSProperties } from \"react\";\n\nexport const drawerButtonStyles: CSSProperties = {\n  borderTopLeftRadius: 0,\n  borderBottomLeftRadius: 0,\n  position: \"fixed\",\n  top: 64,\n  zIndex: 999,\n};\n","import React from \"react\";\nimport { Layout as AntdLayout, Typography, Avatar, Space, theme } from \"antd\";\nimport {\n  pickNotDeprecated,\n  useActiveAuthProvider,\n  useGetIdentity,\n} from \"@refinedev/core\";\nimport type { RefineThemedLayoutV2HeaderProps } from \"../types\";\n\nexport const ThemedHeaderV2: React.FC<RefineThemedLayoutV2HeaderProps> = ({\n  isSticky,\n  sticky,\n}) => {\n  const { token } = theme.useToken();\n\n  const authProvider = useActiveAuthProvider();\n  const { data: user } = useGetIdentity({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const shouldRenderHeader = user && (user.name || user.avatar);\n\n  if (!shouldRenderHeader) {\n    return null;\n  }\n\n  const headerStyles: React.CSSProperties = {\n    backgroundColor: token.colorBgElevated,\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    padding: \"0px 24px\",\n    height: \"64px\",\n  };\n\n  if (pickNotDeprecated(sticky, isSticky)) {\n    headerStyles.position = \"sticky\";\n    headerStyles.top = 0;\n    headerStyles.zIndex = 1;\n  }\n\n  return (\n    <AntdLayout.Header style={headerStyles}>\n      <Space>\n        <Space size=\"middle\">\n          {user?.name && <Typography.Text strong>{user.name}</Typography.Text>}\n          {user?.avatar && <Avatar src={user?.avatar} alt={user?.name} />}\n        </Space>\n      </Space>\n    </AntdLayout.Header>\n  );\n};\n","import React from \"react\";\nimport {\n  useRouterContext,\n  useRouterType,\n  useLink,\n  useRefineOptions,\n} from \"@refinedev/core\";\nimport { Typography, theme, Space } from \"antd\";\nimport type { RefineLayoutThemedTitleProps } from \"../types\";\n\nexport const ThemedTitleV2: React.FC<RefineLayoutThemedTitleProps> = ({\n  collapsed,\n  icon: iconFromProps,\n  text: textFromProps,\n  wrapperStyles,\n}) => {\n  const {\n    title: { icon: defaultIcon, text: defaultText } = {},\n  } = useRefineOptions();\n  const icon =\n    typeof iconFromProps === \"undefined\" ? defaultIcon : iconFromProps;\n  const text =\n    typeof textFromProps === \"undefined\" ? defaultText : textFromProps;\n  const { token } = theme.useToken();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  return (\n    <ActiveLink\n      to=\"/\"\n      style={{\n        display: \"inline-block\",\n        textDecoration: \"none\",\n      }}\n    >\n      <Space\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          fontSize: \"inherit\",\n          ...wrapperStyles,\n        }}\n      >\n        <div\n          style={{\n            height: \"24px\",\n            width: \"24px\",\n            color: token.colorPrimary,\n          }}\n        >\n          {icon}\n        </div>\n\n        {!collapsed && (\n          <Typography.Title\n            style={{\n              fontSize: \"inherit\",\n              marginBottom: 0,\n              fontWeight: 700,\n            }}\n          >\n            {text}\n          </Typography.Title>\n        )}\n      </Space>\n    </ActiveLink>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\nimport { useCreateButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport type { CreateButtonProps } from \"../types\";\n\n/**\n * <CreateButton> uses Ant Design's {@link https://ant.design/components/button/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#create `create`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful to redirect the app to the create page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/create-button} for more details.\n */\nexport const CreateButton: React.FC<CreateButtonProps> = ({\n  resource: resourceNameFromProps,\n  resourceNameOrRouteName: propResourceNameOrRouteName,\n  hideText = false,\n  accessControl,\n  meta,\n  children,\n  onClick,\n  ...rest\n}) => {\n  const { hidden, disabled, label, title, LinkComponent, to } = useCreateButton(\n    {\n      resource: resourceNameFromProps ?? propResourceNameOrRouteName,\n      accessControl,\n      meta,\n    },\n  );\n\n  if (hidden) return null;\n\n  return (\n    <LinkComponent\n      to={to}\n      replace={false}\n      onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n        if (disabled) {\n          e.preventDefault();\n          return;\n        }\n        if (onClick) {\n          e.preventDefault();\n          onClick(e);\n        }\n      }}\n    >\n      <Button\n        // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n        icon={<PlusSquareOutlined />}\n        disabled={disabled}\n        title={title}\n        data-testid={RefineButtonTestIds.CreateButton}\n        className={RefineButtonClassNames.CreateButton}\n        type=\"primary\"\n        {...rest}\n      >\n        {!hideText && (children ?? label)}\n      </Button>\n    </LinkComponent>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { useEditButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport type { EditButtonProps } from \"../types\";\n\n/**\n * `<EditButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#edit `edit`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the edit page with the record id route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/edit-button} for more details.\n */\nexport const EditButton: React.FC<EditButtonProps> = ({\n  resource: resourceNameFromProps,\n  resourceNameOrRouteName: propResourceNameOrRouteName,\n  recordItemId,\n  hideText = false,\n  accessControl,\n  meta,\n  children,\n  onClick,\n  ...rest\n}) => {\n  const { to, label, title, hidden, disabled, LinkComponent } = useEditButton({\n    resource: resourceNameFromProps ?? propResourceNameOrRouteName,\n    id: recordItemId,\n    meta,\n    accessControl,\n  });\n\n  if (hidden) return null;\n\n  return (\n    <LinkComponent\n      to={to}\n      replace={false}\n      onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n        if (disabled) {\n          e.preventDefault();\n          return;\n        }\n        if (onClick) {\n          e.preventDefault();\n          onClick(e);\n        }\n      }}\n    >\n      <Button\n        // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n        icon={<EditOutlined />}\n        disabled={disabled}\n        title={title}\n        data-testid={RefineButtonTestIds.EditButton}\n        className={RefineButtonClassNames.EditButton}\n        {...rest}\n      >\n        {!hideText && (children ?? label)}\n      </Button>\n    </LinkComponent>\n  );\n};\n","import React from \"react\";\nimport { Button, Popconfirm } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { useDeleteButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport type { DeleteButtonProps } from \"../types\";\n\n/**\n * `<DeleteButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} and {@link https://ant.design/components/button/ `<Popconfirm>`} components.\n * When you try to delete something, a pop-up shows up and asks for confirmation. When confirmed it executes the `useDelete` method provided by your `dataProvider`.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/delete-button} for more details.\n */\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n  resource: resourceNameFromProps,\n  resourceNameOrRouteName: propResourceNameOrRouteName,\n  recordItemId,\n  onSuccess,\n  mutationMode: mutationModeProp,\n  children,\n  successNotification,\n  errorNotification,\n  hideText = false,\n  accessControl,\n  metaData,\n  meta,\n  dataProviderName,\n  confirmTitle,\n  confirmOkText,\n  confirmCancelText,\n  invalidates,\n  ...rest\n}) => {\n  const {\n    title,\n    label,\n    hidden,\n    disabled,\n    loading,\n    confirmTitle: defaultConfirmTitle,\n    confirmOkLabel: defaultConfirmOkLabel,\n    cancelLabel: defaultCancelLabel,\n    onConfirm,\n  } = useDeleteButton({\n    resource: resourceNameFromProps ?? propResourceNameOrRouteName,\n    id: recordItemId,\n    dataProviderName,\n    invalidates,\n    meta,\n    onSuccess,\n    mutationMode: mutationModeProp,\n    errorNotification,\n    successNotification,\n    accessControl,\n  });\n\n  if (hidden) return null;\n\n  return (\n    <Popconfirm\n      key=\"delete\"\n      okText={confirmOkText ?? defaultConfirmOkLabel}\n      cancelText={confirmCancelText ?? defaultCancelLabel}\n      okType=\"danger\"\n      title={confirmTitle ?? defaultConfirmTitle}\n      okButtonProps={{ disabled: loading }}\n      onConfirm={onConfirm}\n      disabled={\n        typeof rest?.disabled !== \"undefined\" ? rest.disabled : disabled\n      }\n    >\n      <Button\n        danger\n        loading={loading}\n        // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n        icon={<DeleteOutlined />}\n        title={title}\n        disabled={disabled}\n        data-testid={RefineButtonTestIds.DeleteButton}\n        className={RefineButtonClassNames.DeleteButton}\n        {...rest}\n      >\n        {!hideText && (children ?? label)}\n      </Button>\n    </Popconfirm>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { RedoOutlined } from \"@ant-design/icons\";\nimport { useRefreshButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport type { RefreshButtonProps } from \"../types\";\n\n/**\n * `<RefreshButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component\n * to update the data shown on the page via the {@link https://refine.dev/docs/api-reference/core/hooks/invalidate/useInvalidate `useInvalidate`} hook.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/refresh-button} for more details.\n */\nexport const RefreshButton: React.FC<RefreshButtonProps> = ({\n  resource: resourceNameFromProps,\n  resourceNameOrRouteName: propResourceNameOrRouteName,\n  recordItemId,\n  hideText = false,\n  dataProviderName,\n  children,\n  meta: _meta,\n  metaData: _metaData,\n  ...rest\n}) => {\n  const { onClick, label, loading } = useRefreshButton({\n    resource: resourceNameFromProps ?? propResourceNameOrRouteName,\n    id: recordItemId,\n    dataProviderName,\n  });\n\n  return (\n    <Button\n      onClick={onClick}\n      // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n      icon={<RedoOutlined spin={loading} />}\n      data-testid={RefineButtonTestIds.RefreshButton}\n      className={RefineButtonClassNames.RefreshButton}\n      {...rest}\n    >\n      {!hideText && (children ?? label)}\n    </Button>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { EyeOutlined } from \"@ant-design/icons\";\nimport { useShowButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport type { ShowButtonProps } from \"../types\";\n\n/**\n * `<ShowButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#show `show`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the show page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/show-button} for more details.\n */\nexport const ShowButton: React.FC<ShowButtonProps> = ({\n  resource: resourceNameFromProps,\n  resourceNameOrRouteName: propResourceNameOrRouteName,\n  recordItemId,\n  hideText = false,\n  accessControl,\n  meta,\n  children,\n  onClick,\n  ...rest\n}) => {\n  const { to, label, title, hidden, disabled, LinkComponent } = useShowButton({\n    resource: resourceNameFromProps ?? propResourceNameOrRouteName,\n    id: recordItemId,\n    accessControl,\n    meta,\n  });\n\n  if (hidden) return null;\n\n  return (\n    <LinkComponent\n      to={to}\n      replace={false}\n      onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n        if (disabled) {\n          e.preventDefault();\n          return;\n        }\n        if (onClick) {\n          e.preventDefault();\n          onClick(e);\n        }\n      }}\n    >\n      <Button\n        // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n        icon={<EyeOutlined />}\n        disabled={disabled}\n        title={title}\n        data-testid={RefineButtonTestIds.ShowButton}\n        className={RefineButtonClassNames.ShowButton}\n        {...rest}\n      >\n        {!hideText && (children ?? label)}\n      </Button>\n    </LinkComponent>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { BarsOutlined } from \"@ant-design/icons\";\nimport { useListButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport type { ListButtonProps } from \"../types\";\n\n/**\n * `<ListButton>` is using Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\n * It uses the  {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#list `list`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the list page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/list-button} for more details.\n */\nexport const ListButton: React.FC<ListButtonProps> = ({\n  resource: resourceNameFromProps,\n  resourceNameOrRouteName: propResourceNameOrRouteName,\n  hideText = false,\n  accessControl,\n  meta,\n  children,\n  onClick,\n  ...rest\n}) => {\n  const { to, label, title, hidden, disabled, LinkComponent } = useListButton({\n    resource: resourceNameFromProps ?? propResourceNameOrRouteName,\n    accessControl,\n    meta,\n  });\n\n  if (hidden) return null;\n\n  return (\n    <LinkComponent\n      to={to}\n      replace={false}\n      onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n        if (disabled) {\n          e.preventDefault();\n          return;\n        }\n        if (onClick) {\n          e.preventDefault();\n          onClick(e);\n        }\n      }}\n    >\n      <Button\n        // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n        icon={<BarsOutlined />}\n        disabled={disabled}\n        title={title}\n        data-testid={RefineButtonTestIds.ListButton}\n        className={RefineButtonClassNames.ListButton}\n        {...rest}\n      >\n        {!hideText && (children ?? label)}\n      </Button>\n    </LinkComponent>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { ExportOutlined } from \"@ant-design/icons\";\nimport { useExportButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport type { ExportButtonProps } from \"../types\";\n\n/**\n * `<ExportButton>` is an Ant Design {@link https://ant.design/components/button/ `<Button>`} with a default export icon and a default text with \"Export\".\n * It only has presentational value.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/export-button} for more details.\n */\nexport const ExportButton: React.FC<ExportButtonProps> = ({\n  hideText = false,\n  children,\n  ...rest\n}) => {\n  const { label } = useExportButton();\n\n  return (\n    <Button\n      type=\"default\"\n      // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n      icon={<ExportOutlined />}\n      data-testid={RefineButtonTestIds.ExportButton}\n      className={RefineButtonClassNames.ExportButton}\n      {...rest}\n    >\n      {!hideText && (children ?? label)}\n    </Button>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { SaveOutlined } from \"@ant-design/icons\";\nimport { useSaveButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport type { SaveButtonProps } from \"../types\";\n\n/**\n * `<SaveButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\n * It uses it for presantation purposes only. Some of the hooks that refine has adds features to this button.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/save-button} for more details.\n */\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n  hideText = false,\n  children,\n  ...rest\n}) => {\n  const { label } = useSaveButton();\n\n  return (\n    <Button\n      type=\"primary\"\n      // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n      icon={<SaveOutlined />}\n      data-testid={RefineButtonTestIds.SaveButton}\n      className={RefineButtonClassNames.SaveButton}\n      {...rest}\n    >\n      {!hideText && (children ?? label)}\n    </Button>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\nimport { useCloneButton } from \"@refinedev/core\";\nimport {\n  RefineButtonTestIds,\n  RefineButtonClassNames,\n} from \"@refinedev/ui-types\";\n\nimport type { CloneButtonProps } from \"../types\";\n\n/**\n * `<CloneButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#clone `clone`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation useNavigation} under the hood.\n * It can be useful when redirecting the app to the create page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/clone-button} for more details.\n */\nexport const CloneButton: React.FC<CloneButtonProps> = ({\n  resourceNameOrRouteName: propResourceNameOrRouteName,\n  resource: resourceNameFromProps,\n  recordItemId,\n  hideText = false,\n  accessControl,\n  meta,\n  children,\n  onClick,\n  ...rest\n}) => {\n  const { to, LinkComponent, label, disabled, hidden, title } = useCloneButton({\n    id: recordItemId,\n    resource: resourceNameFromProps ?? propResourceNameOrRouteName,\n    accessControl,\n    meta,\n  });\n\n  if (hidden) return null;\n\n  return (\n    <LinkComponent\n      to={to}\n      replace={false}\n      onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n        if (disabled) {\n          e.preventDefault();\n          return;\n        }\n        if (onClick) {\n          e.preventDefault();\n          onClick(e);\n        }\n      }}\n    >\n      <Button\n        // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n        icon={<PlusSquareOutlined />}\n        disabled={disabled}\n        title={title}\n        data-testid={RefineButtonTestIds.CloneButton}\n        className={RefineButtonClassNames.CloneButton}\n        {...rest}\n      >\n        {!hideText && (children ?? label)}\n      </Button>\n    </LinkComponent>\n  );\n};\n","import React from \"react\";\nimport { Button, Upload } from \"antd\";\nimport { ImportOutlined } from \"@ant-design/icons\";\nimport { useImportButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport type { ImportButtonProps } from \"../types\";\n\n/**\n * `<ImportButton>` is compatible with the {@link https://refine.dev/docs/api-reference/antd/hooks/import/useImport `useImport`} hook and is meant to be used as it's upload button.\n * It uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} and {@link https://ant.design/components/upload/ `<Upload>`} components.\n * It wraps a `<Button>` component with an `<Upload>` component and accepts properties for `<Button>` and `<Upload>` components separately.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/import-button} for more details.\n */\nexport const ImportButton: React.FC<ImportButtonProps> = ({\n  uploadProps,\n  buttonProps,\n  hideText = false,\n  children,\n  loading,\n}) => {\n  const { label } = useImportButton();\n\n  return (\n    <Upload {...uploadProps}>\n      <Button\n        // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n        icon={<ImportOutlined />}\n        data-testid={RefineButtonTestIds.ImportButton}\n        className={RefineButtonClassNames.ImportButton}\n        loading={loading}\n        {...buttonProps}\n      >\n        {!hideText && (children ?? label)}\n      </Button>\n    </Upload>\n  );\n};\n","import React from \"react\";\nimport { Space } from \"antd\";\nimport {\n  useTranslate,\n  useUserFriendlyName,\n  useRefineContext,\n  useRouterType,\n  useResource,\n} from \"@refinedev/core\";\n\nimport {\n  Breadcrumb,\n  CreateButton,\n  type CreateButtonProps,\n  PageHeader,\n} from \"@components\";\nimport type { ListProps } from \"../types\";\n\n/**\n * `<List>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/basic-views/list} for more details.\n */\nexport const List: React.FC<ListProps> = ({\n  canCreate,\n  title,\n  children,\n  createButtonProps: createButtonPropsFromProps,\n  resource: resourceFromProps,\n  wrapperProps,\n  contentProps,\n  headerProps,\n  breadcrumb: breadcrumbFromProps,\n  headerButtonProps,\n  headerButtons,\n}) => {\n  const translate = useTranslate();\n  const {\n    options: { breadcrumb: globalBreadcrumb } = {},\n  } = useRefineContext();\n\n  const routerType = useRouterType();\n  const getUserFriendlyName = useUserFriendlyName();\n\n  const { resource, identifier } = useResource(resourceFromProps);\n\n  const isCreateButtonVisible =\n    canCreate ??\n    ((resource?.canCreate ?? !!resource?.create) || createButtonPropsFromProps);\n\n  const breadcrumb =\n    typeof breadcrumbFromProps === \"undefined\"\n      ? globalBreadcrumb\n      : breadcrumbFromProps;\n\n  const createButtonProps: CreateButtonProps | undefined = isCreateButtonVisible\n    ? {\n        size: \"middle\",\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        ...createButtonPropsFromProps,\n      }\n    : undefined;\n\n  const defaultExtra = isCreateButtonVisible ? (\n    <CreateButton {...createButtonProps} />\n  ) : null;\n\n  return (\n    <div {...(wrapperProps ?? {})}>\n      <PageHeader\n        ghost={false}\n        title={\n          title ??\n          translate(\n            `${identifier}.titles.list`,\n            getUserFriendlyName(\n              resource?.meta?.label ??\n                resource?.options?.label ??\n                resource?.label ??\n                identifier,\n              \"plural\",\n            ),\n          )\n        }\n        extra={\n          headerButtons ? (\n            <Space wrap {...headerButtonProps}>\n              {typeof headerButtons === \"function\"\n                ? headerButtons({\n                    defaultButtons: defaultExtra,\n                    createButtonProps,\n                  })\n                : headerButtons}\n            </Space>\n          ) : (\n            defaultExtra\n          )\n        }\n        breadcrumb={\n          typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n          ) : (\n            <Breadcrumb />\n          )\n        }\n        {...(headerProps ?? {})}\n      >\n        <div {...(contentProps ?? {})}>{children}</div>\n      </PageHeader>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Card, Space, Spin } from \"antd\";\nimport {\n  useNavigation,\n  useTranslate,\n  useUserFriendlyName,\n  useRefineContext,\n  useRouterType,\n  useResource,\n  useBack,\n} from \"@refinedev/core\";\n\nimport {\n  Breadcrumb,\n  SaveButton,\n  PageHeader,\n  type SaveButtonProps,\n} from \"@components\";\nimport type { CreateProps } from \"../types\";\n\n/**\n * `<Create>` provides us a layout to display the page.\n * It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/basic-views/create} for more details.\n */\nexport const Create: React.FC<CreateProps> = ({\n  title,\n  saveButtonProps: saveButtonPropsFromProps,\n  children,\n  resource: resourceFromProps,\n  isLoading = false,\n  breadcrumb: breadcrumbFromProps,\n  wrapperProps,\n  headerProps,\n  contentProps,\n  headerButtonProps,\n  headerButtons,\n  footerButtonProps,\n  footerButtons,\n  goBack: goBackFromProps,\n}) => {\n  const translate = useTranslate();\n  const {\n    options: { breadcrumb: globalBreadcrumb } = {},\n  } = useRefineContext();\n\n  const routerType = useRouterType();\n  const back = useBack();\n  const { goBack } = useNavigation();\n  const getUserFriendlyName = useUserFriendlyName();\n\n  const { resource, action, identifier } = useResource(resourceFromProps);\n\n  const breadcrumb =\n    typeof breadcrumbFromProps === \"undefined\"\n      ? globalBreadcrumb\n      : breadcrumbFromProps;\n\n  const saveButtonProps: SaveButtonProps = {\n    ...(isLoading ? { disabled: true } : {}),\n    ...saveButtonPropsFromProps,\n    htmlType: \"submit\",\n  };\n\n  const defaultFooterButtons = (\n    <>\n      <SaveButton {...saveButtonProps} />\n    </>\n  );\n\n  return (\n    <div {...(wrapperProps ?? {})}>\n      <PageHeader\n        ghost={false}\n        backIcon={goBackFromProps}\n        onBack={\n          action !== \"list\" || typeof action !== \"undefined\"\n            ? routerType === \"legacy\"\n              ? goBack\n              : back\n            : undefined\n        }\n        title={\n          title ??\n          translate(\n            `${identifier}.titles.create`,\n            `Create ${getUserFriendlyName(\n              resource?.meta?.label ??\n                resource?.options?.label ??\n                resource?.label ??\n                identifier,\n              \"singular\",\n            )}`,\n          )\n        }\n        breadcrumb={\n          typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n          ) : (\n            <Breadcrumb />\n          )\n        }\n        extra={\n          <Space wrap {...(headerButtonProps ?? {})}>\n            {headerButtons\n              ? typeof headerButtons === \"function\"\n                ? headerButtons({\n                    defaultButtons: null,\n                  })\n                : headerButtons\n              : null}\n          </Space>\n        }\n        {...(headerProps ?? {})}\n      >\n        <Spin spinning={isLoading}>\n          <Card\n            bordered={false}\n            actions={[\n              <Space\n                key=\"action-buttons\"\n                style={{ float: \"right\", marginRight: 24 }}\n                {...(footerButtonProps ?? {})}\n              >\n                {footerButtons\n                  ? typeof footerButtons === \"function\"\n                    ? footerButtons({\n                        defaultButtons: defaultFooterButtons,\n                        saveButtonProps: saveButtonProps,\n                      })\n                    : footerButtons\n                  : defaultFooterButtons}\n              </Space>,\n            ]}\n            {...(contentProps ?? {})}\n          >\n            {children}\n          </Card>\n        </Spin>\n      </PageHeader>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { Card, Space, Spin } from \"antd\";\nimport {\n  useMutationMode,\n  useNavigation,\n  useTranslate,\n  useUserFriendlyName,\n  useRefineContext,\n  useRouterType,\n  useBack,\n  useResource,\n  useGo,\n  useToPath,\n} from \"@refinedev/core\";\n\nimport {\n  DeleteButton,\n  RefreshButton,\n  ListButton,\n  SaveButton,\n  Breadcrumb,\n  PageHeader,\n  type ListButtonProps,\n  type RefreshButtonProps,\n  type DeleteButtonProps,\n  type SaveButtonProps,\n  AutoSaveIndicator,\n} from \"@components\";\nimport type { EditProps } from \"../types\";\n\n/**\n * `<Edit>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/basic-views/edit} for more details.\n */\nexport const Edit: React.FC<EditProps> = ({\n  title,\n  saveButtonProps: saveButtonPropsFromProps,\n  mutationMode: mutationModeProp,\n  recordItemId,\n  children,\n  deleteButtonProps: deleteButtonPropsFromProps,\n  canDelete,\n  resource: resourceFromProps,\n  isLoading = false,\n  dataProviderName,\n  breadcrumb: breadcrumbFromProps,\n  wrapperProps,\n  headerProps,\n  contentProps,\n  headerButtonProps,\n  headerButtons,\n  footerButtonProps,\n  footerButtons,\n  goBack: goBackFromProps,\n  autoSaveProps,\n}) => {\n  const translate = useTranslate();\n  const {\n    options: { breadcrumb: globalBreadcrumb } = {},\n  } = useRefineContext();\n  const { mutationMode: mutationModeContext } = useMutationMode();\n  const mutationMode = mutationModeProp ?? mutationModeContext;\n\n  const routerType = useRouterType();\n  const back = useBack();\n  const go = useGo();\n  const { goBack, list: legacyGoList } = useNavigation();\n  const getUserFriendlyName = useUserFriendlyName();\n\n  const {\n    resource,\n    action,\n    id: idFromParams,\n    identifier,\n  } = useResource(resourceFromProps);\n\n  const goListPath = useToPath({\n    resource,\n    action: \"list\",\n  });\n\n  const id = recordItemId ?? idFromParams;\n\n  const breadcrumb =\n    typeof breadcrumbFromProps === \"undefined\"\n      ? globalBreadcrumb\n      : breadcrumbFromProps;\n\n  const hasList = resource?.list && !recordItemId;\n  const isDeleteButtonVisible =\n    canDelete ??\n    ((resource?.meta?.canDelete ?? resource?.canDelete) ||\n      deleteButtonPropsFromProps);\n\n  const listButtonProps: ListButtonProps | undefined = hasList\n    ? {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n      }\n    : undefined;\n\n  const refreshButtonProps: RefreshButtonProps = {\n    ...(isLoading ? { disabled: true } : {}),\n    resource: routerType === \"legacy\" ? resource?.route : identifier,\n    recordItemId: id,\n    dataProviderName,\n  };\n\n  const deleteButtonProps: DeleteButtonProps | undefined = isDeleteButtonVisible\n    ? {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        mutationMode,\n        onSuccess: () => {\n          if (routerType === \"legacy\") {\n            legacyGoList(resource?.route ?? resource?.name ?? \"\");\n          } else {\n            go({ to: goListPath });\n          }\n        },\n        recordItemId: id,\n        dataProviderName,\n        ...deleteButtonPropsFromProps,\n      }\n    : undefined;\n\n  const saveButtonProps: SaveButtonProps = {\n    ...(isLoading ? { disabled: true } : {}),\n    ...saveButtonPropsFromProps,\n  };\n\n  const defaultHeaderButtons = (\n    <>\n      {autoSaveProps && <AutoSaveIndicator {...autoSaveProps} />}\n      {hasList && <ListButton {...listButtonProps} />}\n      <RefreshButton {...refreshButtonProps} />\n    </>\n  );\n\n  const defaultFooterButtons = (\n    <>\n      {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n      <SaveButton {...saveButtonProps} />\n    </>\n  );\n\n  return (\n    <div {...(wrapperProps ?? {})}>\n      <PageHeader\n        ghost={false}\n        backIcon={goBackFromProps}\n        onBack={\n          action !== \"list\" && typeof action !== \"undefined\"\n            ? routerType === \"legacy\"\n              ? goBack\n              : back\n            : undefined\n        }\n        title={\n          title ??\n          translate(\n            `${identifier}.titles.edit`,\n            `Edit ${getUserFriendlyName(\n              resource?.meta?.label ??\n                resource?.options?.label ??\n                resource?.label ??\n                identifier,\n              \"singular\",\n            )}`,\n          )\n        }\n        extra={\n          <Space wrap {...(headerButtonProps ?? {})}>\n            {headerButtons\n              ? typeof headerButtons === \"function\"\n                ? headerButtons({\n                    defaultButtons: defaultHeaderButtons,\n                    listButtonProps,\n                    refreshButtonProps,\n                  })\n                : headerButtons\n              : defaultHeaderButtons}\n          </Space>\n        }\n        breadcrumb={\n          typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n          ) : (\n            <Breadcrumb />\n          )\n        }\n        {...(headerProps ?? {})}\n      >\n        <Spin spinning={isLoading}>\n          <Card\n            bordered={false}\n            actions={[\n              <Space\n                key=\"footer-buttons\"\n                wrap\n                style={{\n                  float: \"right\",\n                  marginRight: 24,\n                }}\n                {...(footerButtonProps ?? {})}\n              >\n                {footerButtons\n                  ? typeof footerButtons === \"function\"\n                    ? footerButtons({\n                        defaultButtons: defaultFooterButtons,\n                        deleteButtonProps,\n                        saveButtonProps,\n                      })\n                    : footerButtons\n                  : defaultFooterButtons}\n              </Space>,\n            ]}\n            {...(contentProps ?? {})}\n          >\n            {children}\n          </Card>\n        </Spin>\n      </PageHeader>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Card, Space, Spin } from \"antd\";\nimport {\n  useNavigation,\n  useTranslate,\n  useUserFriendlyName,\n  useRefineContext,\n  useResource,\n  useToPath,\n  useRouterType,\n  useBack,\n  useGo,\n} from \"@refinedev/core\";\n\nimport {\n  EditButton,\n  DeleteButton,\n  RefreshButton,\n  ListButton,\n  Breadcrumb,\n  PageHeader,\n  type ListButtonProps,\n  type EditButtonProps,\n  type DeleteButtonProps,\n  type RefreshButtonProps,\n} from \"@components\";\nimport type { ShowProps } from \"../types\";\n\n/**\n * `<Show>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/basic-views/show} for more details.\n */\nexport const Show: React.FC<ShowProps> = ({\n  title,\n  canEdit,\n  canDelete,\n  isLoading = false,\n  children,\n  resource: resourceFromProps,\n  recordItemId,\n  dataProviderName,\n  breadcrumb: breadcrumbFromProps,\n  contentProps,\n  headerProps,\n  wrapperProps,\n  headerButtons,\n  footerButtons,\n  footerButtonProps,\n  headerButtonProps,\n  goBack: goBackFromProps,\n}) => {\n  const translate = useTranslate();\n  const {\n    options: { breadcrumb: globalBreadcrumb } = {},\n  } = useRefineContext();\n\n  const routerType = useRouterType();\n  const back = useBack();\n  const go = useGo();\n  const { goBack, list: legacyGoList } = useNavigation();\n  const getUserFriendlyName = useUserFriendlyName();\n\n  const {\n    resource,\n    action,\n    id: idFromParams,\n    identifier,\n  } = useResource(resourceFromProps);\n\n  const goListPath = useToPath({\n    resource,\n    action: \"list\",\n  });\n\n  const id = recordItemId ?? idFromParams;\n\n  const breadcrumb =\n    typeof breadcrumbFromProps === \"undefined\"\n      ? globalBreadcrumb\n      : breadcrumbFromProps;\n\n  const hasList = resource?.list && !recordItemId;\n  const isDeleteButtonVisible =\n    canDelete ?? resource?.meta?.canDelete ?? resource?.canDelete;\n  const isEditButtonVisible = canEdit ?? resource?.canEdit ?? !!resource?.edit;\n\n  const listButtonProps: ListButtonProps | undefined = hasList\n    ? {\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n      }\n    : undefined;\n  const editButtonProps: EditButtonProps | undefined = isEditButtonVisible\n    ? {\n        ...(isLoading ? { disabled: true } : {}),\n        type: \"primary\",\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n      }\n    : undefined;\n  const deleteButtonProps: DeleteButtonProps | undefined = isDeleteButtonVisible\n    ? {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        onSuccess: () => {\n          if (routerType === \"legacy\") {\n            legacyGoList(resource?.route ?? resource?.name ?? \"\");\n          } else {\n            go({ to: goListPath });\n          }\n        },\n        dataProviderName,\n      }\n    : undefined;\n  const refreshButtonProps: RefreshButtonProps = {\n    ...(isLoading ? { disabled: true } : {}),\n    resource: routerType === \"legacy\" ? resource?.route : identifier,\n    recordItemId: id,\n    dataProviderName,\n  };\n\n  const defaultHeaderButtons = (\n    <>\n      {hasList && <ListButton {...listButtonProps} />}\n      {isEditButtonVisible && <EditButton {...editButtonProps} />}\n      {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n      <RefreshButton {...refreshButtonProps} />\n    </>\n  );\n\n  return (\n    <div {...(wrapperProps ?? {})}>\n      <PageHeader\n        ghost={false}\n        backIcon={goBackFromProps}\n        onBack={\n          action !== \"list\" && typeof action !== \"undefined\"\n            ? routerType === \"legacy\"\n              ? goBack\n              : back\n            : undefined\n        }\n        title={\n          title ??\n          translate(\n            `${identifier}.titles.show`,\n            `Show ${getUserFriendlyName(\n              resource?.meta?.label ??\n                resource?.options?.label ??\n                resource?.label ??\n                identifier,\n              \"singular\",\n            )}`,\n          )\n        }\n        extra={\n          <Space key=\"extra-buttons\" wrap {...(headerButtonProps ?? {})}>\n            {headerButtons\n              ? typeof headerButtons === \"function\"\n                ? headerButtons({\n                    defaultButtons: defaultHeaderButtons,\n                    deleteButtonProps,\n                    editButtonProps,\n                    listButtonProps,\n                    refreshButtonProps,\n                  })\n                : headerButtons\n              : defaultHeaderButtons}\n          </Space>\n        }\n        breadcrumb={\n          typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n          ) : (\n            <Breadcrumb />\n          )\n        }\n        {...(headerProps ?? {})}\n      >\n        <Spin spinning={isLoading}>\n          <Card\n            bordered={false}\n            actions={\n              footerButtons\n                ? [\n                    <Space key=\"footer-buttons\" wrap {...footerButtonProps}>\n                      {typeof footerButtons === \"function\"\n                        ? footerButtons({\n                            defaultButtons: null,\n                          })\n                        : footerButtons}\n                    </Space>,\n                  ]\n                : undefined\n            }\n            {...(contentProps ?? {})}\n          >\n            {children}\n          </Card>\n        </Spin>\n      </PageHeader>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nimport type { TextFieldProps } from \"../types\";\n\n/**\n * This field lets you show basic text. It uses Ant Design's {@link https://ant.design/components/typography/#Typography.Text `<Typography.Text>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/text} for more details.\n */\nexport const TextField: React.FC<TextFieldProps> = ({ value, ...rest }) => {\n  return <Typography.Text {...rest}>{value}</Typography.Text>;\n};\n","import React from \"react\";\nimport { Tag } from \"antd\";\n\nimport type { TagFieldProps } from \"../types\";\n\n/**\n * This field lets you display a value in a tag. It uses Ant Design's {@link https://ant.design/components/tag/ `<Tag>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/tag} for more details.\n */\nexport const TagField: React.FC<TagFieldProps> = ({ value, ...rest }) => {\n  return <Tag {...rest}>{value?.toString()}</Tag>;\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nimport type { EmailFieldProps } from \"../types\";\n\n/**\n * This field is used to display email values. It uses the {@link https://ant.design/components/typography/#FAQ `<Link>`} component\n * of {@link https://ant.design/components/typography `<Typography>`} from Ant Design.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/email} for more details.\n */\nexport const EmailField: React.FC<EmailFieldProps> = ({ value, ...rest }) => {\n  return (\n    <Typography.Link href={`mailto:${value}`} {...rest}>\n      {value}\n    </Typography.Link>\n  );\n};\n","import React from \"react\";\nimport { Image } from \"antd\";\n\nimport type { ImageFieldProps } from \"../types\";\n\n/**\n * This field is used to display images and uses {@link https://ant.design/components/image/#header `<Image>`} from Ant Design.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/image} for more details.\n */\nexport const ImageField: React.FC<ImageFieldProps> = ({\n  value,\n  imageTitle,\n  ...rest\n}) => {\n  return <Image {...rest} src={value} title={imageTitle} />;\n};\n","import React from \"react\";\nimport { Tooltip } from \"antd\";\n\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\n\nimport type { BooleanFieldProps } from \"../types\";\n\n/**\n * This field is used to display boolean values. It uses the {@link https://ant.design/components/tooltip/#header `<Tooltip>`} values from Ant Design.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/boolean} for more details.\n */\nexport const BooleanField: React.FC<BooleanFieldProps> = ({\n  value,\n  valueLabelTrue = \"true\",\n  valueLabelFalse = \"false\",\n  // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n  trueIcon = <CheckOutlined />,\n  // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n  falseIcon = <CloseOutlined />,\n  ...rest\n}) => {\n  return (\n    <Tooltip title={value ? valueLabelTrue : valueLabelFalse} {...rest}>\n      {value ? <span>{trueIcon}</span> : <span>{falseIcon}</span>}\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport dayjs from \"dayjs\";\nimport { Typography } from \"antd\";\n\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\n\nimport type { DateFieldProps } from \"../types\";\n\n/**\n * This field is used to display dates. It uses {@link https://day.js.org/docs/en/display/format `Day.js`} to display date format.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/date} for more details.\n */\nexport const DateField: React.FC<DateFieldProps> = ({\n  value,\n  locales,\n  format: dateFormat = \"L\",\n  ...rest\n}) => {\n  dayjs.extend(LocalizedFormat);\n\n  const defaultLocale = dayjs.locale();\n\n  return (\n    <Typography.Text {...rest}>\n      {dayjs(value)\n        .locale(locales || defaultLocale)\n        .format(dateFormat)}\n    </Typography.Text>\n  );\n};\n","import React from \"react\";\n\nimport { UrlField } from \"@components\";\nimport type { FileFieldProps } from \"../types\";\n\n/**\n * This field is used to display files and uses {@link https://ant.design/components/typography `<Typography.Link>`} from Ant Design.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/file} for more details.\n */\nexport const FileField: React.FC<FileFieldProps> = ({\n  title,\n  src,\n  ...rest\n}) => {\n  return (\n    <UrlField value={src} title={title} {...rest}>\n      {title ?? src}\n    </UrlField>\n  );\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nimport type { UrlFieldProps } from \"../types\";\n\n/**\n * This field lets you embed a link. It uses Ant Design's {@link https://ant.design/components/typography/ `<Typography.Link>`} component.\n * You can pass a URL in its `value` property and you can show a text in its place by passing any `children`.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/url} for more details.\n */\nexport const UrlField: React.FC<UrlFieldProps> = ({\n  children,\n  value,\n  ...rest\n}) => {\n  return (\n    <Typography.Link href={value} {...rest}>\n      {children ?? value}\n    </Typography.Link>\n  );\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nfunction toLocaleStringSupportsOptions() {\n  return !!(\n    typeof Intl === \"object\" &&\n    Intl &&\n    typeof Intl.NumberFormat === \"function\"\n  );\n}\n\nimport type { NumberFieldProps } from \"../types\";\n\n/**\n * This field is used to display a number formatted according to the browser locale, right aligned. and uses {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl `Intl`} to display date format.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/number} for more details.\n */\nexport const NumberField: React.FC<NumberFieldProps> = ({\n  value,\n  locale,\n  options,\n  ...rest\n}) => {\n  const number = Number(value);\n\n  return (\n    <Typography.Text {...rest}>\n      {toLocaleStringSupportsOptions()\n        ? number.toLocaleString(locale, options)\n        : number}\n    </Typography.Text>\n  );\n};\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\n\nimport type { RefineFieldMarkdownProps } from \"../types\";\n\n/**\n * This field lets you display markdown content. It supports {@link https://github.github.com/gfm/ GitHub Flavored Markdown}.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/markdown} for more details.\n */\nexport const MarkdownField: React.FC<RefineFieldMarkdownProps> = ({\n  value = \"\",\n}) => {\n  // There's an issue related with the type inconsistency of the `remark-gfm` and `remark-rehype` packages, we need to cast the `gfm` as any. (https://github.com/orgs/rehypejs/discussions/63)\n  return (\n    <ReactMarkdown\n      remarkPlugins={[gfm] as unknown as ReactMarkdown.PluggableList}\n    >\n      {value}\n    </ReactMarkdown>\n  );\n};\n","import React, { type ReactNode } from \"react\";\nimport { Button, Space, type TableColumnProps } from \"antd\";\nimport dayjs from \"dayjs\";\nimport { FilterOutlined } from \"@ant-design/icons\";\nimport { useTranslate } from \"@refinedev/core\";\n\ntype AntdFilterDropdownProps = React.ComponentProps<\n  Exclude<TableColumnProps<any>[\"filterDropdown\"], ReactNode>\n>;\n\nexport type MapValueEvent = \"onChange\" | \"value\";\n\nexport type FilterDropdownProps = AntdFilterDropdownProps & {\n  mapValue?: (selectedKeys: React.Key[], event: MapValueEvent) => any;\n  children: JSX.Element;\n};\n\n/**\n * `<FilterDropdown>` is a helper component for {@link https://ant.design/components/table/#components-table-demo-custom-filter-panel filter dropdowns in Ant Design `<Table>` components.}\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/filter-dropdown} for more details.\n */\nexport const FilterDropdown: React.FC<FilterDropdownProps> = (props) => {\n  const {\n    setSelectedKeys,\n    confirm,\n    clearFilters,\n    mapValue = (value) => value,\n    selectedKeys,\n    children,\n  } = props;\n\n  const translate = useTranslate();\n\n  const clearFilter = () => {\n    if (clearFilters) {\n      clearFilters();\n    }\n  };\n\n  const onFilter = () => {\n    let keys;\n    if (typeof selectedKeys === \"number\") {\n      keys = `${selectedKeys}`;\n    } else if (dayjs.isDayjs(selectedKeys)) {\n      keys = [selectedKeys.toISOString()];\n    } else {\n      keys = selectedKeys;\n    }\n\n    setSelectedKeys(keys as any);\n    confirm?.();\n  };\n\n  const onChange = (e: any) => {\n    if (typeof e === \"object\") {\n      if (Array.isArray(e)) {\n        const mappedValue = mapValue(e, \"onChange\");\n        return setSelectedKeys(mappedValue);\n      }\n\n      const changeEvent =\n        !e || !e.target || dayjs.isDayjs(e) ? { target: { value: e } } : e;\n\n      const { target }: React.ChangeEvent<HTMLInputElement> = changeEvent;\n      const mappedValue = mapValue(target.value as any, \"onChange\");\n      setSelectedKeys(mappedValue);\n      return;\n    }\n\n    const mappedValue = mapValue(e, \"onChange\");\n    setSelectedKeys(mappedValue);\n  };\n\n  const childrenWithProps = React.Children.map(children, (child) => {\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child as React.ReactElement, {\n        onChange,\n        value: mapValue(selectedKeys, \"value\"),\n      });\n    }\n    return child;\n  });\n\n  return (\n    <div\n      style={{\n        padding: 10,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-end\",\n      }}\n    >\n      <div style={{ marginBottom: 15 }}>{childrenWithProps}</div>\n      <Space>\n        <Button type=\"primary\" size=\"small\" onClick={() => onFilter()}>\n          {/* @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66 */}\n          <FilterOutlined /> {translate(\"buttons.filter\", \"Filter\")}\n        </Button>\n        <Button danger size=\"small\" onClick={() => clearFilter()}>\n          {translate(\"buttons.clear\", \"Clear\")}\n        </Button>\n      </Space>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useGo, useResource, useRouterType } from \"@refinedev/core\";\nimport type { RefineErrorPageProps } from \"@refinedev/ui-types\";\nimport { Button, Result, Typography, Space, Tooltip } from \"antd\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport { useNavigation, useTranslate } from \"@refinedev/core\";\n\n/**\n * When the app is navigated to a non-existent route, refine shows a default error page.\n * A custom error component can be used for this error page.\n *\n * @see {@link https://refine.dev/docs/packages/documentation/routers/} for more details.\n */\nexport const ErrorComponent: React.FC<RefineErrorPageProps> = () => {\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const translate = useTranslate();\n  const { push } = useNavigation();\n  const go = useGo();\n  const routerType = useRouterType();\n\n  const { resource, action } = useResource();\n\n  useEffect(() => {\n    if (resource) {\n      if (action) {\n        setErrorMessage(\n          translate(\n            \"pages.error.info\",\n            {\n              action: action,\n              resource: resource?.name,\n            },\n            `You may have forgotten to add the \"${action}\" component to \"${resource?.name}\" resource.`,\n          ),\n        );\n      }\n    }\n  }, [resource, action]);\n\n  return (\n    <Result\n      status=\"404\"\n      title=\"404\"\n      extra={\n        <Space direction=\"vertical\" size=\"large\">\n          <Space>\n            <Typography.Text>\n              {translate(\n                \"pages.error.404\",\n                \"Sorry, the page you visited does not exist.\",\n              )}\n            </Typography.Text>\n            {errorMessage && (\n              <Tooltip title={errorMessage}>\n                {/* @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66 */}\n                <InfoCircleOutlined data-testid=\"error-component-tooltip\" />\n              </Tooltip>\n            )}\n          </Space>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              if (routerType === \"legacy\") {\n                push(\"/\");\n              } else {\n                go({ to: \"/\" });\n              }\n            }}\n          >\n            {translate(\"pages.error.backHome\", \"Back Home\")}\n          </Button>\n        </Space>\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport { type LoginPageProps, useActiveAuthProvider } from \"@refinedev/core\";\nimport {\n  Row,\n  Col,\n  Layout,\n  Card,\n  Typography,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n} from \"antd\";\nimport { useLogin, useTranslate } from \"@refinedev/core\";\n\nimport {\n  layoutStyles,\n  containerStyles,\n  titleStyles,\n  imageContainer,\n} from \"./styles\";\n\nexport interface ILoginForm {\n  username: string;\n  password: string;\n  remember: boolean;\n}\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/api-reference/antd/components/antd-auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage} for more details.\n */\nexport const LoginPage: React.FC<LoginPageProps> = () => {\n  const [form] = Form.useForm<ILoginForm>();\n  const translate = useTranslate();\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: login, isLoading } = useLogin<ILoginForm>({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const CardTitle = (\n    <Typography.Title level={3} style={titleStyles}>\n      {translate(\"pages.login.title\", \"Sign in your account\")}\n    </Typography.Title>\n  );\n\n  return (\n    <Layout style={layoutStyles}>\n      <Row\n        justify=\"center\"\n        align=\"middle\"\n        style={{\n          height: \"100vh\",\n        }}\n      >\n        <Col xs={22}>\n          <div style={containerStyles}>\n            <div style={imageContainer}>\n              <img\n                src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                alt=\"Refine Logo\"\n              />\n            </div>\n            <Card title={CardTitle} headStyle={{ borderBottom: 0 }}>\n              <Form<ILoginForm>\n                layout=\"vertical\"\n                form={form}\n                onFinish={(values) => {\n                  login(values);\n                }}\n                requiredMark={false}\n                initialValues={{\n                  remember: false,\n                }}\n              >\n                <Form.Item\n                  name=\"username\"\n                  label={translate(\"pages.login.username\", \"Username\")}\n                  rules={[{ required: true }]}\n                >\n                  <Input\n                    size=\"large\"\n                    placeholder={translate(\"pages.login.username\", \"Username\")}\n                  />\n                </Form.Item>\n                <Form.Item\n                  name=\"password\"\n                  label={translate(\"pages.login.password\", \"Password\")}\n                  rules={[{ required: true }]}\n                  style={{ marginBottom: \"12px\" }}\n                >\n                  <Input type=\"password\" placeholder=\"●●●●●●●●\" size=\"large\" />\n                </Form.Item>\n                <div style={{ marginBottom: \"12px\" }}>\n                  <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                    <Checkbox\n                      style={{\n                        fontSize: \"12px\",\n                      }}\n                    >\n                      {translate(\"pages.login.remember\", \"Remember me\")}\n                    </Checkbox>\n                  </Form.Item>\n\n                  <a\n                    style={{\n                      float: \"right\",\n                      fontSize: \"12px\",\n                    }}\n                    href=\"#\"\n                  >\n                    {translate(\n                      \"pages.login.forgotPassword\",\n                      \"Forgot password?\",\n                    )}\n                  </a>\n                </div>\n                <Button\n                  type=\"primary\"\n                  size=\"large\"\n                  htmlType=\"submit\"\n                  loading={isLoading}\n                  block\n                >\n                  {translate(\"pages.login.signin\", \"Sign in\")}\n                </Button>\n              </Form>\n              <div style={{ marginTop: 8 }}>\n                <Typography.Text style={{ fontSize: 12 }}>\n                  {translate(\"pages.login.noAccount\", \"Don’t have an account?\")}{\" \"}\n                  <a href=\"#\" style={{ fontWeight: \"bold\" }}>\n                    {translate(\"pages.login.signup\", \"Sign up\")}\n                  </a>\n                </Typography.Text>\n              </div>\n            </Card>\n          </div>\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n","import type { CSSProperties } from \"react\";\n\nexport const layoutStyles: CSSProperties = {\n  background: \"radial-gradient(50% 50% at 50% 50%, #63386A 0%, #310438 100%)\",\n  backgroundSize: \"cover\",\n};\n\nexport const containerStyles: CSSProperties = {\n  maxWidth: \"408px\",\n  margin: \"auto\",\n};\n\nexport const titleStyles: CSSProperties = {\n  textAlign: \"center\",\n  color: \"#626262\",\n  fontSize: \"30px\",\n  letterSpacing: \"-0.04em\",\n};\n\nexport const imageContainer: CSSProperties = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  marginBottom: \"28px\",\n};\n","import * as React from \"react\";\nimport type { RefineReadyPageProps } from \"@refinedev/ui-types\";\nimport { Row, Col, Typography, Space, Button } from \"antd\";\nimport { ReadOutlined, FolderOutlined, TeamOutlined } from \"@ant-design/icons\";\n\nconst styles: { [key: string]: React.CSSProperties } = {\n  root: {\n    height: \"100vh\",\n    backgroundImage:\n      \"url('https://refine.ams3.cdn.digitaloceanspaces.com/login-background/background.png')\",\n    backgroundSize: \"cover\",\n    backgroundColor: \"#331049\",\n  },\n  title: {\n    color: \"white\",\n    fontWeight: 800,\n    fontSize: \"64px\",\n    marginBottom: \"8px\",\n  },\n  p1: {\n    color: \"white\",\n    marginBottom: 0,\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  p2: {\n    color: \"white\",\n    fontSize: \"20px\",\n  },\n  code: {\n    backgroundColor: \"white\",\n    color: \"#331049\",\n  },\n};\n\n/**\n * **refine** shows a default ready page on root route when no `resources` is passed to the `<Refine>` component as a property.\n *\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC<RefineReadyPageProps> = () => {\n  return (\n    <Row align=\"middle\" justify=\"center\" style={styles.root}>\n      <Col style={{ textAlign: \"center\" }}>\n        <img\n          style={{ marginBottom: \"48px\" }}\n          src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n          alt=\"Refine Logo\"\n        />\n        <Typography.Title style={styles.title}>\n          Welcome on board\n        </Typography.Title>\n        <p style={styles.p1}>Your configuration is completed.</p>\n        <p style={styles.p2}>\n          Now you can get started by adding your resources to the{\" \"}\n          <code style={styles.code}>{\"resources\"}</code> property of{\" \"}\n          <code style={styles.code}>{\"<Refine>\"}</code>\n        </p>\n        <Space\n          size=\"large\"\n          wrap\n          style={{ marginTop: \"70px\", justifyContent: \"center\" }}\n        >\n          <a href=\"https://refine.dev\" target=\"_blank\" rel=\"noreferrer\">\n            {/* @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66 */}\n            <Button size=\"large\" icon={<ReadOutlined />}>\n              Documentation\n            </Button>\n          </a>\n          <a\n            href=\"https://refine.dev/examples\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {/* @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66 */}\n            <Button size=\"large\" icon={<FolderOutlined />}>\n              Examples\n            </Button>\n          </a>\n          <a href=\"https://discord.gg/refine\" target=\"_blank\" rel=\"noreferrer\">\n            {/* @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66 */}\n            <Button size=\"large\" icon={<TeamOutlined />}>\n              Community\n            </Button>\n          </a>\n        </Space>\n      </Col>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport { WelcomePage as WelcomePageFromCore } from \"@refinedev/core\";\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n * @deprecated `WelcomePage` is deprecated. Use `WelcomePage` from `@refinedev/core` instead.\n */\nexport const WelcomePage: React.FC = () => {\n  return <WelcomePageFromCore />;\n};\n","import React from \"react\";\nimport type { CardProps, FormProps, LayoutProps } from \"antd\";\nimport type { AuthPageProps } from \"@refinedev/core\";\n\nimport {\n  LoginPage,\n  RegisterPage,\n  ForgotPasswordPage,\n  UpdatePasswordPage,\n} from \"./components\";\n\nexport type AuthProps = AuthPageProps<LayoutProps, CardProps, FormProps> & {\n  renderContent?: (\n    content: React.ReactNode,\n    title: React.ReactNode,\n  ) => React.ReactNode;\n  title?: React.ReactNode;\n};\n\n/**\n * **refine** has a default auth page form served on the `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/antd-auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n  const { type } = props;\n  const renderView = () => {\n    switch (type) {\n      case \"register\":\n        return <RegisterPage {...props} />;\n      case \"forgotPassword\":\n        return <ForgotPasswordPage {...props} />;\n      case \"updatePassword\":\n        return <UpdatePasswordPage {...props} />;\n      default:\n        return <LoginPage {...props} />;\n    }\n  };\n\n  return <>{renderView()}</>;\n};\n","import React from \"react\";\nimport {\n  type LoginPageProps,\n  type LoginFormTypes,\n  useLink,\n  useRouterType,\n  useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n  Row,\n  Col,\n  Layout,\n  Card,\n  Typography,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  type CardProps,\n  type LayoutProps,\n  Divider,\n  type FormProps,\n  theme,\n} from \"antd\";\nimport { useLogin, useTranslate, useRouterContext } from \"@refinedev/core\";\n\nimport {\n  bodyStyles,\n  containerStyles,\n  headStyles,\n  layoutStyles,\n  titleStyles,\n} from \"../styles\";\nimport { ThemedTitleV2 } from \"@components\";\n\ntype LoginProps = LoginPageProps<LayoutProps, CardProps, FormProps>;\n/**\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/antd-auth-page/#login} for more details.\n */\nexport const LoginPage: React.FC<LoginProps> = ({\n  providers,\n  registerLink,\n  forgotPasswordLink,\n  rememberMe,\n  contentProps,\n  wrapperProps,\n  renderContent,\n  formProps,\n  title,\n  hideForm,\n}) => {\n  const { token } = theme.useToken();\n  const [form] = Form.useForm<LoginFormTypes>();\n  const translate = useTranslate();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: login, isLoading } = useLogin<LoginFormTypes>({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const PageTitle =\n    title === false ? null : (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginBottom: \"32px\",\n          fontSize: \"20px\",\n        }}\n      >\n        {title ?? <ThemedTitleV2 collapsed={false} />}\n      </div>\n    );\n\n  const CardTitle = (\n    <Typography.Title\n      level={3}\n      style={{\n        color: token.colorPrimaryTextHover,\n        ...titleStyles,\n      }}\n    >\n      {translate(\"pages.login.title\", \"Sign in to your account\")}\n    </Typography.Title>\n  );\n\n  const renderProviders = () => {\n    if (providers && providers.length > 0) {\n      return (\n        <>\n          {providers.map((provider) => {\n            return (\n              <Button\n                key={provider.name}\n                type=\"default\"\n                block\n                icon={provider.icon}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  width: \"100%\",\n                  marginBottom: \"8px\",\n                }}\n                onClick={() =>\n                  login({\n                    providerName: provider.name,\n                  })\n                }\n              >\n                {provider.label}\n              </Button>\n            );\n          })}\n          {!hideForm && (\n            <Divider>\n              <Typography.Text\n                style={{\n                  color: token.colorTextLabel,\n                }}\n              >\n                {translate(\"pages.login.divider\", \"or\")}\n              </Typography.Text>\n            </Divider>\n          )}\n        </>\n      );\n    }\n    return null;\n  };\n\n  const CardContent = (\n    <Card\n      title={CardTitle}\n      headStyle={headStyles}\n      bodyStyle={bodyStyles}\n      style={{\n        ...containerStyles,\n        backgroundColor: token.colorBgElevated,\n      }}\n      {...(contentProps ?? {})}\n    >\n      {renderProviders()}\n      {!hideForm && (\n        <Form<LoginFormTypes>\n          layout=\"vertical\"\n          form={form}\n          onFinish={(values) => login(values)}\n          requiredMark={false}\n          initialValues={{\n            remember: false,\n          }}\n          {...formProps}\n        >\n          <Form.Item\n            name=\"email\"\n            label={translate(\"pages.login.fields.email\", \"Email\")}\n            rules={[\n              {\n                required: true,\n                message: translate(\n                  \"pages.login.errors.requiredEmail\",\n                  \"Email is required\",\n                ),\n              },\n              {\n                type: \"email\",\n                message: translate(\n                  \"pages.login.errors.validEmail\",\n                  \"Invalid email address\",\n                ),\n              },\n            ]}\n          >\n            <Input\n              size=\"large\"\n              placeholder={translate(\"pages.login.fields.email\", \"Email\")}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            label={translate(\"pages.login.fields.password\", \"Password\")}\n            rules={[\n              {\n                required: true,\n                message: translate(\n                  \"pages.login.errors.requiredPassword\",\n                  \"Password is required\",\n                ),\n              },\n            ]}\n          >\n            <Input\n              type=\"password\"\n              autoComplete=\"current-password\"\n              placeholder=\"●●●●●●●●\"\n              size=\"large\"\n            />\n          </Form.Item>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginBottom: \"24px\",\n            }}\n          >\n            {rememberMe ?? (\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                <Checkbox\n                  style={{\n                    fontSize: \"12px\",\n                  }}\n                >\n                  {translate(\"pages.login.buttons.rememberMe\", \"Remember me\")}\n                </Checkbox>\n              </Form.Item>\n            )}\n            {forgotPasswordLink ?? (\n              <ActiveLink\n                style={{\n                  color: token.colorPrimaryTextHover,\n                  fontSize: \"12px\",\n                  marginLeft: \"auto\",\n                }}\n                to=\"/forgot-password\"\n              >\n                {translate(\n                  \"pages.login.buttons.forgotPassword\",\n                  \"Forgot password?\",\n                )}\n              </ActiveLink>\n            )}\n          </div>\n          {!hideForm && (\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                size=\"large\"\n                htmlType=\"submit\"\n                loading={isLoading}\n                block\n              >\n                {translate(\"pages.login.signin\", \"Sign in\")}\n              </Button>\n            </Form.Item>\n          )}\n        </Form>\n      )}\n\n      {registerLink ?? (\n        <div\n          style={{\n            marginTop: hideForm ? 16 : 8,\n          }}\n        >\n          <Typography.Text style={{ fontSize: 12 }}>\n            {translate(\n              \"pages.login.buttons.noAccount\",\n              \"Don’t have an account?\",\n            )}{\" \"}\n            <ActiveLink\n              to=\"/register\"\n              style={{\n                fontWeight: \"bold\",\n                color: token.colorPrimaryTextHover,\n              }}\n            >\n              {translate(\"pages.login.signup\", \"Sign up\")}\n            </ActiveLink>\n          </Typography.Text>\n        </div>\n      )}\n    </Card>\n  );\n\n  return (\n    <Layout style={layoutStyles} {...(wrapperProps ?? {})}>\n      <Row\n        justify=\"center\"\n        align={hideForm ? \"top\" : \"middle\"}\n        style={{\n          padding: \"16px 0\",\n          minHeight: \"100dvh\",\n          paddingTop: hideForm ? \"15dvh\" : \"16px\",\n        }}\n      >\n        <Col xs={22}>\n          {renderContent ? (\n            renderContent(CardContent, PageTitle)\n          ) : (\n            <>\n              {PageTitle}\n              {CardContent}\n            </>\n          )}\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n","import type { CSSProperties } from \"react\";\n\nexport const layoutStyles: CSSProperties = {};\n\nexport const containerStyles: CSSProperties = {\n  maxWidth: \"400px\",\n  margin: \"auto\",\n  padding: \"32px\",\n  boxShadow:\n    \"0px 2px 4px rgba(0, 0, 0, 0.02), 0px 1px 6px -1px rgba(0, 0, 0, 0.02), 0px 1px 2px rgba(0, 0, 0, 0.03)\",\n};\n\nexport const headStyles: CSSProperties = {\n  borderBottom: 0,\n  padding: 0,\n};\n\nexport const bodyStyles: CSSProperties = { padding: 0, marginTop: \"32px\" };\n\nexport const titleStyles: CSSProperties = {\n  textAlign: \"center\",\n  marginBottom: 0,\n  fontSize: \"24px\",\n  lineHeight: \"32px\",\n  fontWeight: 700,\n  overflowWrap: \"break-word\",\n  hyphens: \"manual\",\n  textOverflow: \"unset\",\n  whiteSpace: \"pre-wrap\",\n};\n","import React from \"react\";\nimport {\n  type RegisterPageProps,\n  type RegisterFormTypes,\n  useRouterType,\n  useLink,\n  useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n  Row,\n  Col,\n  Layout,\n  Card,\n  Typography,\n  Form,\n  Input,\n  Button,\n  type LayoutProps,\n  type CardProps,\n  type FormProps,\n  Divider,\n  theme,\n} from \"antd\";\nimport { useTranslate, useRouterContext, useRegister } from \"@refinedev/core\";\n\nimport {\n  layoutStyles,\n  containerStyles,\n  titleStyles,\n  headStyles,\n  bodyStyles,\n} from \"../styles\";\nimport { ThemedTitleV2 } from \"@components\";\n\ntype RegisterProps = RegisterPageProps<LayoutProps, CardProps, FormProps>;\n/**\n * **refine** has register page form which is served on `/register` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/antd-auth-page/#register} for more details.\n */\nexport const RegisterPage: React.FC<RegisterProps> = ({\n  providers,\n  loginLink,\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title,\n  hideForm,\n}) => {\n  const { token } = theme.useToken();\n  const [form] = Form.useForm<RegisterFormTypes>();\n  const translate = useTranslate();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: register, isLoading } = useRegister<RegisterFormTypes>({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const PageTitle =\n    title === false ? null : (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginBottom: \"32px\",\n          fontSize: \"20px\",\n        }}\n      >\n        {title ?? <ThemedTitleV2 collapsed={false} />}\n      </div>\n    );\n\n  const CardTitle = (\n    <Typography.Title\n      level={3}\n      style={{\n        color: token.colorPrimaryTextHover,\n        ...titleStyles,\n      }}\n    >\n      {translate(\"pages.register.title\", \"Sign up for your account\")}\n    </Typography.Title>\n  );\n\n  const renderProviders = () => {\n    if (providers && providers.length > 0) {\n      return (\n        <>\n          {providers.map((provider) => {\n            return (\n              <Button\n                key={provider.name}\n                type=\"default\"\n                block\n                icon={provider.icon}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  width: \"100%\",\n                  marginBottom: \"8px\",\n                }}\n                onClick={() =>\n                  register({\n                    providerName: provider.name,\n                  })\n                }\n              >\n                {provider.label}\n              </Button>\n            );\n          })}\n          {!hideForm && (\n            <Divider>\n              <Typography.Text\n                style={{\n                  color: token.colorTextLabel,\n                }}\n              >\n                {translate(\"pages.login.divider\", \"or\")}\n              </Typography.Text>\n            </Divider>\n          )}\n        </>\n      );\n    }\n    return null;\n  };\n\n  const CardContent = (\n    <Card\n      title={CardTitle}\n      headStyle={headStyles}\n      bodyStyle={bodyStyles}\n      style={{\n        ...containerStyles,\n        backgroundColor: token.colorBgElevated,\n      }}\n      {...(contentProps ?? {})}\n    >\n      {renderProviders()}\n      {!hideForm && (\n        <Form<RegisterFormTypes>\n          layout=\"vertical\"\n          form={form}\n          onFinish={(values) => register(values)}\n          requiredMark={false}\n          {...formProps}\n        >\n          <Form.Item\n            name=\"email\"\n            label={translate(\"pages.register.email\", \"Email\")}\n            rules={[\n              {\n                required: true,\n                message: translate(\n                  \"pages.register.errors.requiredEmail\",\n                  \"Email is required\",\n                ),\n              },\n              {\n                type: \"email\",\n                message: translate(\n                  \"pages.register.errors.validEmail\",\n                  \"Invalid email address\",\n                ),\n              },\n            ]}\n          >\n            <Input\n              size=\"large\"\n              placeholder={translate(\"pages.register.fields.email\", \"Email\")}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            label={translate(\"pages.register.fields.password\", \"Password\")}\n            rules={[\n              {\n                required: true,\n                message: translate(\n                  \"pages.register.errors.requiredPassword\",\n                  \"Password is required\",\n                ),\n              },\n            ]}\n          >\n            <Input type=\"password\" placeholder=\"●●●●●●●●\" size=\"large\" />\n          </Form.Item>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginBottom: \"24px\",\n            }}\n          >\n            {loginLink ?? (\n              <Typography.Text\n                style={{\n                  fontSize: 12,\n                  marginLeft: \"auto\",\n                }}\n              >\n                {translate(\n                  \"pages.login.buttons.haveAccount\",\n                  \"Have an account?\",\n                )}{\" \"}\n                <ActiveLink\n                  style={{\n                    fontWeight: \"bold\",\n                    color: token.colorPrimaryTextHover,\n                  }}\n                  to=\"/login\"\n                >\n                  {translate(\"pages.login.signin\", \"Sign in\")}\n                </ActiveLink>\n              </Typography.Text>\n            )}\n          </div>\n          <Form.Item\n            style={{\n              marginBottom: 0,\n            }}\n          >\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              htmlType=\"submit\"\n              loading={isLoading}\n              block\n            >\n              {translate(\"pages.register.buttons.submit\", \"Sign up\")}\n            </Button>\n          </Form.Item>\n        </Form>\n      )}\n      {hideForm && loginLink !== false && (\n        <div\n          style={{\n            marginTop: hideForm ? 16 : 8,\n          }}\n        >\n          <Typography.Text\n            style={{\n              fontSize: 12,\n            }}\n          >\n            {translate(\"pages.login.buttons.haveAccount\", \"Have an account?\")}{\" \"}\n            <ActiveLink\n              style={{\n                fontWeight: \"bold\",\n                color: token.colorPrimaryTextHover,\n              }}\n              to=\"/login\"\n            >\n              {translate(\"pages.login.signin\", \"Sign in\")}\n            </ActiveLink>\n          </Typography.Text>\n        </div>\n      )}\n    </Card>\n  );\n\n  return (\n    <Layout style={layoutStyles} {...(wrapperProps ?? {})}>\n      <Row\n        justify=\"center\"\n        align={hideForm ? \"top\" : \"middle\"}\n        style={{\n          padding: \"16px 0\",\n          minHeight: \"100dvh\",\n          paddingTop: hideForm ? \"15dvh\" : \"16px\",\n        }}\n      >\n        <Col xs={22}>\n          {renderContent ? (\n            renderContent(CardContent, PageTitle)\n          ) : (\n            <>\n              {PageTitle}\n              {CardContent}\n            </>\n          )}\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n","import React from \"react\";\nimport {\n  type ForgotPasswordPageProps,\n  type ForgotPasswordFormTypes,\n  useRouterType,\n  useLink,\n} from \"@refinedev/core\";\nimport {\n  Row,\n  Col,\n  Layout,\n  Card,\n  Typography,\n  Form,\n  Input,\n  Button,\n  type LayoutProps,\n  type CardProps,\n  type FormProps,\n  theme,\n} from \"antd\";\nimport {\n  useTranslate,\n  useRouterContext,\n  useForgotPassword,\n} from \"@refinedev/core\";\n\nimport {\n  layoutStyles,\n  containerStyles,\n  titleStyles,\n  headStyles,\n  bodyStyles,\n} from \"../styles\";\nimport { ThemedTitleV2 } from \"@components\";\n\ntype ResetPassworProps = ForgotPasswordPageProps<\n  LayoutProps,\n  CardProps,\n  FormProps\n>;\n\n/**\n * **refine** has forgot password page form which is served on `/forgot-password` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/antd-auth-page/#forgot-password} for more details.\n */\nexport const ForgotPasswordPage: React.FC<ResetPassworProps> = ({\n  loginLink,\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title,\n}) => {\n  const { token } = theme.useToken();\n  const [form] = Form.useForm<ForgotPasswordFormTypes>();\n  const translate = useTranslate();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const { mutate: forgotPassword, isLoading } =\n    useForgotPassword<ForgotPasswordFormTypes>();\n\n  const PageTitle =\n    title === false ? null : (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginBottom: \"32px\",\n          fontSize: \"20px\",\n        }}\n      >\n        {title ?? <ThemedTitleV2 collapsed={false} />}\n      </div>\n    );\n\n  const CardTitle = (\n    <Typography.Title\n      level={3}\n      style={{\n        color: token.colorPrimaryTextHover,\n        ...titleStyles,\n      }}\n    >\n      {translate(\"pages.forgotPassword.title\", \"Forgot your password?\")}\n    </Typography.Title>\n  );\n  const CardContent = (\n    <Card\n      title={CardTitle}\n      headStyle={headStyles}\n      bodyStyle={bodyStyles}\n      style={{\n        ...containerStyles,\n        backgroundColor: token.colorBgElevated,\n      }}\n      {...(contentProps ?? {})}\n    >\n      <Form<ForgotPasswordFormTypes>\n        layout=\"vertical\"\n        form={form}\n        onFinish={(values) => forgotPassword(values)}\n        requiredMark={false}\n        {...formProps}\n      >\n        <Form.Item\n          name=\"email\"\n          label={translate(\"pages.forgotPassword.fields.email\", \"Email\")}\n          rules={[\n            {\n              required: true,\n              message: translate(\n                \"pages.forgotPassword.errors.requiredEmail\",\n                \"Email is required\",\n              ),\n            },\n            {\n              type: \"email\",\n              message: translate(\n                \"pages.forgotPassword.errors.validEmail\",\n                \"Invalid email address\",\n              ),\n            },\n          ]}\n        >\n          <Input\n            type=\"email\"\n            size=\"large\"\n            placeholder={translate(\n              \"pages.forgotPassword.fields.email\",\n              \"Email\",\n            )}\n          />\n        </Form.Item>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          {loginLink ?? (\n            <Typography.Text\n              style={{\n                fontSize: 12,\n                marginLeft: \"auto\",\n              }}\n            >\n              {translate(\n                \"pages.register.buttons.haveAccount\",\n                \"Have an account? \",\n              )}{\" \"}\n              <ActiveLink\n                style={{\n                  fontWeight: \"bold\",\n                  color: token.colorPrimaryTextHover,\n                }}\n                to=\"/login\"\n              >\n                {translate(\"pages.login.signin\", \"Sign in\")}\n              </ActiveLink>\n            </Typography.Text>\n          )}\n        </div>\n        <Form.Item\n          style={{\n            marginTop: \"24px\",\n            marginBottom: 0,\n          }}\n        >\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            htmlType=\"submit\"\n            loading={isLoading}\n            block\n          >\n            {translate(\n              \"pages.forgotPassword.buttons.submit\",\n              \"Send reset instructions\",\n            )}\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n\n  return (\n    <Layout style={layoutStyles} {...(wrapperProps ?? {})}>\n      <Row\n        justify=\"center\"\n        align=\"middle\"\n        style={{\n          padding: \"16px 0\",\n          minHeight: \"100dvh\",\n        }}\n      >\n        <Col xs={22}>\n          {renderContent ? (\n            renderContent(CardContent, PageTitle)\n          ) : (\n            <>\n              {PageTitle}\n              {CardContent}\n            </>\n          )}\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n","import React from \"react\";\nimport {\n  type UpdatePasswordPageProps,\n  type UpdatePasswordFormTypes,\n  useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n  Row,\n  Col,\n  Layout,\n  Card,\n  Typography,\n  Form,\n  Input,\n  Button,\n  type LayoutProps,\n  type CardProps,\n  type FormProps,\n  theme,\n} from \"antd\";\nimport { useTranslate, useUpdatePassword } from \"@refinedev/core\";\n\nimport {\n  layoutStyles,\n  containerStyles,\n  titleStyles,\n  headStyles,\n  bodyStyles,\n} from \"../styles\";\nimport { ThemedTitleV2 } from \"@components\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n  LayoutProps,\n  CardProps,\n  FormProps\n>;\n\n/**\n * **refine** has update password page form which is served on `/update-password` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/antd-auth-page/#update-password} for more details.\n */\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title,\n}) => {\n  const { token } = theme.useToken();\n  const [form] = Form.useForm<UpdatePasswordFormTypes>();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: updatePassword, isLoading } =\n    useUpdatePassword<UpdatePasswordFormTypes>({\n      v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n  const PageTitle =\n    title === false ? null : (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginBottom: \"32px\",\n          fontSize: \"20px\",\n        }}\n      >\n        {title ?? <ThemedTitleV2 collapsed={false} />}\n      </div>\n    );\n\n  const CardTitle = (\n    <Typography.Title\n      level={3}\n      style={{\n        color: token.colorPrimaryTextHover,\n        ...titleStyles,\n      }}\n    >\n      {translate(\"pages.updatePassword.title\", \"Set New Password\")}\n    </Typography.Title>\n  );\n\n  const CardContent = (\n    <Card\n      title={CardTitle}\n      headStyle={headStyles}\n      bodyStyle={bodyStyles}\n      style={{\n        ...containerStyles,\n        backgroundColor: token.colorBgElevated,\n      }}\n      {...(contentProps ?? {})}\n    >\n      <Form<UpdatePasswordFormTypes>\n        layout=\"vertical\"\n        form={form}\n        onFinish={(values) => updatePassword(values)}\n        requiredMark={false}\n        {...formProps}\n      >\n        <Form.Item\n          name=\"password\"\n          label={translate(\n            \"pages.updatePassword.fields.password\",\n            \"New Password\",\n          )}\n          rules={[\n            {\n              required: true,\n              message: translate(\n                \"pages.updatePassword.errors.requiredPassword\",\n                \"Password is required\",\n              ),\n            },\n          ]}\n          style={{ marginBottom: \"12px\" }}\n        >\n          <Input type=\"password\" placeholder=\"●●●●●●●●\" size=\"large\" />\n        </Form.Item>\n        <Form.Item\n          name=\"confirmPassword\"\n          label={translate(\n            \"pages.updatePassword.fields.confirmPassword\",\n            \"Confirm New Password\",\n          )}\n          hasFeedback\n          dependencies={[\"password\"]}\n          rules={[\n            {\n              required: true,\n              message: translate(\n                \"pages.updatePassword.errors.requiredConfirmPassword\",\n                \"Confirm password is required\",\n              ),\n            },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue(\"password\") === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  new Error(\n                    translate(\n                      \"pages.updatePassword.errors.confirmPasswordNotMatch\",\n                      \"Passwords do not match\",\n                    ),\n                  ),\n                );\n              },\n            }),\n          ]}\n        >\n          <Input type=\"password\" placeholder=\"●●●●●●●●\" size=\"large\" />\n        </Form.Item>\n        <Form.Item\n          style={{\n            marginBottom: 0,\n          }}\n        >\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            htmlType=\"submit\"\n            loading={isLoading}\n            block\n          >\n            {translate(\"pages.updatePassword.buttons.submit\", \"Update\")}\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n\n  return (\n    <Layout style={layoutStyles} {...(wrapperProps ?? {})}>\n      <Row\n        justify=\"center\"\n        align=\"middle\"\n        style={{\n          padding: \"16px 0\",\n          minHeight: \"100dvh\",\n        }}\n      >\n        <Col xs={22}>\n          {renderContent ? (\n            renderContent(CardContent, PageTitle)\n          ) : (\n            <>\n              {PageTitle}\n              {CardContent}\n            </>\n          )}\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n","import React from \"react\";\nimport {\n  useBreadcrumb,\n  useLink,\n  useRefineContext,\n  useRouterContext,\n  useRouterType,\n  useResource,\n  matchResourceFromRoute,\n} from \"@refinedev/core\";\nimport type { RefineBreadcrumbProps } from \"@refinedev/ui-types\";\n\nimport {\n  Breadcrumb as AntdBreadcrumb,\n  type BreadcrumbProps as AntdBreadcrumbProps,\n} from \"antd\";\nimport { HomeOutlined } from \"@ant-design/icons\";\n\nexport type BreadcrumbProps = RefineBreadcrumbProps<AntdBreadcrumbProps>;\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({\n  breadcrumbProps,\n  showHome = true,\n  hideIcons = false,\n  meta,\n}) => {\n  const routerType = useRouterType();\n  const { breadcrumbs } = useBreadcrumb({\n    meta,\n  });\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n  const { hasDashboard } = useRefineContext();\n\n  const { resources } = useResource();\n\n  const rootRouteResource = matchResourceFromRoute(\"/\", resources);\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  if (breadcrumbs.length === 1) {\n    return null;\n  }\n\n  const breadCrumbItems = breadcrumbs.map(({ label, icon, href }) => ({\n    key: `breadcrumb-item-${label}`,\n    title: (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          gap: 4,\n        }}\n      >\n        {!hideIcons && icon}\n        {href ? (\n          <ActiveLink to={href}>{label}</ActiveLink>\n        ) : (\n          <span>{label}</span>\n        )}\n      </div>\n    ),\n  }));\n\n  const getBreadcrumbItems = () => {\n    if (showHome && (hasDashboard || rootRouteResource.found)) {\n      return [\n        {\n          key: \"breadcrumb-item-home\",\n          title: (\n            <ActiveLink to=\"/\">\n              {/* @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66 */}\n              {rootRouteResource?.resource?.meta?.icon ?? <HomeOutlined />}\n            </ActiveLink>\n          ),\n        },\n        ...breadCrumbItems,\n      ];\n    }\n\n    return breadCrumbItems;\n  };\n\n  return <AntdBreadcrumb items={getBreadcrumbItems()} {...breadcrumbProps} />;\n};\n","import React, { type FC } from \"react\";\nimport {\n  PageHeader as AntdPageHeader,\n  type PageHeaderProps as AntdPageHeaderProps,\n} from \"@ant-design/pro-layout\";\nimport { Button, Typography } from \"antd\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport type PageHeaderProps = AntdPageHeaderProps;\n\nexport const PageHeader: FC<AntdPageHeaderProps> = ({ children, ...props }) => {\n  const backIcon =\n    typeof props.backIcon === \"undefined\" ? (\n      // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n      <Button type=\"text\" icon={<ArrowLeftOutlined />} />\n    ) : (\n      props.backIcon\n    );\n\n  const title =\n    typeof props.title === \"string\" ? (\n      <Typography.Title\n        className={RefinePageHeaderClassNames.Title}\n        level={4}\n        style={{ marginBottom: 0 }}\n      >\n        {props.title}\n      </Typography.Title>\n    ) : (\n      props.title\n    );\n\n  const subtitle =\n    typeof props.title === \"string\" ? (\n      <Typography.Title\n        className={RefinePageHeaderClassNames.SubTitle}\n        level={5}\n        type=\"secondary\"\n        style={{ marginBottom: 0 }}\n      >\n        {props.subTitle}\n      </Typography.Title>\n    ) : (\n      props.subTitle\n    );\n\n  return (\n    <AntdPageHeader\n      {...props}\n      backIcon={backIcon}\n      title={title}\n      subTitle={subtitle}\n      style={{ padding: 0, ...props.style }}\n    >\n      {children}\n    </AntdPageHeader>\n  );\n};\n","import React from \"react\";\nimport {\n  type AutoSaveIndicatorProps,\n  useTranslate,\n  AutoSaveIndicator as AutoSaveIndicatorCore,\n} from \"@refinedev/core\";\nimport { Typography, theme } from \"antd\";\nimport {\n  EllipsisOutlined,\n  SyncOutlined,\n  CheckCircleOutlined,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\n\nexport const AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({\n  status,\n  elements: {\n    success = (\n      <Message\n        key=\"autoSave.success\"\n        defaultMessage=\"saved\"\n        // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n        icon={<CheckCircleOutlined />}\n      />\n    ),\n    error = (\n      <Message\n        key=\"autoSave.error\"\n        defaultMessage=\"auto save failure\"\n        // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n        icon={<ExclamationCircleOutlined />}\n      />\n    ),\n    loading = (\n      <Message\n        key=\"autoSave.loading\"\n        defaultMessage=\"saving...\"\n        // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n        icon={<SyncOutlined />}\n      />\n    ),\n    idle = (\n      <Message\n        key=\"autoSave.idle\"\n        defaultMessage=\"waiting for changes\"\n        // @ts-expect-error Ant Design Icon's v5.0.1 has an issue with @types/react@^18.2.66\n        icon={<EllipsisOutlined />}\n      />\n    ),\n  } = {},\n}) => {\n  return (\n    <AutoSaveIndicatorCore\n      status={status}\n      elements={{\n        success,\n        error,\n        loading,\n        idle,\n      }}\n    />\n  );\n};\n\nconst Message = ({\n  key,\n  defaultMessage,\n  icon,\n}: {\n  key: string;\n  defaultMessage: string;\n  icon: React.ReactNode;\n}) => {\n  const translate = useTranslate();\n  const { token } = theme.useToken();\n\n  return (\n    <Typography.Text\n      style={{\n        marginRight: 5,\n        color: token.colorTextTertiary,\n        fontSize: \".8rem\",\n      }}\n    >\n      {translate(key, defaultMessage)}\n      <span style={{ marginLeft: \".2rem\" }}>{icon}</span>\n    </Typography.Text>\n  );\n};\n","import type {\n  FilterDropdownProps,\n  MapValueEvent,\n} from \"@components/table/components\";\nimport dayjs from \"dayjs\";\n\n/**\n * It is a mapper function for the <DatePicker.RangePicker /> filter.\n * when the `event` is:\n * - `\"value\"`: It converts the `selectedKeys` to Dayjs objects to be used in the `<DatePicker.RangePicker />` component.\n * - `\"onChange\"`, It converts the Dayjs objects to ISO 8601 string format to be used in the Refine(data-provider, syncWithLocation etc.) filter.\n * @see {@link https://refine.dev/docs/ui-integrations/ant-design/components/filter-dropdown/#rangepickerfiltermapper} for more details.\n * @example\n * ```tsx\n * <Table.Column\n *   dataIndex=\"createdAt\"\n *   title=\"Date & Time\"\n *   filterDropdown={(props) => (\n *     <FilterDropdown\n *       {...props}\n *       mapValue={(selectedKeys, event) => {\n *         return rangePickerFilterMapper(selectedKeys, event);\n *       }}\n *     >\n *       <DatePicker.RangePicker />\n *     </FilterDropdown>\n *   )}\n * />\n * ```\n */\nexport const rangePickerFilterMapper = (\n  selectedKeys: FilterDropdownProps[\"selectedKeys\"],\n  event: MapValueEvent,\n) => {\n  if (!selectedKeys) {\n    return selectedKeys;\n  }\n\n  if (event === \"value\") {\n    return selectedKeys.map((key) => {\n      if (typeof key === \"string\") {\n        return dayjs(key);\n      }\n\n      return key;\n    });\n  }\n\n  if (event === \"onChange\") {\n    if (selectedKeys.every(dayjs.isDayjs)) {\n      return selectedKeys.map((date: any) => dayjs(date).toISOString());\n    }\n  }\n\n  return selectedKeys;\n};\n","import type { UploadFile, UploadChangeParam } from \"antd/lib/upload/interface\";\n\nexport const getValueFromEvent = (event: UploadChangeParam): UploadFile[] => {\n  const { fileList } = event;\n\n  return [...fileList];\n};\n\nexport function file2Base64(file: UploadFile): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    const resultHandler = () => {\n      if (reader.result) {\n        reader.removeEventListener(\"load\", resultHandler, false);\n\n        resolve(reader.result as string);\n      }\n    };\n\n    reader.addEventListener(\"load\", resultHandler, false);\n\n    reader.readAsDataURL(file.originFileObj as Blob);\n    reader.onerror = (error) => {\n      reader.removeEventListener(\"load\", resultHandler, false);\n      return reject(error);\n    };\n  });\n}\n","import type { ThemeConfig } from \"antd\";\n\ntype ThemeNames =\n  | \"Blue\"\n  | \"Purple\"\n  | \"Magenta\"\n  | \"Red\"\n  | \"Orange\"\n  | \"Yellow\"\n  | \"Green\";\n\ntype RefineThemes = Record<ThemeNames, ThemeConfig>;\n\nexport const RefineThemes: RefineThemes = {\n  Blue: {\n    token: {\n      colorPrimary: \"#1677FF\",\n    },\n  },\n  Purple: {\n    token: {\n      colorPrimary: \"#722ED1\",\n    },\n  },\n  Magenta: {\n    token: {\n      colorPrimary: \"#EB2F96\",\n    },\n  },\n  Red: {\n    token: {\n      colorPrimary: \"#F5222D\",\n    },\n  },\n  Orange: {\n    token: {\n      colorPrimary: \"#FA541C\",\n    },\n  },\n  Yellow: {\n    token: {\n      colorPrimary: \"#FAAD14\",\n    },\n  },\n  Green: {\n    token: {\n      colorPrimary: \"#52C41A\",\n    },\n  },\n};\n"],"mappings":"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","names":["React","Form","useFormSF","flattenObjectKeys","propertyPathToArray","useFormCore","useWarnAboutChange","pickNotDeprecated","useTranslate","useRefineContext","useForm","__name","action","resource","onMutationSuccessProp","onMutationErrorProp","autoSave","submitOnEnter","warnWhenUnsavedChangesProp","redirect","successNotification","errorNotification","meta","metaData","queryMeta","mutationMeta","liveMode","liveParams","mutationMode","dataProviderName","onLiveEvent","invalidates","undoableTimeout","queryOptions","createMutationOptions","updateMutationOptions","idFromProps","overtimeOptions","optimisticUpdateMap","disableServerSideValidationProp","_a","_b","options","useRefineContext","disableServerSideValidation","translate","useTranslate","formAnt","Form","formSF","useFormSF","form","useFormCoreResult","useFormCore","error","_variables","_context","parsedErrors","fieldsValue","flattenObjectKeys","field","propertyPathToArray","errors","key","fieldError","newError","pickNotDeprecated","formLoading","onFinish","queryResult","id","onFinishAutoSave","warnWhenUnsavedChangesRefine","setWarnWhen","useWarnAboutChange","warnWhenUnsavedChanges","React","onKeyUp","event","onValuesChange","changeValues","allValues","onFinishFromProps","values","saveButtonProps","React","useCallback","useTranslate","useWarnAboutChange","useUserFriendlyName","useResource","useParsed","useGo","useInvalidate","useCoreModal","useModal","__name","modalProps","show","close","visible","useCoreModal","e","_a","useModalForm","__name","syncWithLocation","defaultVisible","autoSubmitClose","autoResetForm","autoSave","invalidates","rest","_a","_b","initiallySynced","setInitiallySynced","React","invalidate","useInvalidate","resource","actionFromParams","identifier","useResource","parsed","useParsed","go","useGo","getUserFriendlyName","useUserFriendlyName","action","syncingId","syncWithLocationKey","useFormProps","useForm","form","formProps","id","setId","formLoading","onFinish","autoSaveProps","translate","useTranslate","warnWhen","setWarnWhen","useWarnAboutChange","show","close","modalProps","useModal","visible","sunflowerUseModal","_c","_d","openStatus","idFromParams","saveButtonPropsSF","handleClose","useCallback","handleShow","showId","_visible","otherModalProps","newModalProps","values","React","useCallback","useTranslate","useWarnAboutChange","useResource","useParsed","useGo","useModal","useInvalidate","useDrawerForm","__name","syncWithLocation","defaultVisible","autoSubmitClose","autoResetForm","autoSave","invalidates","rest","invalidate","useInvalidate","initiallySynced","setInitiallySynced","React","visible","show","close","useModal","resource","actionFromParams","identifier","useResource","parsed","useParsed","go","useGo","action","syncingId","syncWithLocationKey","useFormProps","useForm","form","formProps","formLoading","id","setId","onFinish","autoSaveProps","_a","_b","_c","_d","openStatus","idFromParams","translate","useTranslate","warnWhen","setWarnWhen","useWarnAboutChange","saveButtonProps","deleteButtonProps","handleClose","useCallback","handleShow","showId","values","useStepsFormSF","useStepsForm","__name","props","useFormProps","useForm","form","formProps","stepsPropsSunflower","useStepsFormSF","values","_a","React","Children","createElement","Fragment","Grid","Form","useFormSF","useLiveMode","useTableCore","pickNotDeprecated","useSyncWithLocation","getDefaultFilterCore","getDefaultSortOrderCore","getDefaultSortOrder","__name","columnName","sorter","sort","getDefaultSortOrderCore","getDefaultFilter","filters","operatorType","getDefaultFilterCore","mapAntdSorterToCrudSorting","crudSorting","a","b","_a","_b","item","field","mapAntdFilterToCrudFilter","tableFilters","prevFilters","initialFilters","crudFilters","mapInitialFilter","acc","value","operator","i","useLink","useRouterContext","useRouterType","React","PaginationLink","__name","to","element","LegacyLink","useRouterContext","routerType","useRouterType","Link","useLink","React","e","useTable","__name","onSearch","initialCurrent","initialPageSize","hasPagination","pagination","initialSorter","permanentSorter","initialFilter","permanentFilter","defaultSetFilterBehavior","filtersFromProp","sortersFromProp","syncWithLocation","resource","successNotification","errorNotification","queryOptions","liveModeFromProp","onLiveEvent","liveParams","meta","metaData","dataProviderName","tableQueryResult","current","setCurrent","pageSize","setPageSize","filters","setFilters","sorters","setSorters","sorter","setSorter","createLinkForSyncWithLocation","pageCount","overtime","useTableCore","pickNotDeprecated","defaultSyncWithLocation","useSyncWithLocation","shouldSyncWithLocation","breakpoint","Grid","form","Form","formSF","useFormSF","liveMode","useLiveMode","hasPaginationString","isPaginationEnabled","preferredInitialFilters","data","isFetched","isLoading","React","registeredFields","filterFilterMap","acc","curr","filter","onChange","paginationState","tableFilters","crudFilters","mapAntdFilterToCrudFilter","crudSorting","mapAntdSorterToCrudSorting","onFinish","value","searchFilters","antdPagination","page","type","element","_a","link","createElement","PaginationLink","elementChildren","Children","Fragment","useEditableTable","__name","autoSubmitClose","props","table","useTable","edit","useForm","editId","setId","saveButtonProps","cancelButtonProps","editButtonProps","id","isEditing","values","result","useSelectCore","useSelect","__name","props","queryResult","defaultValueQueryResult","onSearch","options","useSelectCore","useSelect","pickNotDeprecated","useCheckboxGroup","__name","resource","sort","sorters","filters","optionLabel","optionValue","queryOptions","fetchSize","pagination","liveMode","defaultValue","onLiveEvent","liveParams","meta","metaData","dataProviderName","queryResult","options","useSelect","pickNotDeprecated","pickNotDeprecated","useSelect","useRadioGroup","__name","resource","sort","sorters","filters","optionLabel","optionValue","queryOptions","fetchSize","pagination","liveMode","defaultValue","onLiveEvent","liveParams","meta","metaData","dataProviderName","queryResult","options","useSelect","pickNotDeprecated","React","notification","Progress","useTranslate","useResource","useImportCore","pickNotDeprecated","useImport","__name","resourceFromProp","resourceName","mapData","item","paparseOptions","batchSize","onFinish","meta","metaData","dataProviderName","onProgressFromProp","t","useTranslate","resource","useResource","mutationResult","isLoading","handleChange","useImportCore","pickNotDeprecated","totalAmount","processedAmount","description","React","Progress","notification","Children","createElement","Fragment","Form","Grid","useTableCore","pickNotDeprecated","useLiveMode","useSimpleList","__name","resource","initialCurrent","initialPageSize","pagination","hasPagination","initialSorter","permanentSorter","initialFilter","permanentFilter","defaultSetFilterBehavior","filtersFromProp","sortersFromProp","onSearch","queryOptions","syncWithLocation","successNotification","errorNotification","liveModeFromProp","onLiveEvent","liveParams","meta","metaData","dataProviderName","sorters","sorter","filters","current","pageSize","pageCount","setFilters","setCurrent","setPageSize","setSorter","setSorters","createLinkForSyncWithLocation","queryResult","overtime","useTableCore","pickNotDeprecated","hasPaginationString","isPaginationEnabled","breakpoint","Grid","liveMode","useLiveMode","form","Form","data","isFetched","isLoading","onChange","page","onFinish","values","searchFilters","antdPagination","type","element","_a","link","createElement","PaginationLink","elementChildren","Children","Fragment","useCallback","useMemo","useState","useFileUploadState","__name","isLoading","setIsloading","useState","onChange","useCallback","info","mapStatusToLoading","useMemo","files","file","useContext","React","useState","ThemedLayoutContext","React","ThemedLayoutContextProvider","__name","children","initialSiderCollapsed","siderCollapsed","setSiderCollapsed","useState","mobileSiderOpen","setMobileSiderOpen","useSiderVisible","__name","mobileSiderOpen","siderCollapsed","setMobileSiderOpen","setSiderCollapsed","useContext","ThemedLayoutContext","useContext","useThemedLayoutContext","__name","mobileSiderOpen","siderCollapsed","setMobileSiderOpen","setSiderCollapsed","useContext","ThemedLayoutContext","App","staticNotification","React","React","Button","Progress","UndoOutlined","UndoableNotification","__name","message","cancelMutation","undoableTimeout","React","Progress","time","Button","UndoOutlined","notificationProvider","key","message","description","type","cancelMutation","undoableTimeout","staticNotification","React","UndoableNotification","useNotificationProvider","__name","notificationFromContext","App","notification","React","Grid","AntdLayout","React","useState","Layout","Menu","Grid","ConfigProvider","Drawer","Button","DashboardOutlined","LogoutOutlined","UnorderedListOutlined","BarsOutlined","useTranslate","useLogout","useTitle","CanAccess","useIsExistAuthentication","useRouterContext","useMenu","useRefineContext","useLink","useRouterType","useActiveAuthProvider","pickNotDeprecated","useWarnAboutChange","drawerButtonStyles","Sider","__name","TitleFromProps","render","meta","collapsed","setCollapsed","useState","drawerOpen","setDrawerOpen","isExistAuthentication","useIsExistAuthentication","routerType","useRouterType","NewLink","useLink","warnWhen","setWarnWhen","useWarnAboutChange","LegacyLink","useRouterContext","Link","TitleFromContext","useTitle","translate","useTranslate","menuItems","selectedKey","defaultOpenKeys","useMenu","breakpoint","Grid","hasDashboard","useRefineContext","authProvider","useActiveAuthProvider","mutateLogout","useLogout","isMobile","RenderToTitle","Title","renderTreeView","tree","item","icon","label","route","key","name","children","parentName","options","React","CanAccess","Menu","UnorderedListOutlined","isSelected","isRoute","pickNotDeprecated","handleLogout","logout","LogoutOutlined","dashboard","DashboardOutlined","items","renderSider","renderMenu","renderDrawerSider","Drawer","Layout","Button","drawerButtonStyles","BarsOutlined","ConfigProvider","useActiveAuthProvider","useGetIdentity","Avatar","AntdLayout","Space","Typography","React","Header","__name","authProvider","useActiveAuthProvider","user","useGetIdentity","React","AntdLayout","Space","Typography","Avatar","Layout","__name","children","Header","Sider","Title","Footer","OffLayoutArea","breakpoint","Grid","SiderToRender","HeaderToRender","isSmall","React","AntdLayout","React","useRouterContext","useRouterType","useLink","Title","__name","collapsed","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","React","React","Grid","AntdLayout","React","useState","Layout","Menu","Grid","Drawer","Button","theme","DashboardOutlined","LogoutOutlined","UnorderedListOutlined","BarsOutlined","LeftOutlined","RightOutlined","useTranslate","useLogout","useTitle","CanAccess","useIsExistAuthentication","useRouterContext","useMenu","useRefineContext","useLink","useRouterType","useActiveAuthProvider","pickNotDeprecated","useWarnAboutChange","drawerButtonStyles","ThemedSider","__name","TitleFromProps","render","meta","token","theme","collapsed","setCollapsed","useState","drawerOpen","setDrawerOpen","isExistAuthentication","useIsExistAuthentication","routerType","useRouterType","NewLink","useLink","warnWhen","setWarnWhen","useWarnAboutChange","LegacyLink","useRouterContext","Link","TitleFromContext","useTitle","translate","useTranslate","menuItems","selectedKey","defaultOpenKeys","useMenu","breakpoint","Grid","hasDashboard","useRefineContext","authProvider","useActiveAuthProvider","mutateLogout","useLogout","isMobile","RenderToTitle","ThemedTitle","renderTreeView","tree","item","icon","label","route","key","name","children","parentName","options","React","CanAccess","Menu","UnorderedListOutlined","isSelected","isRoute","pickNotDeprecated","handleLogout","logout","LogoutOutlined","dashboard","DashboardOutlined","items","renderSider","renderMenu","renderDrawerSider","Drawer","Layout","Button","drawerButtonStyles","BarsOutlined","RightOutlined","LeftOutlined","React","AntdLayout","Typography","Avatar","Space","theme","useActiveAuthProvider","useGetIdentity","ThemedHeader","__name","token","theme","authProvider","useActiveAuthProvider","user","useGetIdentity","React","AntdLayout","Space","Typography","Avatar","ThemedLayout","__name","children","Header","Sider","Title","Footer","OffLayoutArea","breakpoint","Grid","SiderToRender","ThemedSider","HeaderToRender","ThemedHeader","isSmall","React","AntdLayout","React","useRouterContext","useRouterType","useLink","Typography","theme","Space","defaultText","defaultIcon","React","ThemedTitle","__name","collapsed","icon","text","wrapperStyles","token","theme","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","Space","Typography","React","Grid","AntdLayout","React","Layout","Menu","Grid","Drawer","Button","theme","DashboardOutlined","LogoutOutlined","UnorderedListOutlined","BarsOutlined","LeftOutlined","RightOutlined","useTranslate","useLogout","useTitle","CanAccess","useIsExistAuthentication","useRouterContext","useMenu","useRefineContext","useLink","useRouterType","useActiveAuthProvider","pickNotDeprecated","useWarnAboutChange","drawerButtonStyles","ThemedSiderV2","__name","TitleFromProps","render","meta","fixed","activeItemDisabled","token","theme","siderCollapsed","setSiderCollapsed","mobileSiderOpen","setMobileSiderOpen","useThemedLayoutContext","isExistAuthentication","useIsExistAuthentication","routerType","useRouterType","NewLink","useLink","warnWhen","setWarnWhen","useWarnAboutChange","LegacyLink","useRouterContext","Link","TitleFromContext","useTitle","translate","useTranslate","menuItems","selectedKey","defaultOpenKeys","useMenu","breakpoint","Grid","hasDashboard","useRefineContext","authProvider","useActiveAuthProvider","mutateLogout","useLogout","isMobile","RenderToTitle","ThemedTitleV2","renderTreeView","tree","item","icon","label","route","key","name","children","parentName","options","React","CanAccess","Menu","UnorderedListOutlined","isSelected","isRoute","pickNotDeprecated","linkStyle","handleLogout","logout","LogoutOutlined","dashboard","DashboardOutlined","items","renderSider","renderMenu","renderDrawerSider","Drawer","Layout","Button","drawerButtonStyles","BarsOutlined","siderStyles","collapsed","type","RightOutlined","LeftOutlined","React","AntdLayout","Typography","Avatar","Space","theme","pickNotDeprecated","useActiveAuthProvider","useGetIdentity","ThemedHeaderV2","__name","isSticky","sticky","token","theme","authProvider","useActiveAuthProvider","user","useGetIdentity","headerStyles","pickNotDeprecated","React","AntdLayout","Space","Typography","Avatar","ThemedLayoutV2","__name","children","Header","Sider","Title","Footer","OffLayoutArea","initialSiderCollapsed","breakpoint","Grid","SiderToRender","ThemedSiderV2","HeaderToRender","ThemedHeaderV2","isSmall","hasSider","React","ThemedLayoutContextProvider","AntdLayout","React","useRouterContext","useRouterType","useLink","useRefineOptions","Typography","theme","Space","ThemedTitleV2","__name","collapsed","iconFromProps","textFromProps","wrapperStyles","defaultIcon","defaultText","useRefineOptions","icon","text","token","theme","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","React","Space","Typography","React","Button","PlusSquareOutlined","useCreateButton","RefineButtonClassNames","RefineButtonTestIds","CreateButton","__name","resourceNameFromProps","propResourceNameOrRouteName","hideText","accessControl","meta","children","onClick","rest","hidden","disabled","label","title","LinkComponent","to","useCreateButton","React","e","Button","PlusSquareOutlined","RefineButtonTestIds","RefineButtonClassNames","React","Button","EditOutlined","useEditButton","RefineButtonClassNames","RefineButtonTestIds","EditButton","__name","resourceNameFromProps","propResourceNameOrRouteName","recordItemId","hideText","accessControl","meta","children","onClick","rest","to","label","title","hidden","disabled","LinkComponent","useEditButton","React","e","Button","EditOutlined","RefineButtonTestIds","RefineButtonClassNames","React","Button","Popconfirm","DeleteOutlined","useDeleteButton","RefineButtonClassNames","RefineButtonTestIds","DeleteButton","__name","resourceNameFromProps","propResourceNameOrRouteName","recordItemId","onSuccess","mutationModeProp","children","successNotification","errorNotification","hideText","accessControl","metaData","meta","dataProviderName","confirmTitle","confirmOkText","confirmCancelText","invalidates","rest","title","label","hidden","disabled","loading","defaultConfirmTitle","defaultConfirmOkLabel","defaultCancelLabel","onConfirm","useDeleteButton","React","Popconfirm","Button","DeleteOutlined","RefineButtonTestIds","RefineButtonClassNames","React","Button","RedoOutlined","useRefreshButton","RefineButtonClassNames","RefineButtonTestIds","RefreshButton","__name","resourceNameFromProps","propResourceNameOrRouteName","recordItemId","hideText","dataProviderName","children","_meta","_metaData","rest","onClick","label","loading","useRefreshButton","React","Button","RedoOutlined","RefineButtonTestIds","RefineButtonClassNames","React","Button","EyeOutlined","useShowButton","RefineButtonClassNames","RefineButtonTestIds","ShowButton","__name","resourceNameFromProps","propResourceNameOrRouteName","recordItemId","hideText","accessControl","meta","children","onClick","rest","to","label","title","hidden","disabled","LinkComponent","useShowButton","React","e","Button","EyeOutlined","RefineButtonTestIds","RefineButtonClassNames","React","Button","BarsOutlined","useListButton","RefineButtonClassNames","RefineButtonTestIds","ListButton","__name","resourceNameFromProps","propResourceNameOrRouteName","hideText","accessControl","meta","children","onClick","rest","to","label","title","hidden","disabled","LinkComponent","useListButton","React","e","Button","BarsOutlined","RefineButtonTestIds","RefineButtonClassNames","React","Button","ExportOutlined","useExportButton","RefineButtonClassNames","RefineButtonTestIds","ExportButton","__name","hideText","children","rest","label","useExportButton","React","Button","ExportOutlined","RefineButtonTestIds","RefineButtonClassNames","React","Button","SaveOutlined","useSaveButton","RefineButtonClassNames","RefineButtonTestIds","SaveButton","__name","hideText","children","rest","label","useSaveButton","React","Button","SaveOutlined","RefineButtonTestIds","RefineButtonClassNames","React","Button","PlusSquareOutlined","useCloneButton","RefineButtonTestIds","RefineButtonClassNames","CloneButton","__name","propResourceNameOrRouteName","resourceNameFromProps","recordItemId","hideText","accessControl","meta","children","onClick","rest","to","LinkComponent","label","disabled","hidden","title","useCloneButton","React","e","Button","PlusSquareOutlined","RefineButtonTestIds","RefineButtonClassNames","React","Button","Upload","ImportOutlined","useImportButton","RefineButtonClassNames","RefineButtonTestIds","ImportButton","__name","uploadProps","buttonProps","hideText","children","loading","label","useImportButton","React","Upload","Button","ImportOutlined","RefineButtonTestIds","RefineButtonClassNames","React","Space","useTranslate","useUserFriendlyName","useRefineContext","useRouterType","useResource","List","__name","canCreate","title","children","createButtonPropsFromProps","resourceFromProps","wrapperProps","contentProps","headerProps","breadcrumbFromProps","headerButtonProps","headerButtons","_a","_b","translate","useTranslate","globalBreadcrumb","useRefineContext","routerType","useRouterType","getUserFriendlyName","useUserFriendlyName","resource","identifier","useResource","isCreateButtonVisible","breadcrumb","createButtonProps","defaultExtra","React","CreateButton","PageHeader","Space","Breadcrumb","React","Card","Space","Spin","useNavigation","useTranslate","useUserFriendlyName","useRefineContext","useRouterType","useResource","useBack","Create","__name","title","saveButtonPropsFromProps","children","resourceFromProps","isLoading","breadcrumbFromProps","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","_a","_b","translate","useTranslate","globalBreadcrumb","useRefineContext","routerType","useRouterType","back","useBack","goBack","useNavigation","getUserFriendlyName","useUserFriendlyName","resource","action","identifier","useResource","breadcrumb","saveButtonProps","defaultFooterButtons","React","SaveButton","PageHeader","Breadcrumb","Space","Spin","Card","React","Card","Space","Spin","useMutationMode","useNavigation","useTranslate","useUserFriendlyName","useRefineContext","useRouterType","useBack","useResource","useGo","useToPath","Edit","__name","title","saveButtonPropsFromProps","mutationModeProp","recordItemId","children","deleteButtonPropsFromProps","canDelete","resourceFromProps","isLoading","dataProviderName","breadcrumbFromProps","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","autoSaveProps","_a","_b","_c","translate","useTranslate","globalBreadcrumb","useRefineContext","mutationModeContext","useMutationMode","mutationMode","routerType","useRouterType","back","useBack","go","useGo","goBack","legacyGoList","useNavigation","getUserFriendlyName","useUserFriendlyName","resource","action","idFromParams","identifier","useResource","goListPath","useToPath","id","breadcrumb","hasList","isDeleteButtonVisible","listButtonProps","refreshButtonProps","deleteButtonProps","saveButtonProps","defaultHeaderButtons","React","AutoSaveIndicator","ListButton","RefreshButton","defaultFooterButtons","DeleteButton","SaveButton","PageHeader","Space","Breadcrumb","Spin","Card","React","Card","Space","Spin","useNavigation","useTranslate","useUserFriendlyName","useRefineContext","useResource","useToPath","useRouterType","useBack","useGo","Show","__name","title","canEdit","canDelete","isLoading","children","resourceFromProps","recordItemId","dataProviderName","breadcrumbFromProps","contentProps","headerProps","wrapperProps","headerButtons","footerButtons","footerButtonProps","headerButtonProps","goBackFromProps","_a","_b","_c","translate","useTranslate","globalBreadcrumb","useRefineContext","routerType","useRouterType","back","useBack","go","useGo","goBack","legacyGoList","useNavigation","getUserFriendlyName","useUserFriendlyName","resource","action","idFromParams","identifier","useResource","goListPath","useToPath","id","breadcrumb","hasList","isDeleteButtonVisible","isEditButtonVisible","listButtonProps","editButtonProps","deleteButtonProps","refreshButtonProps","defaultHeaderButtons","React","ListButton","EditButton","DeleteButton","RefreshButton","PageHeader","Space","Breadcrumb","Spin","Card","React","Typography","TextField","__name","value","rest","React","Typography","React","Tag","TagField","__name","value","rest","React","Tag","React","Typography","EmailField","__name","value","rest","React","Typography","React","Image","ImageField","__name","value","imageTitle","rest","React","Image","React","Tooltip","CheckOutlined","CloseOutlined","BooleanField","__name","value","valueLabelTrue","valueLabelFalse","trueIcon","React","CheckOutlined","falseIcon","CloseOutlined","rest","Tooltip","React","dayjs","Typography","LocalizedFormat","DateField","__name","value","locales","dateFormat","rest","dayjs","LocalizedFormat","defaultLocale","React","Typography","React","FileField","__name","title","src","rest","React","UrlField","React","Typography","UrlField","__name","children","value","rest","React","Typography","React","Typography","toLocaleStringSupportsOptions","__name","NumberField","value","locale","options","rest","number","React","Typography","React","ReactMarkdown","gfm","MarkdownField","__name","value","React","ReactMarkdown","gfm","React","Button","Space","dayjs","FilterOutlined","useTranslate","FilterDropdown","__name","props","setSelectedKeys","confirm","clearFilters","mapValue","value","selectedKeys","children","translate","useTranslate","clearFilter","onFilter","keys","dayjs","onChange","e","mappedValue","changeEvent","target","childrenWithProps","React","child","Space","Button","FilterOutlined","React","useEffect","useState","useGo","useResource","useRouterType","Button","Result","Typography","Space","Tooltip","InfoCircleOutlined","useNavigation","useTranslate","ErrorComponent","__name","errorMessage","setErrorMessage","useState","translate","useTranslate","push","useNavigation","go","useGo","routerType","useRouterType","resource","action","useResource","useEffect","React","Result","Space","Typography","Tooltip","InfoCircleOutlined","Button","React","useActiveAuthProvider","Row","Col","Layout","Card","Typography","Form","Input","Button","Checkbox","useLogin","useTranslate","layoutStyles","containerStyles","titleStyles","imageContainer","LoginPage","__name","form","Form","translate","useTranslate","authProvider","useActiveAuthProvider","login","isLoading","useLogin","CardTitle","React","Typography","titleStyles","Layout","layoutStyles","Row","Col","containerStyles","imageContainer","Card","values","Input","Checkbox","Button","React","Row","Col","Typography","Space","Button","ReadOutlined","FolderOutlined","TeamOutlined","styles","ReadyPage","__name","Row","Col","Typography","Space","Button","ReadOutlined","FolderOutlined","TeamOutlined","React","WelcomePageFromCore","WelcomePage","__name","React","WelcomePageFromCore","React","React","useLink","useRouterType","useActiveAuthProvider","Row","Col","Layout","Card","Typography","Form","Input","Button","Checkbox","Divider","theme","useLogin","useTranslate","useRouterContext","layoutStyles","containerStyles","headStyles","bodyStyles","titleStyles","LoginPage","__name","providers","registerLink","forgotPasswordLink","rememberMe","contentProps","wrapperProps","renderContent","formProps","title","hideForm","token","theme","form","Form","translate","useTranslate","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","authProvider","useActiveAuthProvider","login","isLoading","useLogin","PageTitle","React","ThemedTitleV2","CardTitle","Typography","titleStyles","renderProviders","provider","Button","Divider","CardContent","Card","headStyles","bodyStyles","containerStyles","values","Input","Checkbox","Layout","layoutStyles","Row","Col","React","useRouterType","useLink","useActiveAuthProvider","Row","Col","Layout","Card","Typography","Form","Input","Button","Divider","theme","useTranslate","useRouterContext","useRegister","RegisterPage","__name","providers","loginLink","wrapperProps","contentProps","renderContent","formProps","title","hideForm","token","theme","form","Form","translate","useTranslate","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","authProvider","useActiveAuthProvider","register","isLoading","useRegister","PageTitle","React","ThemedTitleV2","CardTitle","Typography","titleStyles","renderProviders","provider","Button","Divider","CardContent","Card","headStyles","bodyStyles","containerStyles","values","Input","Layout","layoutStyles","Row","Col","React","useRouterType","useLink","Row","Col","Layout","Card","Typography","Form","Input","Button","theme","useTranslate","useRouterContext","useForgotPassword","ForgotPasswordPage","__name","loginLink","wrapperProps","contentProps","renderContent","formProps","title","token","theme","form","Form","translate","useTranslate","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","forgotPassword","isLoading","useForgotPassword","PageTitle","React","ThemedTitleV2","CardTitle","Typography","titleStyles","CardContent","Card","headStyles","bodyStyles","containerStyles","values","Input","Button","Layout","layoutStyles","Row","Col","React","useActiveAuthProvider","Row","Col","Layout","Card","Typography","Form","Input","Button","theme","useTranslate","useUpdatePassword","UpdatePasswordPage","__name","wrapperProps","contentProps","renderContent","formProps","title","token","theme","form","Form","translate","useTranslate","authProvider","useActiveAuthProvider","updatePassword","isLoading","useUpdatePassword","PageTitle","React","ThemedTitleV2","CardTitle","Typography","titleStyles","CardContent","Card","headStyles","bodyStyles","containerStyles","values","Input","getFieldValue","_","value","Button","Layout","layoutStyles","Row","Col","AuthPage","__name","props","type","React","RegisterPage","ForgotPasswordPage","UpdatePasswordPage","LoginPage","React","useBreadcrumb","useLink","useRefineContext","useRouterContext","useRouterType","useResource","matchResourceFromRoute","AntdBreadcrumb","HomeOutlined","Breadcrumb","__name","breadcrumbProps","showHome","hideIcons","meta","routerType","useRouterType","breadcrumbs","useBreadcrumb","Link","useLink","LegacyLink","useRouterContext","hasDashboard","useRefineContext","resources","useResource","rootRouteResource","matchResourceFromRoute","ActiveLink","breadCrumbItems","label","icon","href","React","AntdBreadcrumb","_a","_b","HomeOutlined","React","AntdPageHeader","Button","Typography","ArrowLeftOutlined","RefinePageHeaderClassNames","PageHeader","__name","children","props","backIcon","React","Button","ArrowLeftOutlined","title","Typography","RefinePageHeaderClassNames","subtitle","AntdPageHeader","React","useTranslate","AutoSaveIndicatorCore","Typography","theme","EllipsisOutlined","SyncOutlined","CheckCircleOutlined","ExclamationCircleOutlined","AutoSaveIndicator","__name","status","success","React","Message","CheckCircleOutlined","error","ExclamationCircleOutlined","loading","SyncOutlined","idle","EllipsisOutlined","AutoSaveIndicatorCore","key","defaultMessage","icon","translate","useTranslate","token","theme","Typography","dayjs","rangePickerFilterMapper","__name","selectedKeys","event","key","dayjs","date","getValueFromEvent","__name","event","fileList","RefineThemes"]}