import { type ButtonProps, type UploadProps } from "antd";
import { type BaseRecord, type HttpError, type UseImportReturnType, type ImportOptions } from "@refinedev/core";
/**
 * `useImport` hook allows you to handle your csv import logic easily.
 *
 * @see {@link https://refine.dev/docs/api-reference/antd/hooks/import/useImport} for more details.
 *
 * @typeParam TItem - Interface of parsed csv data
 * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}
 * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}
 * @typeParam TVariables - Values for mutation function
 *
 */
export declare const useImport: <TItem = any, TData extends BaseRecord = BaseRecord, TError extends HttpError = HttpError, TVariables = any>({ resource: resourceFromProp, resourceName, mapData, paparseOptions, batchSize, onFinish, meta, metaData, dataProviderName, onProgress: onProgressFromProp, }?: ImportOptions<TItem, TVariables, TData>) => Omit<UseImportReturnType<TData, TVariables, TError>, "handleChange" | "inputProps"> & {
    uploadProps: UploadProps;
    buttonProps: ButtonProps;
};
//# sourceMappingURL=index.d.ts.map