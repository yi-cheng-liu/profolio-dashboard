{
  "version": 3,
  "sources": ["../../camelcase/index.js", "../../gql-query-builder/src/OperationType.ts", "../../gql-query-builder/src/NestedField.ts", "../../gql-query-builder/src/Utils.ts", "../../gql-query-builder/src/adapters/DefaultAppSyncMutationAdapter.ts", "../../gql-query-builder/src/adapters/DefaultAppSyncQueryAdapter.ts", "../../gql-query-builder/src/adapters/index.ts", "../../gql-query-builder/src/adapters/DefaultMutationAdapter.ts", "../../gql-query-builder/src/adapters/DefaultQueryAdapter.ts", "../../gql-query-builder/src/adapters/DefaultSubscriptionAdapter.ts", "../../gql-query-builder/src/index.ts", "../../lodash/_freeGlobal.js", "../../lodash/_root.js", "../../lodash/_Symbol.js", "../../lodash/_getRawTag.js", "../../lodash/_objectToString.js", "../../lodash/_baseGetTag.js", "../../lodash/isObject.js", "../../lodash/isFunction.js", "../../lodash/_coreJsData.js", "../../lodash/_isMasked.js", "../../lodash/_toSource.js", "../../lodash/_baseIsNative.js", "../../lodash/_getValue.js", "../../lodash/_getNative.js", "../../lodash/_defineProperty.js", "../../lodash/_baseAssignValue.js", "../../lodash/eq.js", "../../lodash/_assignValue.js", "../../lodash/isArray.js", "../../lodash/isObjectLike.js", "../../lodash/isSymbol.js", "../../lodash/_isKey.js", "../../lodash/_nativeCreate.js", "../../lodash/_hashClear.js", "../../lodash/_hashDelete.js", "../../lodash/_hashGet.js", "../../lodash/_hashHas.js", "../../lodash/_hashSet.js", "../../lodash/_Hash.js", "../../lodash/_listCacheClear.js", "../../lodash/_assocIndexOf.js", "../../lodash/_listCacheDelete.js", "../../lodash/_listCacheGet.js", "../../lodash/_listCacheHas.js", "../../lodash/_listCacheSet.js", "../../lodash/_ListCache.js", "../../lodash/_Map.js", "../../lodash/_mapCacheClear.js", "../../lodash/_isKeyable.js", "../../lodash/_getMapData.js", "../../lodash/_mapCacheDelete.js", "../../lodash/_mapCacheGet.js", "../../lodash/_mapCacheHas.js", "../../lodash/_mapCacheSet.js", "../../lodash/_MapCache.js", "../../lodash/memoize.js", "../../lodash/_memoizeCapped.js", "../../lodash/_stringToPath.js", "../../lodash/_arrayMap.js", "../../lodash/_baseToString.js", "../../lodash/toString.js", "../../lodash/_castPath.js", "../../lodash/_isIndex.js", "../../lodash/_toKey.js", "../../lodash/_baseSet.js", "../../lodash/set.js", "../../@refinedev/nestjs-query/node_modules/extract-files/public/ReactNativeFile.js", "../../@refinedev/nestjs-query/node_modules/extract-files/public/isExtractableFile.js", "../../@refinedev/nestjs-query/node_modules/extract-files/public/extractFiles.js", "../../@refinedev/nestjs-query/node_modules/form-data/lib/browser.js", "../../cross-fetch/dist/browser-ponyfill.js", "../../@refinedev/nestjs-query/src/dataProvider/index.ts", "../../@refinedev/nestjs-query/src/utils/index.ts", "../../@refinedev/nestjs-query/src/utils/graphql.ts", "../../@refinedev/nestjs-query/src/liveProvider/index.ts", "../../@refinedev/nestjs-query/src/index.ts", "../../@refinedev/nestjs-query/node_modules/graphql-request/src/defaultJsonSerializer.ts", "../../@refinedev/nestjs-query/node_modules/extract-files/public/index.mjs", "../../@refinedev/nestjs-query/node_modules/graphql-request/src/createRequestBody.ts", "../../@refinedev/nestjs-query/node_modules/graphql-request/src/helpers.ts", "../../@refinedev/nestjs-query/node_modules/graphql-request/src/parseArgs.ts", "../../@refinedev/nestjs-query/node_modules/graphql-request/src/resolveRequestDocument.ts", "../../@refinedev/nestjs-query/node_modules/graphql-request/src/types.ts", "../../@refinedev/nestjs-query/node_modules/graphql-request/src/index.ts", "../../@refinedev/nestjs-query/node_modules/graphql-request/src/graphql-ws.ts"],
  "sourcesContent": ["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n", "enum OperationType {\n  Mutation = \"mutation\",\n  Query = \"query\",\n  Subscription = \"subscription\",\n}\n\nexport default OperationType;\n", "import IQueryBuilderOptions from \"./IQueryBuilderOptions\";\nimport Fields from \"./Fields\";\n\n/*\nDefines an array of strings or objects to define query fields\n@example ['id', 'name']\n@example [{id: 1, name: 'Chuck'}]\n */\ntype NestedField = {\n  operation: string;\n  variables: IQueryBuilderOptions[];\n  fields: Fields;\n  fragment?: boolean | null;\n};\n\nexport default NestedField;\n\nexport function isNestedField(object: any): object is NestedField {\n  return (\n    (typeof object === \"object\" &&\n      object.hasOwnProperty(\"operation\") &&\n      object.hasOwnProperty(\"variables\") &&\n      object.hasOwnProperty(\"fields\")) ||\n    (typeof object === \"object\" &&\n      object.hasOwnProperty(\"operation\") &&\n      object.hasOwnProperty(\"fragment\") &&\n      object.hasOwnProperty(\"fields\"))\n  );\n}\n", "import Fields from \"./Fields\";\nimport IQueryBuilderOptions from \"./IQueryBuilderOptions\";\nimport NestedField, { isNestedField } from \"./NestedField\";\nimport VariableOptions from \"./VariableOptions\";\n\nexport default class Utils {\n  public static resolveVariables(operations: IQueryBuilderOptions[]): any {\n    let ret: any = {};\n\n    for (const { variables, fields } of operations) {\n      ret = {\n        ...ret,\n        ...variables,\n        ...((fields && Utils.getNestedVariables(fields)) || {}),\n      };\n    }\n    return ret;\n  }\n\n  // Convert object to name and argument map. eg: (id: $id)\n  public static queryDataNameAndArgumentMap(variables: VariableOptions) {\n    return variables && Object.keys(variables).length\n      ? `(${Object.entries(variables).reduce((dataString, [key, value], i) => {\n          return `${dataString}${i !== 0 ? \", \" : \"\"}${\n            value && value.name ? value.name : key\n          }: $${key}`;\n        }, \"\")})`\n      : \"\";\n  }\n\n  public static queryFieldsMap(fields?: Fields): string {\n    return fields\n      ? fields\n          .map((field) => {\n            if (isNestedField(field)) {\n              return Utils.queryNestedFieldMap(field);\n            } else if (typeof field === \"object\") {\n              let result = \"\";\n\n              Object.entries<Fields>(field as Record<string, Fields>).forEach(\n                ([key, values], index, array) => {\n                  result += `${key} ${\n                    values.length > 0\n                      ? \"{ \" + this.queryFieldsMap(values) + \" }\"\n                      : \"\"\n                  }`;\n\n                  // If it's not the last item in array, join with comma\n                  if (index < array.length - 1) {\n                    result += \", \";\n                  }\n                }\n              );\n\n              return result;\n            } else {\n              return `${field}`;\n            }\n          })\n          .join(\", \")\n      : \"\";\n  }\n\n  public static operationOrAlias(\n    operation: IQueryBuilderOptions[\"operation\"]\n  ): string {\n    return typeof operation === \"string\"\n      ? operation\n      : `${operation.alias}: ${operation.name}`;\n  }\n\n  public static isFragment(field: NestedField): boolean {\n    return field?.fragment === true ?? false;\n  }\n\n  public static operationOrFragment(field: NestedField): string {\n    return Utils.isFragment(field)\n      ? field.operation\n      : Utils.operationOrAlias(field.operation);\n  }\n\n  public static getFragment(field: NestedField): string {\n    return Utils.isFragment(field) ? \"... on \" : \"\";\n  }\n\n  public static queryNestedFieldMap(field: NestedField) {\n    return `${Utils.getFragment(field)}${Utils.operationOrFragment(field)} ${\n      this.isFragment(field)\n        ? \"\"\n        : this.queryDataNameAndArgumentMap(field.variables)\n    } ${\n      field.fields.length > 0\n        ? \"{ \" + this.queryFieldsMap(field.fields) + \" }\"\n        : \"\"\n    }`;\n  }\n\n  // Variables map. eg: { \"id\": 1, \"name\": \"Jon Doe\" }\n  public static queryVariablesMap(variables: any, fields?: Fields) {\n    const variablesMapped: { [key: string]: unknown } = {};\n    const update = (vars: any) => {\n      if (vars) {\n        Object.keys(vars).map((key) => {\n          variablesMapped[key] =\n            typeof vars[key] === \"object\" ? vars[key].value : vars[key];\n        });\n      }\n    };\n\n    update(variables);\n    if (fields && typeof fields === \"object\") {\n      update(Utils.getNestedVariables(fields));\n    }\n    return variablesMapped;\n  }\n\n  public static getNestedVariables(fields: Fields) {\n    let variables = {};\n\n    function getDeepestVariables(innerFields: Fields) {\n      innerFields?.forEach((field: string | object | NestedField) => {\n        if (isNestedField(field)) {\n          variables = {\n            ...field.variables,\n            ...variables,\n            ...(field.fields && getDeepestVariables(field.fields)),\n          };\n        } else {\n          if (typeof field === \"object\") {\n            for (const [, value] of Object.entries(field)) {\n              getDeepestVariables(value);\n            }\n          }\n        }\n      });\n\n      return variables;\n    }\n\n    getDeepestVariables(fields);\n\n    return variables;\n  }\n\n  public static queryDataType(variable: any) {\n    let type = \"String\";\n\n    const value = typeof variable === \"object\" ? variable.value : variable;\n\n    if (variable?.type != null) {\n      type = variable.type;\n    } else {\n      // TODO: Should handle the undefined value (either in array value or single value)\n      const candidateValue = Array.isArray(value) ? value[0] : value;\n      switch (typeof candidateValue) {\n        case \"object\":\n          type = \"Object\";\n          break;\n\n        case \"boolean\":\n          type = \"Boolean\";\n          break;\n\n        case \"number\":\n          type = candidateValue % 1 === 0 ? \"Int\" : \"Float\";\n          break;\n      }\n    }\n\n    // set object based variable properties\n    if (typeof variable === \"object\") {\n      if (variable.list === true) {\n        type = `[${type}]`;\n      } else if (Array.isArray(variable.list)) {\n        type = `[${type}${variable.list[0] ? \"!\" : \"\"}]`;\n      }\n\n      if (variable.required) {\n        type += \"!\";\n      }\n    }\n\n    return type;\n  }\n}\n", "/*\n@class DefaulAppSynctMutationAdapter\n@desc A basic implementation to use with AWS AppSync\n@desc modify the output of the mutation template by passing a second argument to mutation(options, AdapterClass)\n */\nimport Fields from \"../Fields\";\nimport IQueryBuilderOptions, { IOperation } from \"../IQueryBuilderOptions\";\nimport OperationType from \"../OperationType\";\nimport Utils from \"../Utils\";\nimport IMutationAdapter from \"./IMutationAdapter\";\n\nexport default class DefaultAppSyncMutationAdapter implements IMutationAdapter {\n  private variables: any | undefined;\n  private fields: Fields | undefined;\n  private operation!: string | IOperation;\n\n  constructor(options: IQueryBuilderOptions | IQueryBuilderOptions[]) {\n    if (Array.isArray(options)) {\n      this.variables = Utils.resolveVariables(options);\n    } else {\n      this.variables = options.variables;\n      this.fields = options.fields;\n      this.operation = options.operation;\n    }\n  }\n\n  public mutationBuilder() {\n    return this.operationWrapperTemplate(\n      this.variables,\n      this.operationTemplate(this.operation)\n    );\n  }\n\n  public mutationsBuilder(mutations: IQueryBuilderOptions[]) {\n    const content = mutations.map((opts) => {\n      this.operation = opts.operation;\n      this.variables = opts.variables;\n      this.fields = opts.fields;\n      return this.operationTemplate(opts.operation);\n    });\n    return this.operationWrapperTemplate(\n      Utils.resolveVariables(mutations),\n      content.join(\"\\n  \")\n    );\n  }\n  // Convert object to name and argument map. eg: (id: $id)\n  private queryDataNameAndArgumentMap() {\n    return this.variables && Object.keys(this.variables).length\n      ? `(${Object.keys(this.variables).reduce(\n          (dataString, key, i) =>\n            `${dataString}${i !== 0 ? \", \" : \"\"}${key}: $${key}`,\n          \"\"\n        )})`\n      : \"\";\n  }\n\n  private queryDataArgumentAndTypeMap(variables: any): string {\n    return Object.keys(variables).length\n      ? `(${Object.keys(variables).reduce(\n          (dataString, key, i) =>\n            `${dataString}${i !== 0 ? \", \" : \"\"}$${key}: ${Utils.queryDataType(\n              variables[key]\n            )}`,\n          \"\"\n        )})`\n      : \"\";\n  }\n\n  // start of mutation building\n  private operationWrapperTemplate(variables: any, content: string): any {\n    const operation =\n      typeof this.operation === \"string\" ? this.operation : this.operation.name;\n\n    return {\n      query: `${OperationType.Mutation} ${\n        operation.charAt(0).toUpperCase() + operation.slice(1)\n      } ${this.queryDataArgumentAndTypeMap(variables)} {\n  ${content}\n}`,\n      variables: Utils.queryVariablesMap(variables),\n    };\n  }\n\n  private operationTemplate(operation: string | IOperation): string {\n    const operationName =\n      typeof operation === \"string\"\n        ? operation\n        : `${operation.alias}: ${operation.name}`;\n\n    return `${operationName} ${this.queryDataNameAndArgumentMap()} {\n    ${this.queryFieldsMap(this.fields)}\n  }`;\n  }\n\n  // Fields selection map. eg: { id, name }\n  private queryFieldsMap(fields?: Fields): string {\n    return Array.isArray(fields)\n      ? fields\n          .map((field) =>\n            typeof field === \"object\"\n              ? `${Object.keys(field)[0]} { ${this.queryFieldsMap(\n                  Object.values(field)[0]\n                )} }`\n              : `${field}`\n          )\n          .join(\", \")\n      : \"\";\n  }\n}\n", "/*\n@class DefaultAppSyncQueryAdapter\n@desc A basic implementation to use with AWS AppSync\n@desc modify the output of the query template by passing a second argument to query(options, DefaultAppSyncQueryAdapter)\n */\nimport Fields from \"../Fields\";\nimport IQueryBuilderOptions, { IOperation } from \"../IQueryBuilderOptions\";\nimport OperationType from \"../OperationType\";\nimport Utils from \"../Utils\";\nimport IQueryAdapter from \"./IQueryAdapter\";\n\nexport default class DefaultAppSyncQueryAdapter implements IQueryAdapter {\n  private variables!: any | undefined;\n  private fields: Fields | undefined;\n  private operation!: string | IOperation;\n\n  constructor(options: IQueryBuilderOptions | IQueryBuilderOptions[]) {\n    if (Array.isArray(options)) {\n      this.variables = Utils.resolveVariables(options);\n    } else {\n      this.variables = options.variables;\n      this.fields = options.fields || [];\n      this.operation = options.operation;\n    }\n  }\n  // kicks off building for a single query\n  public queryBuilder() {\n    return this.operationWrapperTemplate(this.operationTemplate());\n  }\n  // if we have an array of options, call this\n  public queriesBuilder(queries: IQueryBuilderOptions[]) {\n    const content = () => {\n      const tmpl: string[] = [];\n      queries.forEach((query) => {\n        if (query) {\n          this.operation = query.operation;\n          this.fields = query.fields;\n          this.variables = query.variables;\n          tmpl.push(this.operationTemplate());\n        }\n      });\n      return tmpl.join(\" \");\n    };\n    return this.operationWrapperTemplate(content());\n  }\n\n  // Convert object to name and argument map. eg: (id: $id)\n  public queryDataNameAndArgumentMap() {\n    return this.variables && Object.keys(this.variables).length\n      ? `(${Object.keys(this.variables).reduce(\n          (dataString, key, i) =>\n            `${dataString}${i !== 0 ? \", \" : \"\"}${key}: $${key}`,\n          \"\"\n        )})`\n      : \"\";\n  }\n\n  // Convert object to argument and type map. eg: ($id: Int)\n  private queryDataArgumentAndTypeMap(): string {\n    return this.variables && Object.keys(this.variables).length\n      ? `(${Object.keys(this.variables).reduce(\n          (dataString, key, i) =>\n            `${dataString}${i !== 0 ? \", \" : \"\"}$${key}: ${this.queryDataType(\n              this.variables[key]\n            )}`,\n          \"\"\n        )})`\n      : \"\";\n  }\n\n  private queryDataType = (variable: any) => {\n    let type = \"String\";\n\n    const value = typeof variable === \"object\" ? variable.value : variable;\n\n    if (variable.type !== undefined) {\n      type = variable.type;\n    } else {\n      switch (typeof value) {\n        case \"object\":\n          type = \"Object\";\n          break;\n\n        case \"boolean\":\n          type = \"Boolean\";\n          break;\n\n        case \"number\":\n          type = value % 1 === 0 ? \"Int\" : \"Float\";\n          break;\n      }\n    }\n\n    if (typeof variable === \"object\" && variable.required) {\n      type += \"!\";\n    }\n\n    return type;\n  };\n\n  private operationWrapperTemplate(content: string): {\n    variables: { [p: string]: unknown };\n    query: string;\n  } {\n    const operation =\n      typeof this.operation === \"string\" ? this.operation : this.operation.name;\n\n    return {\n      query: `${OperationType.Query} ${operation\n        .charAt(0)\n        .toUpperCase()}${operation.slice(\n        1\n      )} ${this.queryDataArgumentAndTypeMap()} { ${content} }`,\n      variables: Utils.queryVariablesMap(this.variables),\n    };\n  }\n  // query\n  private operationTemplate() {\n    const operation =\n      typeof this.operation === \"string\"\n        ? this.operation\n        : `${this.operation.alias}: ${this.operation.name}`;\n\n    return `${operation} ${this.queryDataNameAndArgumentMap()} { nodes { ${Utils.queryFieldsMap(\n      this.fields\n    )} } }`;\n  }\n}\n", "import DefaultAppSyncMutationAdapter from \"./DefaultAppSyncMutationAdapter\";\nimport DefaultAppSyncQueryAdapter from \"./DefaultAppSyncQueryAdapter\";\n\nexport default { DefaultAppSyncQueryAdapter, DefaultAppSyncMutationAdapter };\n", "/*\n@class DefaultMutationAdapter\n@desc A basic implementation to use\n@desc modify the output of the mutation template by passing a second argument to mutation(options, AdapterClass)\n */\nimport Fields from \"../Fields\";\nimport IQueryBuilderOptions, { IOperation } from \"../IQueryBuilderOptions\";\nimport OperationType from \"../OperationType\";\nimport Utils from \"../Utils\";\nimport IMutationAdapter from \"./IMutationAdapter\";\n\nexport default class DefaultMutationAdapter implements IMutationAdapter {\n  private variables: any | undefined;\n  private fields: Fields | undefined;\n  private operation!: string | IOperation;\n  private config: { [key: string]: unknown };\n\n  constructor(\n    options: IQueryBuilderOptions | IQueryBuilderOptions[],\n    configuration?: { [key: string]: unknown }\n  ) {\n    if (Array.isArray(options)) {\n      this.variables = Utils.resolveVariables(options);\n    } else {\n      this.variables = options.variables;\n      this.fields = options.fields;\n      this.operation = options.operation;\n    }\n\n    // Default configs\n    this.config = {\n      operationName: \"\",\n    };\n    if (configuration) {\n      Object.entries(configuration).forEach(([key, value]) => {\n        this.config[key] = value;\n      });\n    }\n  }\n\n  public mutationBuilder() {\n    return this.operationWrapperTemplate(\n      OperationType.Mutation,\n      this.variables,\n      this.operationTemplate(this.operation)\n    );\n  }\n\n  public mutationsBuilder(mutations: IQueryBuilderOptions[]) {\n    const content = mutations.map((opts) => {\n      this.operation = opts.operation;\n      this.variables = opts.variables;\n      this.fields = opts.fields;\n      return this.operationTemplate(opts.operation);\n    });\n    return this.operationWrapperTemplate(\n      OperationType.Mutation,\n      Utils.resolveVariables(mutations),\n      content.join(\"\\n  \")\n    );\n  }\n\n  private queryDataArgumentAndTypeMap(variablesUsed: any): string {\n    if (this.fields && typeof this.fields === \"object\") {\n      variablesUsed = {\n        ...Utils.getNestedVariables(this.fields),\n        ...variablesUsed,\n      };\n    }\n    return variablesUsed && Object.keys(variablesUsed).length > 0\n      ? `(${Object.keys(variablesUsed).reduce(\n          (dataString, key, i) =>\n            `${dataString}${i !== 0 ? \", \" : \"\"}$${key}: ${Utils.queryDataType(\n              variablesUsed[key]\n            )}`,\n          \"\"\n        )})`\n      : \"\";\n  }\n\n  // start of mutation building\n  private operationWrapperTemplate(\n    type: OperationType,\n    variables: any,\n    content: string\n  ) {\n    let query = `${type} ${this.queryDataArgumentAndTypeMap(variables)} {\n      ${content}\n    }`;\n\n    if (this.config.operationName) {\n      query = query.replace(\n        \"mutation\",\n        `mutation ${this.config.operationName}`\n      );\n    }\n\n    return {\n      query,\n      variables: Utils.queryVariablesMap(variables, this.fields),\n    };\n  }\n\n  private operationTemplate(operation: string | IOperation) {\n    const operationName =\n      typeof operation === \"string\"\n        ? operation\n        : `${operation.alias}: ${operation.name}`;\n\n    return `${operationName} ${Utils.queryDataNameAndArgumentMap(\n      this.variables\n    )} ${\n      this.fields && this.fields.length > 0\n        ? `{\n    ${Utils.queryFieldsMap(this.fields)}\n  }`\n        : \"\"\n    }`;\n  }\n}\n", "/*\n@class DefaultQueryAdapter\n@desc A basic implementation to use\n@desc modify the output of the query template by passing a second argument to query(options, AdapterClass)\n */\nimport Fields from \"../Fields\";\nimport IQueryBuilderOptions, { IOperation } from \"../IQueryBuilderOptions\";\nimport OperationType from \"../OperationType\";\nimport Utils from \"../Utils\";\nimport IQueryAdapter from \"./IQueryAdapter\";\nimport VariableOptions from \"../VariableOptions\";\n\nexport default class DefaultQueryAdapter implements IQueryAdapter {\n  private variables!: any | undefined;\n  private fields: Fields | undefined;\n  private operation!: string | IOperation;\n  private config: { [key: string]: unknown };\n\n  constructor(\n    options: IQueryBuilderOptions | IQueryBuilderOptions[],\n    configuration?: { [key: string]: unknown }\n  ) {\n    // Default configs\n    this.config = {\n      operationName: \"\",\n    };\n    if (configuration) {\n      Object.entries(configuration).forEach(([key, value]) => {\n        this.config[key] = value;\n      });\n    }\n\n    if (Array.isArray(options)) {\n      this.variables = Utils.resolveVariables(options);\n    } else {\n      this.variables = options.variables;\n      this.fields = options.fields || [];\n      this.operation = options.operation;\n    }\n  }\n  // kicks off building for a single query\n  public queryBuilder() {\n    return this.operationWrapperTemplate(\n      this.operationTemplate(this.variables)\n    );\n  }\n  // if we have an array of options, call this\n  public queriesBuilder(queries: IQueryBuilderOptions[]) {\n    const content = () => {\n      const tmpl: string[] = [];\n      queries.forEach((query) => {\n        if (query) {\n          this.operation = query.operation;\n          this.fields = query.fields;\n          tmpl.push(this.operationTemplate(query.variables));\n        }\n      });\n      return tmpl.join(\" \");\n    };\n    return this.operationWrapperTemplate(content());\n  }\n\n  // Convert object to argument and type map. eg: ($id: Int)\n  private queryDataArgumentAndTypeMap(): string {\n    let variablesUsed: { [key: string]: unknown } = this.variables;\n\n    if (this.fields && typeof this.fields === \"object\") {\n      variablesUsed = {\n        ...Utils.getNestedVariables(this.fields),\n        ...variablesUsed,\n      };\n    }\n    return variablesUsed && Object.keys(variablesUsed).length > 0\n      ? `(${Object.keys(variablesUsed).reduce(\n          (dataString, key, i) =>\n            `${dataString}${i !== 0 ? \", \" : \"\"}$${key}: ${Utils.queryDataType(\n              variablesUsed[key]\n            )}`,\n          \"\"\n        )})`\n      : \"\";\n  }\n\n  private operationWrapperTemplate(content: string): {\n    variables: { [p: string]: unknown };\n    query: string;\n  } {\n    let query = `${\n      OperationType.Query\n    } ${this.queryDataArgumentAndTypeMap()} { ${content} }`;\n    query = query.replace(\n      \"query\",\n      `query${\n        this.config.operationName !== \"\" ? \" \" + this.config.operationName : \"\"\n      }`\n    );\n    return {\n      query,\n      variables: Utils.queryVariablesMap(this.variables, this.fields),\n    };\n  }\n  // query\n  private operationTemplate(variables: VariableOptions | undefined) {\n    const operation =\n      typeof this.operation === \"string\"\n        ? this.operation\n        : `${this.operation.alias}: ${this.operation.name}`;\n\n    return `${operation} ${\n      variables ? Utils.queryDataNameAndArgumentMap(variables) : \"\"\n    } ${\n      this.fields && this.fields.length > 0\n        ? \"{ \" + Utils.queryFieldsMap(this.fields) + \" }\"\n        : \"\"\n    }`;\n  }\n}\n", "/*\n@class DefaultMutationAdapter\n@desc A basic implementation to use\n@desc modify the output of the subscription template by passing a second argument to subscription(options, AdapterClass)\n */\nimport Fields from \"../Fields\";\nimport IQueryBuilderOptions, { IOperation } from \"../IQueryBuilderOptions\";\nimport OperationType from \"../OperationType\";\nimport Utils from \"../Utils\";\nimport ISubscriptionAdapter from \"./ISubscriptionAdapter\";\n\nexport default class DefaultSubscriptionAdapter\n  implements ISubscriptionAdapter\n{\n  private variables: any | undefined;\n  private fields: Fields | undefined;\n  private operation!: string | IOperation;\n\n  constructor(options: IQueryBuilderOptions | IQueryBuilderOptions[]) {\n    if (Array.isArray(options)) {\n      this.variables = Utils.resolveVariables(options);\n    } else {\n      this.variables = options.variables;\n      this.fields = options.fields;\n      this.operation = options.operation;\n    }\n  }\n\n  public subscriptionBuilder() {\n    return this.operationWrapperTemplate(\n      OperationType.Subscription,\n      this.variables,\n      this.operationTemplate(this.operation)\n    );\n  }\n\n  public subscriptionsBuilder(subscriptions: IQueryBuilderOptions[]) {\n    const content = subscriptions.map((opts) => {\n      this.operation = opts.operation;\n      this.variables = opts.variables;\n      this.fields = opts.fields;\n      return this.operationTemplate(opts.operation);\n    });\n    return this.operationWrapperTemplate(\n      OperationType.Subscription,\n      Utils.resolveVariables(subscriptions),\n      content.join(\"\\n  \")\n    );\n  }\n  // Convert object to name and argument map. eg: (id: $id)\n  private queryDataNameAndArgumentMap() {\n    return this.variables && Object.keys(this.variables).length\n      ? `(${Object.keys(this.variables).reduce(\n          (dataString, key, i) =>\n            `${dataString}${i !== 0 ? \", \" : \"\"}${key}: $${key}`,\n          \"\"\n        )})`\n      : \"\";\n  }\n\n  private queryDataArgumentAndTypeMap(variables: any): string {\n    return Object.keys(variables).length\n      ? `(${Object.keys(variables).reduce(\n          (dataString, key, i) =>\n            `${dataString}${i !== 0 ? \", \" : \"\"}$${key}: ${Utils.queryDataType(\n              variables[key]\n            )}`,\n          \"\"\n        )})`\n      : \"\";\n  }\n\n  // start of subscription building\n  private operationWrapperTemplate(\n    type: OperationType,\n    variables: any,\n    content: string\n  ) {\n    return {\n      query: `${type} ${this.queryDataArgumentAndTypeMap(variables)} {\n  ${content}\n}`,\n      variables: Utils.queryVariablesMap(variables),\n    };\n  }\n\n  private operationTemplate(operation: string | IOperation) {\n    const operationName =\n      typeof this.operation === \"string\"\n        ? this.operation\n        : `${this.operation.alias}: ${this.operation.name}`;\n\n    return `${operationName} ${this.queryDataNameAndArgumentMap()} {\n    ${this.queryFieldsMap(this.fields)}\n  }`;\n  }\n\n  // Fields selection map. eg: { id, name }\n  private queryFieldsMap(fields?: Fields): string {\n    return fields\n      ? fields\n          .map((field) =>\n            typeof field === \"object\"\n              ? `${Object.keys(field)[0]} { ${this.queryFieldsMap(\n                  Object.values(field)[0]\n                )} }`\n              : `${field}`\n          )\n          .join(\", \")\n      : \"\";\n  }\n}\n", "import adapters from \"./adapters\";\nimport DefaultMutationAdapter from \"./adapters/DefaultMutationAdapter\";\nimport DefaultQueryAdapter from \"./adapters/DefaultQueryAdapter\";\nimport DefaultSubscriptionAdapter from \"./adapters/DefaultSubscriptionAdapter\";\nimport IMutationAdapter from \"./adapters/IMutationAdapter\";\nimport IQueryAdapter from \"./adapters/IQueryAdapter\";\nimport ISubscriptionAdapter from \"./adapters/ISubscriptionAdapter\";\nimport IQueryBuilderOptions from \"./IQueryBuilderOptions\";\n\nfunction queryOperation(\n  options: IQueryBuilderOptions | IQueryBuilderOptions[],\n  adapter?: any,\n  config?: any\n) {\n  let defaultAdapter: IQueryAdapter;\n  if (Array.isArray(options)) {\n    if (adapter) {\n      const customAdapter: IQueryAdapter = new adapter(options, config);\n      return customAdapter.queriesBuilder(options);\n    }\n    defaultAdapter = new DefaultQueryAdapter(options, config);\n    return defaultAdapter.queriesBuilder(options);\n  }\n  if (adapter) {\n    const customAdapter: IQueryAdapter = new adapter(options, config);\n    return customAdapter.queryBuilder();\n  }\n  defaultAdapter = new DefaultQueryAdapter(options, config);\n  return defaultAdapter.queryBuilder();\n}\n\nfunction mutationOperation(\n  options: IQueryBuilderOptions | IQueryBuilderOptions[],\n  adapter?: IMutationAdapter,\n  config?: any\n) {\n  let customAdapter: IMutationAdapter;\n  let defaultAdapter: IMutationAdapter;\n  if (Array.isArray(options)) {\n    if (adapter) {\n      // @ts-ignore\n      customAdapter = new adapter(options, config);\n      return customAdapter.mutationsBuilder(options);\n    }\n    defaultAdapter = new DefaultMutationAdapter(options, config);\n    return defaultAdapter.mutationsBuilder(options);\n  }\n  if (adapter) {\n    // @ts-ignore\n    customAdapter = new adapter(options, config);\n    return customAdapter.mutationBuilder();\n  }\n  defaultAdapter = new DefaultMutationAdapter(options, config);\n  return defaultAdapter.mutationBuilder();\n}\n\nfunction subscriptionOperation(\n  options: IQueryBuilderOptions | IQueryBuilderOptions[],\n  adapter?: ISubscriptionAdapter\n) {\n  let customAdapter: ISubscriptionAdapter;\n  let defaultAdapter: ISubscriptionAdapter;\n  if (Array.isArray(options)) {\n    if (adapter) {\n      // @ts-ignore\n      customAdapter = new adapter(options);\n      return customAdapter.subscriptionsBuilder(options);\n    }\n    defaultAdapter = new DefaultSubscriptionAdapter(options);\n    return defaultAdapter.subscriptionsBuilder(options);\n  }\n  if (adapter) {\n    // @ts-ignore\n    customAdapter = new adapter(options);\n    return customAdapter.subscriptionBuilder();\n  }\n  defaultAdapter = new DefaultSubscriptionAdapter(options);\n  return defaultAdapter.subscriptionBuilder();\n}\n\nexport {\n  subscriptionOperation as subscription,\n  mutationOperation as mutation,\n  queryOperation as query,\n  adapters,\n};\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n", "var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n", "var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n", "/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n", "var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n", "/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n", "var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n", "var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n", "var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n", "var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n", "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n", "var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n", "var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n", "var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n", "/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n", "var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n", "/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n", "var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n", "var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n", "var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n", "/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n", "var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n", "var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n", "var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n", "var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n", "var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n", "/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n", "var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n", "var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n", "var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n", "var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n", "var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n", "var baseSet = require('./_baseSet');\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n", "'use strict';\n\nmodule.exports = function ReactNativeFile(_ref) {\n  var uri = _ref.uri,\n    name = _ref.name,\n    type = _ref.type;\n  this.uri = uri;\n  this.name = name;\n  this.type = type;\n};\n", "'use strict';\n\nvar ReactNativeFile = require('./ReactNativeFile');\n\nmodule.exports = function isExtractableFile(value) {\n  return (\n    (typeof File !== 'undefined' && value instanceof File) ||\n    (typeof Blob !== 'undefined' && value instanceof Blob) ||\n    value instanceof ReactNativeFile\n  );\n};\n", "'use strict';\n\nvar defaultIsExtractableFile = require('./isExtractableFile');\n\nmodule.exports = function extractFiles(value, path, isExtractableFile) {\n  if (path === void 0) {\n    path = '';\n  }\n\n  if (isExtractableFile === void 0) {\n    isExtractableFile = defaultIsExtractableFile;\n  }\n\n  var clone;\n  var files = new Map();\n\n  function addFile(paths, file) {\n    var storedPaths = files.get(file);\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths);\n    else files.set(file, paths);\n  }\n\n  if (isExtractableFile(value)) {\n    clone = null;\n    addFile([path], value);\n  } else {\n    var prefix = path ? path + '.' : '';\n    if (typeof FileList !== 'undefined' && value instanceof FileList)\n      clone = Array.prototype.map.call(value, function (file, i) {\n        addFile(['' + prefix + i], file);\n        return null;\n      });\n    else if (Array.isArray(value))\n      clone = value.map(function (child, i) {\n        var result = extractFiles(child, '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        return result.clone;\n      });\n    else if (value && value.constructor === Object) {\n      clone = {};\n\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        clone[i] = result.clone;\n      }\n    } else clone = value;\n  }\n\n  return {\n    clone: clone,\n    files: files,\n  };\n};\n", "/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n", "var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n", "import type { BaseRecord, DataProvider, LogicalFilter } from \"@refinedev/core\";\n\nimport camelcase from \"camelcase\";\nimport * as gql from \"gql-query-builder\";\nimport type VariableOptions from \"gql-query-builder/build/VariableOptions\";\nimport type { GraphQLClient } from \"graphql-request\";\nimport gqlTag from \"graphql-tag\";\nimport { singular } from \"pluralize\";\n\nimport { generateFilters, generatePaging, generateSorting } from \"../utils\";\n\nimport { getOperationFields, isMutation } from \"../utils/graphql\";\n\nconst dataProvider = (client: GraphQLClient): Required<DataProvider> => {\n  return {\n    getList: async ({ resource, pagination, sorters, filters, meta }) => {\n      const operation = camelcase(resource);\n\n      const paging = generatePaging(pagination || {});\n\n      const queryVariables: VariableOptions = {};\n\n      let query;\n      let variables;\n\n      if (meta?.gqlQuery) {\n        query = meta?.gqlQuery;\n\n        variables = {\n          filter: filters ? generateFilters(filters as LogicalFilter[]) : {},\n          sorting: sorters ? generateSorting(sorters) : [],\n          paging,\n        };\n      } else {\n        if (filters) {\n          queryVariables[\"filter\"] = {\n            type: camelcase(`${singular(resource)}Filter`, {\n              pascalCase: true,\n            }),\n            required: true,\n            value: generateFilters(filters as LogicalFilter[]),\n          };\n        }\n\n        if (sorters) {\n          queryVariables[\"sorting\"] = {\n            type: camelcase(`${singular(resource)}Sort`, {\n              pascalCase: true,\n            }),\n            required: true,\n            list: [true],\n            value: generateSorting(sorters),\n          };\n        }\n\n        if (paging) {\n          queryVariables[\"paging\"] = {\n            type: \"OffsetPaging\",\n            required: true,\n            value: paging,\n          };\n        }\n\n        const gqlQuery = gql.query({\n          operation,\n          fields: [{ nodes: meta?.fields }, \"totalCount\"],\n          variables: queryVariables,\n        });\n\n        query = gqlQuery.query;\n        variables = gqlQuery.variables;\n      }\n\n      const response = await client.request<BaseRecord>(query, variables);\n\n      return {\n        data: response[operation].nodes,\n        total: response[operation].totalCount,\n      };\n    },\n\n    getMany: async ({ resource, ids, meta }) => {\n      const operation = camelcase(resource);\n\n      if (meta?.gqlQuery) {\n        const response = await client.request<BaseRecord>(meta.gqlQuery, {\n          filter: {\n            id: { in: ids },\n          },\n        });\n\n        return {\n          data: response[operation].nodes,\n        };\n      }\n\n      const { query, variables } = gql.query({\n        operation,\n        fields: [{ nodes: meta?.fields || [\"id\"] }],\n        variables: {\n          filter: {\n            type: camelcase(`${singular(resource)}Filter`, {\n              pascalCase: true,\n            }),\n            required: true,\n            value: {\n              id: { in: ids },\n            },\n          },\n        },\n      });\n\n      const response = await client.request<BaseRecord>(query, variables);\n\n      return {\n        data: response[operation].nodes,\n      };\n    },\n\n    create: async ({ resource, variables, meta }) => {\n      const operation = `createOne${camelcase(singular(resource), {\n        pascalCase: true,\n      })}`;\n\n      const gqlOperation = meta?.gqlMutation ?? meta?.gqlQuery;\n\n      if (gqlOperation) {\n        const response = await client.request<BaseRecord>(gqlOperation, {\n          input: { [camelcase(singular(resource))]: variables },\n        });\n\n        return {\n          data: response[operation],\n        };\n      }\n\n      const { query, variables: queryVariables } = gql.mutation({\n        operation,\n        fields: meta?.fields || [\"id\"],\n        variables: {\n          input: {\n            type: `CreateOne${camelcase(singular(resource), {\n              pascalCase: true,\n            })}Input`,\n            required: true,\n            value: {\n              [camelcase(singular(resource))]: variables,\n            },\n          },\n        },\n      });\n\n      const response = await client.request<BaseRecord>(query, queryVariables);\n\n      return {\n        data: response[operation],\n      };\n    },\n\n    createMany: async ({ resource, variables, meta }) => {\n      const pascalResource = camelcase(resource, { pascalCase: true });\n      const operation = `createMany${pascalResource}`;\n\n      const gqlOperation = meta?.gqlMutation ?? meta?.gqlQuery;\n\n      if (gqlOperation) {\n        const response = await client.request<BaseRecord>(gqlOperation, {\n          input: {\n            [camelcase(resource)]: variables,\n          },\n        });\n\n        return {\n          data: response[operation],\n        };\n      }\n\n      const { query, variables: queryVariables } = gql.mutation({\n        operation,\n        fields: meta?.fields || [\"id\"],\n        variables: {\n          input: {\n            type: `CreateMany${camelcase(resource, {\n              pascalCase: true,\n            })}Input`,\n            required: true,\n            value: {\n              [camelcase(resource)]: variables,\n            },\n          },\n        },\n      });\n\n      const response = await client.request<BaseRecord>(query, queryVariables);\n\n      return {\n        data: response[operation],\n      };\n    },\n    update: async ({ resource, id, variables, meta }) => {\n      const operation = `updateOne${camelcase(singular(resource), {\n        pascalCase: true,\n      })}`;\n\n      const gqlOperation = meta?.gqlMutation ?? meta?.gqlQuery;\n\n      if (gqlOperation) {\n        const response = await client.request<BaseRecord>(gqlOperation, {\n          input: {\n            id,\n            update: variables,\n          },\n        });\n\n        return {\n          data: response[operation],\n        };\n      }\n\n      const { query, variables: queryVariables } = gql.mutation({\n        operation,\n        fields: meta?.fields || [\"id\"],\n        variables: {\n          input: {\n            type: `UpdateOne${camelcase(singular(resource), {\n              pascalCase: true,\n            })}Input`,\n            required: true,\n            value: {\n              id,\n              update: variables,\n            },\n          },\n        },\n      });\n\n      const response = await client.request<BaseRecord>(query, queryVariables);\n\n      return {\n        data: response[operation],\n      };\n    },\n    updateMany: async ({ resource, ids, variables, meta }) => {\n      const pascalResource = camelcase(resource, {\n        pascalCase: true,\n      });\n\n      const mutationOperation = `updateMany${pascalResource}`;\n\n      const mutation = gqlTag`\n                mutation UpdateMany${pascalResource}($input: UpdateMany${pascalResource}Input!) {\n                    ${mutationOperation}(input: $input) {\n                        updatedCount\n                    }\n                }\n            `;\n\n      await client.request<BaseRecord>(mutation, {\n        input: { filter: { id: { in: ids } }, update: variables },\n      });\n\n      const operation = camelcase(resource);\n\n      let query;\n      let queryVariables;\n\n      if (meta?.fields) {\n        const gqlQuery = gql.query({\n          operation,\n          fields: [{ nodes: meta?.fields || [\"id\"] }],\n          variables: {\n            filter: {\n              type: camelcase(`${singular(resource)}Filter`, {\n                pascalCase: true,\n              }),\n              required: true,\n              value: {\n                id: { in: ids },\n              },\n            },\n          },\n        });\n        query = gqlQuery.query;\n        queryVariables = gqlQuery.variables;\n      } else {\n        query = gqlTag`\n                    query GetMany${pascalResource}($filter: ${singular(\n                      pascalResource,\n                    )}Filter!) {\n                        ${operation}(filter: $filter) {\n                            nodes {\n                                id\n                            }\n                        }\n                    }\n                `;\n\n        queryVariables = {\n          filter: { id: { in: ids } },\n        };\n      }\n\n      const response = await client.request<BaseRecord>(query, queryVariables);\n\n      return {\n        data: response[operation].nodes,\n      };\n    },\n    getOne: async ({ resource, id, meta }) => {\n      const operation = camelcase(singular(resource));\n\n      const gqlOperation = meta?.gqlQuery ?? meta?.gqlMutation;\n\n      if (gqlOperation) {\n        let query = gqlOperation;\n        const variables = { id };\n\n        if (isMutation(gqlOperation)) {\n          const stringFields = getOperationFields(gqlOperation);\n\n          query = gqlTag`\n                        query Get${camelcase(singular(resource), {\n                          pascalCase: true,\n                        })}($id: ID!) {\n                            ${operation}(id: $id) {\n                            ${stringFields}\n                            }\n                        }\n                    `;\n        }\n\n        const response = await client.request<BaseRecord>(query, variables);\n\n        return {\n          data: response[operation],\n        };\n      }\n\n      const { query, variables } = gql.query({\n        operation,\n        fields: meta?.fields || [\"id\"],\n        variables: {\n          id: {\n            type: \"ID\",\n            required: true,\n            value: id,\n          },\n        },\n      });\n\n      const response = await client.request<BaseRecord>(query, variables);\n\n      return {\n        data: response[operation],\n      };\n    },\n    deleteOne: async ({ resource, id, meta }) => {\n      const pascalResource = camelcase(singular(resource), {\n        pascalCase: true,\n      });\n\n      const operation = `deleteOne${pascalResource}`;\n\n      if (meta?.gqlMutation) {\n        const response = await client.request<BaseRecord>(meta.gqlMutation, {\n          input: { id },\n        });\n\n        return {\n          data: response[operation],\n        };\n      }\n\n      const query = gqlTag`\n                    mutation DeleteOne${pascalResource}($input: DeleteOne${pascalResource}Input!) {\n                        ${operation}(input: $input) {\n                            id\n                        }\n                    }\n                `;\n\n      const response = await client.request<BaseRecord>(query, {\n        input: { id },\n      });\n\n      return {\n        data: response[operation],\n      };\n    },\n    deleteMany: async ({ resource, ids }) => {\n      const pascalResource = camelcase(resource, {\n        pascalCase: true,\n      });\n      const operation = `deleteMany${pascalResource}`;\n\n      const query = gqlTag`\n                mutation DeleteMany${pascalResource}($input: DeleteMany${pascalResource}Input!) {\n                    ${operation}(input: $input) {\n                        deletedCount\n                    }\n                }\n            `;\n\n      const variables = {\n        input: {\n          filter: {\n            id: { in: ids },\n          },\n        },\n      };\n\n      await client.request<BaseRecord>(query, variables);\n\n      return {\n        data: [],\n      };\n    },\n    getApiUrl: () => {\n      return (client as any).url; // url field in GraphQLClient is private\n    },\n    custom: async ({ url, method, headers, meta }) => {\n      if (url) {\n        client.setEndpoint(url);\n      }\n\n      if (headers) {\n        client.setHeaders(headers);\n      }\n\n      const gqlOperation = meta?.gqlMutation ?? meta?.gqlQuery;\n\n      if (gqlOperation) {\n        const response: any = await client.request(\n          gqlOperation,\n          meta?.variables ?? {},\n        );\n\n        return { data: response };\n      }\n\n      if (meta?.rawQuery) {\n        const response = await client.request<BaseRecord>(\n          meta.rawQuery,\n          meta.variables,\n        );\n\n        return { data: response };\n      }\n\n      if (meta) {\n        if (meta.operation) {\n          let query;\n          let variables;\n\n          if (method === \"get\") {\n            const gqlQuery = gql.query({\n              operation: meta.operation,\n              fields: meta.fields,\n              variables: meta.variables,\n            });\n\n            query = gqlQuery.query;\n            variables = gqlQuery.variables;\n          } else {\n            const gqlMutation = gql.mutation({\n              operation: meta.operation,\n              fields: meta.fields,\n              variables: meta.variables,\n            });\n\n            query = gqlMutation.query;\n            variables = gqlMutation.variables;\n          }\n\n          const response = await client.request<BaseRecord>(query, variables);\n\n          return {\n            data: response[meta.operation],\n          };\n        }\n        throw Error(\"GraphQL operation name required.\");\n      }\n      throw Error(\n        \"GraphQL needs operation, fields and variables values in meta object.\",\n      );\n    },\n  };\n};\n\nexport default dataProvider;\n", "import type {\n  CrudFilter,\n  CrudOperators,\n  CrudSorting,\n  LogicalFilter,\n  Pagination,\n} from \"@refinedev/core\";\n\nimport camelcase from \"camelcase\";\nimport * as gql from \"gql-query-builder\";\nimport type VariableOptions from \"gql-query-builder/build/VariableOptions\";\nimport type { Client } from \"graphql-ws\";\nimport set from \"lodash/set\";\nimport { singular } from \"pluralize\";\n\nimport { getOperationFields } from \"./graphql\";\n\nexport const generateSubscription = (\n  client: Client,\n  { callback, params, meta }: any,\n  type: string,\n) => {\n  const generatorMap: any = {\n    created: generateCreatedSubscription,\n    updated: generateUpdatedSubscription,\n    deleted: generateDeletedSubscription,\n  };\n\n  const { resource, filters, subscriptionType, id, ids } = params ?? {};\n\n  const generator = generatorMap[type];\n\n  const { operation, query, variables, operationName } = generator({\n    ids,\n    id,\n    resource,\n    filters,\n    meta,\n    subscriptionType,\n  });\n\n  const onNext = (payload: any) => {\n    callback(payload.data[operation]);\n  };\n\n  const unsubscribe = client.subscribe(\n    { query, variables, operationName },\n    {\n      next: onNext,\n      error: console.error,\n      complete: () => null,\n    },\n  );\n\n  return unsubscribe;\n};\n\nconst operatorMap: { [key: string]: string } = {\n  eq: \"eq\",\n  ne: \"neq\",\n  lt: \"lt\",\n  gt: \"gt\",\n  lte: \"lte\",\n  gte: \"gte\",\n  in: \"in\",\n  nin: \"notIn\",\n};\n\nconst operatorMapper = (\n  operator: CrudOperators,\n  value: any,\n): { [key: string]: any } => {\n  if (operator === \"contains\") {\n    return { iLike: `%${value}%` };\n  }\n\n  if (operator === \"ncontains\") {\n    return { notILike: `%${value}%` };\n  }\n\n  if (operator === \"containss\") {\n    return { like: `%${value}%` };\n  }\n\n  if (operator === \"ncontainss\") {\n    return { notLike: `%${value}%` };\n  }\n\n  if (operator === \"startswith\") {\n    return { iLike: `${value}%` };\n  }\n\n  if (operator === \"nstartswith\") {\n    return { notILike: `${value}%` };\n  }\n\n  if (operator === \"startswiths\") {\n    return { like: `${value}%` };\n  }\n\n  if (operator === \"nstartswiths\") {\n    return { notLike: `${value}%` };\n  }\n\n  if (operator === \"endswith\") {\n    return { iLike: `%${value}` };\n  }\n\n  if (operator === \"nendswith\") {\n    return { notILike: `%${value}` };\n  }\n\n  if (operator === \"endswiths\") {\n    return { like: `%${value}` };\n  }\n\n  if (operator === \"nendswiths\") {\n    return { notLike: `%${value}` };\n  }\n\n  if (operator === \"null\") {\n    return { is: null };\n  }\n\n  if (operator === \"nnull\") {\n    return { isNot: null };\n  }\n\n  if (operator === \"between\") {\n    if (!Array.isArray(value)) {\n      throw new Error(\"Between operator requires an array\");\n    }\n\n    if (value.length !== 2) {\n      return {};\n    }\n\n    return { between: { lower: value[0], upper: value[1] } };\n  }\n\n  if (operator === \"nbetween\") {\n    if (!Array.isArray(value)) {\n      throw new Error(\"NBetween operator requires an array\");\n    }\n\n    if (value.length !== 2) {\n      return {};\n    }\n\n    return { notBetween: { lower: value[0], upper: value[1] } };\n  }\n\n  return { [operatorMap[operator]]: value };\n};\n\nexport const generateFilters = (filters: LogicalFilter[]) => {\n  const result: { [key: string]: { [key: string]: string | number } } = {};\n\n  filters\n    .filter((f) => {\n      if (Array.isArray(f.value) && f.value.length === 0) {\n        return false;\n      }\n\n      return !!f.value;\n    })\n    .map((filter: LogicalFilter | CrudFilter) => {\n      if (filter.operator === \"and\" || filter.operator === \"or\") {\n        return set(result, filter.operator, [\n          generateFilters(filter.value as LogicalFilter[]),\n        ]);\n      }\n      if (\"field\" in filter) {\n        return set(\n          result,\n          filter.field,\n          operatorMapper(filter.operator, filter.value),\n        );\n      }\n      return {};\n    });\n\n  return result;\n};\n\nexport const generateSorting = (sorters: CrudSorting) => {\n  return sorters.map((sorter) => {\n    return {\n      field: sorter.field,\n      direction: sorter.order.toUpperCase(),\n    };\n  });\n};\n\nexport const generatePaging = (pagination: Pagination) => {\n  // maximum value of 32 bit signed integer\n  if (pagination.mode === \"off\") return { limit: 2147483647 };\n\n  if (pagination.mode !== \"server\") return undefined;\n\n  if (!pagination.current || !pagination.pageSize) return undefined;\n\n  return {\n    limit: pagination.pageSize,\n    offset: (pagination.current - 1) * pagination.pageSize,\n  };\n};\n\nexport const generateCreatedSubscription = ({\n  resource,\n  filters,\n  meta,\n}: any) => {\n  const gqlOperation = meta?.gqlQuery ?? meta?.gqlMutation;\n\n  if (gqlOperation) {\n    const singularResourceName = camelcase(singular(resource), {\n      pascalCase: true,\n    });\n\n    const operationName = `Created${singularResourceName}`;\n\n    const operation = `created${singularResourceName}`;\n\n    const query = `\n            subscription ${operationName}($input: Create${singularResourceName}SubscriptionFilterInput) {\n                ${operation}(input: $input) {\n                    ${getOperationFields(gqlOperation)}\n                }\n            }\n        `;\n\n    const variables: VariableOptions = {};\n\n    if (filters) {\n      variables[\"input\"] = {\n        filter: generateFilters(\n          filters.filter(\n            (filter: LogicalFilter) => !filter.field.includes(\".\"),\n          ),\n        ),\n      };\n    }\n\n    return { query, variables, operation, operationName };\n  }\n\n  const operation = `created${camelcase(singular(resource), {\n    pascalCase: true,\n  })}`;\n\n  const queryVariables: VariableOptions = {};\n\n  if (filters) {\n    queryVariables[\"input\"] = {\n      type: camelcase(\n        `create_${singular(resource)}_subscription_filter_input`,\n        {\n          pascalCase: true,\n        },\n      ),\n      required: true,\n      value: {\n        filter: generateFilters(\n          filters.filter(\n            (filter: LogicalFilter) => !filter.field.includes(\".\"),\n          ),\n        ),\n      },\n    };\n  }\n\n  const { query, variables } = gql.subscription({\n    operation,\n    fields: meta.fields,\n    variables: queryVariables,\n  });\n\n  return { query, variables, operation };\n};\n\nexport const generateUpdatedSubscription = ({\n  id,\n  resource,\n  filters,\n  meta,\n}: any) => {\n  const gqlOperation = meta?.gqlQuery ?? meta?.gqlMutation;\n\n  if (gqlOperation) {\n    const singularResourceName = camelcase(singular(resource), {\n      pascalCase: true,\n    });\n\n    const operationName = `Updated${singularResourceName}`;\n\n    const operation = `updatedOne${singularResourceName}`;\n\n    const query = `\n            subscription ${operationName}($input: UpdateOne${singularResourceName}SubscriptionFilterInput) {\n                ${operation}(input: $input) {\n                   ${getOperationFields(gqlOperation)}\n                }\n            }\n        `;\n\n    const variables: VariableOptions = {};\n\n    if (filters) {\n      variables[\"input\"] = {\n        filter: generateFilters(\n          filters.filter(\n            (filter: LogicalFilter) => !filter.field.includes(\".\"),\n          ),\n        ),\n      };\n    }\n\n    if (id) {\n      variables[\"input\"] = {\n        filter: {\n          id: { eq: id },\n        },\n      };\n    }\n\n    return { query, variables, operation, operationName };\n  }\n\n  const operation = `updatedOne${camelcase(singular(resource), {\n    pascalCase: true,\n  })}`;\n\n  const queryVariables: VariableOptions = {};\n\n  if (filters) {\n    queryVariables[\"input\"] = {\n      type: camelcase(\n        `update_one_${singular(resource)}_subscription_filter_input`,\n        {\n          pascalCase: true,\n        },\n      ),\n      required: true,\n      value: {\n        filter: generateFilters(\n          filters.filter(\n            (filter: LogicalFilter) => !filter.field.includes(\".\"),\n          ),\n        ),\n      },\n    };\n  }\n\n  if (id) {\n    queryVariables[\"input\"] = {\n      type: camelcase(\n        `update_one_${singular(resource)}_subscription_filter_input`,\n        {\n          pascalCase: true,\n        },\n      ),\n      required: true,\n      value: {\n        filter: {\n          id: { eq: id },\n        },\n      },\n    };\n  }\n\n  const { query, variables } = gql.subscription({\n    operation,\n    fields: meta.fields,\n    variables: queryVariables,\n  });\n\n  return { query, variables, operation };\n};\n\nexport const generateDeletedSubscription = ({\n  resource,\n  filters,\n  meta,\n}: any) => {\n  if (meta?.gqlQuery) {\n    const singularResourceName = camelcase(singular(resource), {\n      pascalCase: true,\n    });\n\n    const operationName = `Deleted${singularResourceName}`;\n\n    const operation = `deletedOne${singularResourceName}`;\n\n    const query = `\n            subscription ${operationName}($input: DeleteOne${singularResourceName}SubscriptionFilterInput) {\n                ${operation}(input: $input) {\n                    id\n                }\n            }\n        `;\n\n    const variables: VariableOptions = {};\n\n    if (filters) {\n      variables[\"input\"] = {\n        filter: generateFilters(\n          filters.filter(\n            (filter: LogicalFilter) => !filter.field.includes(\".\"),\n          ),\n        ),\n      };\n    }\n\n    return { query, variables, operation, operationName };\n  }\n\n  const operation = `deletedOne${camelcase(singular(resource), {\n    pascalCase: true,\n  })}`;\n\n  const queryVariables: VariableOptions = {};\n\n  if (filters) {\n    queryVariables[\"input\"] = {\n      type: camelcase(\n        `delete_one_${singular(resource)}_subscription_filter_input`,\n        {\n          pascalCase: true,\n        },\n      ),\n      required: true,\n      value: {\n        filter: generateFilters(\n          filters.filter(\n            (filter: LogicalFilter) => !filter.field.includes(\".\"),\n          ),\n        ),\n      },\n    };\n  }\n\n  const { query, variables } = gql.subscription({\n    operation,\n    fields: meta.fields.filter(\n      (field: string | object) => typeof field !== \"object\",\n    ),\n    variables: queryVariables,\n  });\n\n  return { query, variables, operation };\n};\n", "import {\n  type FieldNode,\n  type DocumentNode,\n  visit,\n  type SelectionSetNode,\n} from \"graphql\";\n\nconst getChildNodesField = (node: FieldNode): FieldNode | undefined => {\n  return node?.selectionSet?.selections?.find(\n    (node) => node.kind === \"Field\" && node.name.value === \"nodes\",\n  ) as FieldNode;\n};\n\nexport const getOperationFields = (documentNode: DocumentNode) => {\n  const fieldLines: string[] = [];\n  let isInitialEnter = true;\n  let depth = 0;\n  let isNestedField = false;\n\n  visit(documentNode, {\n    Field: {\n      enter(node): SelectionSetNode | void {\n        if (isInitialEnter) {\n          isInitialEnter = false;\n\n          const childNodesField = getChildNodesField(node);\n\n          const nodeToReturn = childNodesField ?? node;\n\n          if (typeof nodeToReturn.selectionSet === \"undefined\") {\n            throw new Error(\"Operation must have a selection set\");\n          }\n\n          return nodeToReturn.selectionSet;\n        }\n\n        fieldLines.push(\n          `${depth > 0 ? \"  \".repeat(isNestedField ? depth : depth - 1) : \"\"}${\n            node.name.value\n          }${node.selectionSet ? \" {\" : \"\"}`,\n        );\n\n        if (node.selectionSet) {\n          depth++;\n          isNestedField = true;\n        }\n      },\n      leave(node) {\n        if (node.selectionSet) {\n          depth--;\n          fieldLines.push(`${\"  \".repeat(depth)}}`);\n          isNestedField = false;\n        }\n      },\n    },\n  });\n\n  return fieldLines.join(\"\\n\").trim();\n};\n\nexport const isMutation = (documentNode: DocumentNode) => {\n  let isMutation = false;\n\n  visit(documentNode, {\n    OperationDefinition: {\n      enter(node) {\n        if (node.operation === \"mutation\") {\n          isMutation = true;\n        }\n      },\n    },\n  });\n\n  return isMutation;\n};\n", "import type { LiveProvider } from \"@refinedev/core\";\n\nimport type { Client } from \"graphql-ws\";\n\nimport { generateSubscription } from \"../utils\";\n\ntype SubscriptionAction = \"created\" | \"updated\" | \"deleted\";\n\nexport const liveProvider = (client: Client): LiveProvider => {\n  const subscribeToResource = (\n    client: Client,\n    callback: Function,\n    params: any,\n    meta: any,\n    action: SubscriptionAction,\n    resource: string,\n    unsubscribes: Function[],\n  ) => {\n    const unsubscribe = generateSubscription(\n      client,\n      { callback, params, meta },\n      action,\n    );\n    unsubscribes.push(unsubscribe);\n  };\n\n  return {\n    subscribe({ callback, params, meta }) {\n      const { resource, subscriptionType } = params ?? {};\n\n      if (!meta || !subscriptionType || !resource) {\n        throw new Error(\n          \"[useSubscription]: `meta`, `subscriptionType` and `resource` are required in `params` for graphql subscriptions\",\n        );\n      }\n\n      const unsubscribes: any[] = [];\n\n      if (params?.subscriptionType === \"useList\") {\n        [\"created\", \"updated\", \"deleted\"].forEach((action) =>\n          subscribeToResource(\n            client,\n            callback,\n            params,\n            meta,\n            action as SubscriptionAction,\n            resource,\n            unsubscribes,\n          ),\n        );\n      }\n\n      if (params?.subscriptionType === \"useOne\") {\n        subscribeToResource(\n          client,\n          callback,\n          params,\n          meta,\n          \"updated\",\n          resource,\n          unsubscribes,\n        );\n      }\n\n      const unsubscribe = () => {\n        unsubscribes.forEach((unsubscribe) => unsubscribe());\n      };\n\n      return unsubscribe;\n    },\n    unsubscribe(unsubscribe) {\n      unsubscribe();\n    },\n  };\n};\n", "import dataProvider from \"./dataProvider/index.js\";\n\nexport * from \"./dataProvider/index.js\";\nexport * from \"./interfaces.js\";\nexport * from \"./liveProvider/index.js\";\nexport * as qqlQueryBuilder from \"gql-query-builder\";\nexport type {\n  BatchRequestDocument,\n  BatchRequestsExtendedOptions,\n  BatchRequestsOptions,\n  ClientError,\n  GraphQLWebSocketClient,\n  RawRequestExtendedOptions,\n  RawRequestOptions,\n  RequestDocument,\n  RequestExtendedOptions,\n  RequestOptions,\n  Variables,\n} from \"graphql-request\";\nexport {\n  batchRequests,\n  gql,\n  GraphQLClient,\n  rawRequest,\n  request,\n  resolveRequestDocument,\n} from \"graphql-request\";\nexport * as graphqlWS from \"graphql-ws\";\n\nexport default dataProvider;\n", "import type { JsonSerializer } from './types.dom.js'\n\nexport const defaultJsonSerializer: JsonSerializer = {\n  parse: JSON.parse,\n  stringify: JSON.stringify,\n}\n", "export { default as ReactNativeFile } from './ReactNativeFile.js';\nexport { default as extractFiles } from './extractFiles.js';\nexport { default as isExtractableFile } from './isExtractableFile.js';\n", "import { defaultJsonSerializer } from './defaultJsonSerializer.js'\nimport type * as Dom from './types.dom.js'\nimport type { Variables } from './types.js'\nimport type { ExtractableFile } from 'extract-files'\nimport { extractFiles, isExtractableFile } from 'extract-files'\nimport FormDataNode from 'form-data'\n\n/**\n * Duck type if NodeJS stream\n * https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n */\nconst isExtractableFileEnhanced = (value: any): value is ExtractableFile | { pipe: Function } =>\n  isExtractableFile(value) ||\n  (value !== null && typeof value === `object` && typeof value.pipe === `function`)\n\n/**\n * Returns Multipart Form if body contains files\n * (https://github.com/jaydenseric/graphql-multipart-request-spec)\n * Otherwise returns JSON\n */\nconst createRequestBody = (\n  query: string | string[],\n  variables?: Variables | Variables[],\n  operationName?: string,\n  jsonSerializer = defaultJsonSerializer\n): string | Dom.FormData => {\n  const { clone, files } = extractFiles({ query, variables, operationName }, ``, isExtractableFileEnhanced)\n\n  if (files.size === 0) {\n    if (!Array.isArray(query)) {\n      return jsonSerializer.stringify(clone)\n    }\n\n    if (typeof variables !== `undefined` && !Array.isArray(variables)) {\n      throw new Error(`Cannot create request body with given variable type, array expected`)\n    }\n\n    // Batch support\n    const payload = query.reduce<{ query: string; variables: Variables | undefined }[]>(\n      (accu, currentQuery, index) => {\n        accu.push({ query: currentQuery, variables: variables ? variables[index] : undefined })\n        return accu\n      },\n      []\n    )\n\n    return jsonSerializer.stringify(payload)\n  }\n\n  const Form = typeof FormData === `undefined` ? FormDataNode : FormData\n\n  const form = new Form()\n\n  form.append(`operations`, jsonSerializer.stringify(clone))\n\n  const map: { [key: number]: string[] } = {}\n  let i = 0\n  files.forEach((paths) => {\n    map[++i] = paths\n  })\n  form.append(`map`, jsonSerializer.stringify(map))\n\n  i = 0\n  files.forEach((paths, file) => {\n    form.append(`${++i}`, file as any)\n  })\n\n  return form as Dom.FormData\n}\n\nexport default createRequestBody\n", "import type * as Dom from './types.dom.js'\n\nexport type RemoveIndex<T> = {\n  [K in keyof T as string extends K ? never : number extends K ? never : K]: T[K]\n}\n\nexport const uppercase = <S extends string>(str: S): Uppercase<S> => str.toUpperCase() as Uppercase<S>\n\n/**\n * Convert Headers instance into regular object\n */\nexport const HeadersInstanceToPlainObject = (headers: Dom.Response['headers']): Record<string, string> => {\n  const o: Record<string, string> = {}\n  headers.forEach((v, k) => {\n    o[k] = v\n  })\n  return o\n}\n", "import type * as Dom from './types.dom.js'\nimport type {\n  BatchRequestDocument,\n  BatchRequestsExtendedOptions,\n  BatchRequestsOptions,\n  RawRequestExtendedOptions,\n  RawRequestOptions,\n  RequestDocument,\n  RequestExtendedOptions,\n  RequestOptions,\n  Variables,\n  VariablesAndRequestHeadersArgs,\n} from './types.js'\n\nexport const parseRequestArgs = <V extends Variables = Variables>(\n  documentOrOptions: RequestDocument | RequestOptions<V>,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): RequestOptions<V> => {\n  return (documentOrOptions as RequestOptions<V>).document\n    ? (documentOrOptions as RequestOptions<V>)\n    : ({\n        document: documentOrOptions as RequestDocument,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      } as unknown as RequestOptions<V>)\n}\n\nexport const parseRawRequestArgs = <V extends Variables = Variables>(\n  queryOrOptions: string | RawRequestOptions<V>,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): RawRequestOptions<V> => {\n  return (queryOrOptions as RawRequestOptions<V>).query\n    ? (queryOrOptions as RawRequestOptions<V>)\n    : ({\n        query: queryOrOptions as string,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      } as unknown as RawRequestOptions<V>)\n}\n\nexport const parseBatchRequestArgs = <V extends Variables = Variables>(\n  documentsOrOptions: BatchRequestDocument<V>[] | BatchRequestsOptions<V>,\n  requestHeaders?: Dom.RequestInit['headers']\n): BatchRequestsOptions<V> => {\n  return (documentsOrOptions as BatchRequestsOptions<V>).documents\n    ? (documentsOrOptions as BatchRequestsOptions<V>)\n    : {\n        documents: documentsOrOptions as BatchRequestDocument<V>[],\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      }\n}\n\nexport const parseRequestExtendedArgs = <V extends Variables = Variables>(\n  urlOrOptions: string | RequestExtendedOptions<V>,\n  document?: RequestDocument,\n  ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>\n): RequestExtendedOptions<V> => {\n  const [variables, requestHeaders] = variablesAndRequestHeaders\n  return (urlOrOptions as RequestExtendedOptions<V>).document\n    ? (urlOrOptions as RequestExtendedOptions<V>)\n    : ({\n        url: urlOrOptions as string,\n        document: document as RequestDocument,\n        variables,\n        requestHeaders,\n        signal: undefined,\n      } as unknown as RequestExtendedOptions<V>)\n}\n\nexport const parseRawRequestExtendedArgs = <V extends Variables = Variables>(\n  urlOrOptions: string | RawRequestExtendedOptions<V>,\n  query?: string,\n  ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>\n): RawRequestExtendedOptions<V> => {\n  const [variables, requestHeaders] = variablesAndRequestHeaders\n  return (urlOrOptions as RawRequestExtendedOptions<V>).query\n    ? (urlOrOptions as RawRequestExtendedOptions<V>)\n    : ({\n        url: urlOrOptions as string,\n        query: query as string,\n        variables,\n        requestHeaders,\n        signal: undefined,\n      } as unknown as RawRequestExtendedOptions<V>)\n}\n", "import type { RequestDocument } from './types.js'\nimport type { DocumentNode, OperationDefinitionNode } from 'graphql'\nimport { parse, print } from 'graphql'\n\n/**\n * helpers\n */\n\nconst extractOperationName = (document: DocumentNode): string | undefined => {\n  let operationName = undefined\n\n  const operationDefinitions = document.definitions.filter(\n    (definition) => definition.kind === `OperationDefinition`\n  ) as OperationDefinitionNode[]\n\n  if (operationDefinitions.length === 1) {\n    operationName = operationDefinitions[0]?.name?.value\n  }\n\n  return operationName\n}\n\nexport const resolveRequestDocument = (\n  document: RequestDocument\n): { query: string; operationName?: string } => {\n  if (typeof document === `string`) {\n    let operationName = undefined\n\n    try {\n      const parsedDocument = parse(document)\n      operationName = extractOperationName(parsedDocument)\n    } catch (err) {\n      // Failed parsing the document, the operationName will be undefined\n    }\n\n    return { query: document, operationName }\n  }\n\n  const operationName = extractOperationName(document)\n\n  return { query: print(document), operationName }\n}\n", "import type { RemoveIndex } from './helpers.js'\nimport type * as Dom from './types.dom.js'\nimport type { TypedDocumentNode } from '@graphql-typed-document-node/core'\nimport type { GraphQLError } from 'graphql/error/GraphQLError.js'\nimport type { DocumentNode } from 'graphql/language/ast.js'\n\nexport type { GraphQLError }\n\nexport type Variables = Record<string, unknown>\nexport type BatchVariables = (Record<string, unknown> | undefined)[]\n\nexport interface GraphQLResponse<T = unknown> {\n  data?: T\n  errors?: GraphQLError[]\n  extensions?: unknown\n  status: number\n  [key: string]: unknown\n}\n\nexport interface GraphQLRequestContext<V extends Variables = Variables> {\n  query: string | string[]\n  variables?: V\n}\n\nexport class ClientError extends Error {\n  response: GraphQLResponse\n  request: GraphQLRequestContext\n\n  constructor(response: GraphQLResponse, request: GraphQLRequestContext) {\n    const message = `${ClientError.extractMessage(response)}: ${JSON.stringify({\n      response,\n      request,\n    })}`\n\n    super(message)\n\n    Object.setPrototypeOf(this, ClientError.prototype)\n\n    this.response = response\n    this.request = request\n\n    // this is needed as Safari doesn't support .captureStackTrace\n    if (typeof Error.captureStackTrace === `function`) {\n      Error.captureStackTrace(this, ClientError)\n    }\n  }\n\n  private static extractMessage(response: GraphQLResponse): string {\n    return response.errors?.[0]?.message ?? `GraphQL Error (Code: ${response.status})`\n  }\n}\n\nexport type MaybeFunction<T> = T | (() => T)\n\nexport type RequestDocument = string | DocumentNode\n\nexport interface Response<T> {\n  data: T\n  extensions?: unknown\n  headers: Dom.Headers\n  errors?: GraphQLError[]\n  status: number\n}\n\nexport type HTTPMethodInput = 'GET' | 'POST' | 'get' | 'post'\n\nexport type RequestConfig = Omit<Dom.RequestInit, 'headers' | 'method'> & {\n  method?: HTTPMethodInput\n  headers?: MaybeFunction<Dom.RequestInit['headers']>\n  requestMiddleware?: RequestMiddleware\n  responseMiddleware?: (response: Response<unknown> | Error) => void\n}\n\nexport type BatchRequestDocument<V extends Variables = Variables> = {\n  document: RequestDocument\n  variables?: V\n}\n\nexport type RawRequestOptions<V extends Variables = Variables> = {\n  query: string\n  requestHeaders?: Dom.RequestInit['headers']\n  signal?: Dom.RequestInit['signal']\n} & (V extends Record<any, never>\n  ? { variables?: V }\n  : keyof RemoveIndex<V> extends never\n  ? { variables?: V }\n  : { variables: V })\n\nexport type RequestOptions<V extends Variables = Variables, T = unknown> = {\n  document: RequestDocument | TypedDocumentNode<T, V>\n  requestHeaders?: Dom.RequestInit['headers']\n  signal?: Dom.RequestInit['signal']\n} & (V extends Record<any, never>\n  ? { variables?: V }\n  : keyof RemoveIndex<V> extends never\n  ? { variables?: V }\n  : { variables: V })\n\nexport interface BatchRequestsOptions<V extends Variables = Variables> {\n  documents: BatchRequestDocument<V>[]\n  requestHeaders?: Dom.RequestInit['headers']\n  signal?: Dom.RequestInit['signal']\n}\n\nexport type RequestExtendedOptions<V extends Variables = Variables, T = unknown> = {\n  url: string\n} & RequestOptions<V, T>\n\nexport type RawRequestExtendedOptions<V extends Variables = Variables> = {\n  url: string\n} & RawRequestOptions<V>\n\nexport interface BatchRequestsExtendedOptions<V extends Variables = Variables>\n  extends BatchRequestsOptions<V> {\n  url: string\n}\n\nexport type RequestMiddleware<V extends Variables = Variables> = (\n  request: RequestExtendedInit<V>\n) => RequestExtendedInit | Promise<RequestExtendedInit>\n\ntype RequestExtendedInit<V extends Variables = Variables> = Dom.RequestInit & {\n  url: string\n  operationName?: string\n  variables?: V\n}\n\n// prettier-ignore\nexport type VariablesAndRequestHeadersArgs<V extends Variables> =\n  V extends Record<any, never> // do we have explicitly no variables allowed?\n    ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n  : keyof RemoveIndex<V> extends never // do we get an empty variables object?\n    ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n    : [variables: V, requestHeaders?: Dom.RequestInit['headers']]\n", "import createRequestBody from './createRequestBody.js'\nimport { defaultJsonSerializer } from './defaultJsonSerializer.js'\nimport { HeadersInstanceToPlainObject, uppercase } from './helpers.js'\nimport {\n  parseBatchRequestArgs,\n  parseRawRequestArgs,\n  parseRawRequestExtendedArgs,\n  parseRequestArgs,\n  parseRequestExtendedArgs,\n} from './parseArgs.js'\nimport { resolveRequestDocument } from './resolveRequestDocument.js'\nimport type * as Dom from './types.dom.js'\nimport type {\n  HTTPMethodInput,\n  MaybeFunction,\n  RequestConfig,\n  RequestMiddleware,\n  Response,\n  VariablesAndRequestHeadersArgs,\n} from './types.js'\nimport {\n  BatchRequestDocument,\n  BatchRequestsExtendedOptions,\n  BatchRequestsOptions,\n  ClientError,\n  RawRequestExtendedOptions,\n  RawRequestOptions,\n  RequestDocument,\n  RequestExtendedOptions,\n  RequestOptions,\n  Variables,\n} from './types.js'\nimport type { TypedDocumentNode } from '@graphql-typed-document-node/core'\nimport crossFetch, * as CrossFetch from 'cross-fetch'\nimport type { T, V } from 'vitest/dist/types-7cd96283.js'\n\nexport {\n  BatchRequestDocument,\n  BatchRequestsExtendedOptions,\n  BatchRequestsOptions,\n  ClientError,\n  RawRequestExtendedOptions,\n  RawRequestOptions,\n  RequestDocument,\n  RequestExtendedOptions,\n  RequestOptions,\n  Variables,\n}\n\n/**\n * Convert the given headers configuration into a plain object.\n */\nconst resolveHeaders = (headers: Dom.RequestInit['headers']): Record<string, string> => {\n  let oHeaders: Record<string, string> = {}\n  if (headers) {\n    if (\n      (typeof Headers !== `undefined` && headers instanceof Headers) ||\n      (CrossFetch && CrossFetch.Headers && headers instanceof CrossFetch.Headers)\n    ) {\n      oHeaders = HeadersInstanceToPlainObject(headers)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(([name, value]) => {\n        if (name && value !== undefined) {\n          oHeaders[name] = value\n        }\n      })\n    } else {\n      oHeaders = headers as Record<string, string>\n    }\n  }\n\n  return oHeaders\n}\n\n/**\n * Clean a GraphQL document to send it via a GET query\n */\nconst cleanQuery = (str: string): string => str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ` `).trim()\n\ntype BuildRequestConfigParamsBatch<V> = {\n  query: string[]\n  variables: V[] | undefined\n  operationName: undefined\n  jsonSerializer: Dom.JsonSerializer\n}\n\ntype BuildRequestConfigParamsSingle<V> = {\n  query: string\n  variables: V | undefined\n  operationName: string | undefined\n  jsonSerializer: Dom.JsonSerializer\n}\n\ntype BuildRequestConfigParams<V> = BuildRequestConfigParamsSingle<V> | BuildRequestConfigParamsBatch<V>\n\n/**\n * Create query string for GraphQL request\n */\nconst buildRequestConfig = <V extends Variables>(params: BuildRequestConfigParams<V>): string => {\n  if (!Array.isArray(params.query)) {\n    const params_ = params as BuildRequestConfigParamsSingle<V>\n    const search: string[] = [`query=${encodeURIComponent(cleanQuery(params_.query))}`]\n\n    if (params.variables) {\n      search.push(`variables=${encodeURIComponent(params_.jsonSerializer.stringify(params_.variables))}`)\n    }\n\n    if (params_.operationName) {\n      search.push(`operationName=${encodeURIComponent(params_.operationName)}`)\n    }\n\n    return search.join(`&`)\n  }\n\n  if (typeof params.variables !== `undefined` && !Array.isArray(params.variables)) {\n    throw new Error(`Cannot create query with given variable type, array expected`)\n  }\n\n  // Batch support\n  const params_ = params as BuildRequestConfigParamsBatch<V>\n  const payload = params.query.reduce<{ query: string; variables: string | undefined }[]>(\n    (acc, currentQuery, index) => {\n      acc.push({\n        query: cleanQuery(currentQuery),\n        variables: params_.variables ? params_.jsonSerializer.stringify(params_.variables[index]) : undefined,\n      })\n      return acc\n    },\n    []\n  )\n\n  return `query=${encodeURIComponent(params_.jsonSerializer.stringify(payload))}`\n}\n\ntype Fetch = (url: string, config: Dom.RequestInit) => Promise<Dom.Response>\n\ninterface RequestVerbParams<V extends Variables = Variables> {\n  url: string\n  query: string | string[]\n  fetch: Fetch\n  fetchOptions: Dom.RequestInit\n  variables?: V\n  headers?: Dom.RequestInit['headers']\n  operationName?: string\n  middleware?: RequestMiddleware<V>\n}\n\nconst createHttpMethodFetcher =\n  (method: 'GET' | 'POST') =>\n  async <V extends Variables>(params: RequestVerbParams<V>) => {\n    const { url, query, variables, operationName, fetch, fetchOptions, middleware } = params\n\n    const headers = { ...params.headers }\n    let queryParams = ``\n    let body = undefined\n\n    if (method === `POST`) {\n      body = createRequestBody(query, variables, operationName, fetchOptions.jsonSerializer)\n      if (typeof body === `string`) {\n        // @ts-expect-error todo\n        headers[`Content-Type`] = `application/json`\n      }\n    } else {\n      // @ts-expect-error todo needs ADT for TS to understand the different states\n      queryParams = buildRequestConfig<V>({\n        query,\n        variables,\n        operationName,\n        jsonSerializer: fetchOptions.jsonSerializer ?? defaultJsonSerializer,\n      })\n    }\n\n    const init: Dom.RequestInit = {\n      method,\n      headers,\n      body,\n      ...fetchOptions,\n    }\n\n    let urlResolved = url\n    let initResolved = init\n    if (middleware) {\n      const result = await Promise.resolve(middleware({ ...init, url, operationName, variables }))\n      const { url: urlNew, ...initNew } = result\n      urlResolved = urlNew\n      initResolved = initNew\n    }\n    if (queryParams) {\n      urlResolved = `${urlResolved}?${queryParams}`\n    }\n    return await fetch(urlResolved, initResolved)\n  }\n\n/**\n * GraphQL Client.\n */\nexport class GraphQLClient {\n  constructor(private url: string, public readonly requestConfig: RequestConfig = {}) {}\n\n  /**\n   * Send a GraphQL query to the server.\n   */\n  rawRequest: RawRequestMethod = async <T, V extends Variables = Variables>(\n    ...args: RawRequestMethodArgs<V>\n  ): Promise<Response<T>> => {\n    const [queryOrOptions, variables, requestHeaders] = args\n    const rawRequestOptions = parseRawRequestArgs<V>(queryOrOptions, variables, requestHeaders)\n\n    const {\n      headers,\n      fetch = crossFetch,\n      method = `POST`,\n      requestMiddleware,\n      responseMiddleware,\n      ...fetchOptions\n    } = this.requestConfig\n    const { url } = this\n    if (rawRequestOptions.signal !== undefined) {\n      fetchOptions.signal = rawRequestOptions.signal\n    }\n\n    const { operationName } = resolveRequestDocument(rawRequestOptions.query)\n\n    return makeRequest<T, V>({\n      url,\n      query: rawRequestOptions.query,\n      variables: rawRequestOptions.variables as V,\n      headers: {\n        ...resolveHeaders(callOrIdentity(headers)),\n        ...resolveHeaders(rawRequestOptions.requestHeaders),\n      },\n      operationName,\n      fetch,\n      method,\n      fetchOptions,\n      middleware: requestMiddleware,\n    })\n      .then((response) => {\n        if (responseMiddleware) {\n          responseMiddleware(response)\n        }\n        return response\n      })\n      .catch((error) => {\n        if (responseMiddleware) {\n          responseMiddleware(error)\n        }\n        throw error\n      })\n  }\n\n  /**\n   * Send a GraphQL document to the server.\n   */\n  async request<T, V extends Variables = Variables>(\n    document: RequestDocument | TypedDocumentNode<T, V>,\n    ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>\n  ): Promise<T>\n  async request<T, V extends Variables = Variables>(options: RequestOptions<V, T>): Promise<T>\n  async request<T, V extends Variables = Variables>(\n    documentOrOptions: RequestDocument | TypedDocumentNode<T, V> | RequestOptions<V>,\n    ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>\n  ): Promise<T> {\n    const [variables, requestHeaders] = variablesAndRequestHeaders\n    const requestOptions = parseRequestArgs(documentOrOptions, variables, requestHeaders)\n\n    const {\n      headers,\n      fetch = crossFetch,\n      method = `POST`,\n      requestMiddleware,\n      responseMiddleware,\n      ...fetchOptions\n    } = this.requestConfig\n    const { url } = this\n    if (requestOptions.signal !== undefined) {\n      fetchOptions.signal = requestOptions.signal\n    }\n\n    const { query, operationName } = resolveRequestDocument(requestOptions.document)\n\n    return makeRequest<T>({\n      url,\n      query,\n      variables: requestOptions.variables,\n      headers: {\n        ...resolveHeaders(callOrIdentity(headers)),\n        ...resolveHeaders(requestOptions.requestHeaders),\n      },\n      operationName,\n      fetch,\n      method,\n      fetchOptions,\n      middleware: requestMiddleware,\n    })\n      .then((response) => {\n        if (responseMiddleware) {\n          responseMiddleware(response)\n        }\n        return response.data\n      })\n      .catch((error) => {\n        if (responseMiddleware) {\n          responseMiddleware(error)\n        }\n        throw error\n      })\n  }\n\n  /**\n   * Send GraphQL documents in batch to the server.\n   */\n  // prettier-ignore\n  batchRequests<T extends BatchResult, V extends Variables = Variables>(documents: BatchRequestDocument<V>[], requestHeaders?: Dom.RequestInit['headers']): Promise<T>\n  // prettier-ignore\n  batchRequests<T extends BatchResult, V extends Variables = Variables>(options: BatchRequestsOptions<V>): Promise<T>\n  // prettier-ignore\n  batchRequests<T extends BatchResult, V extends Variables = Variables>(\n    documentsOrOptions: BatchRequestDocument<V>[] | BatchRequestsOptions<V>,\n    requestHeaders?: Dom.RequestInit['headers']\n  ): Promise<T> {\n    const batchRequestOptions = parseBatchRequestArgs<V>(documentsOrOptions, requestHeaders)\n    const { headers, ...fetchOptions } = this.requestConfig\n\n    if (batchRequestOptions.signal !== undefined) {\n      fetchOptions.signal = batchRequestOptions.signal\n    }\n\n    const queries = batchRequestOptions.documents.map(\n      ({ document }) => resolveRequestDocument(document).query\n    )\n    const variables = batchRequestOptions.documents.map(({ variables }) => variables)\n\n    return makeRequest<T>({\n      url: this.url,\n      query: queries,\n      // @ts-expect-error TODO reconcile batch variables into system.\n      variables,\n      headers: {\n        ...resolveHeaders(callOrIdentity(headers)),\n        ...resolveHeaders(batchRequestOptions.requestHeaders),\n      },\n      operationName: undefined,\n      fetch: this.requestConfig.fetch ?? crossFetch,\n      method: this.requestConfig.method || `POST`,\n      fetchOptions,\n      middleware: this.requestConfig.requestMiddleware,\n    })\n      .then((response) => {\n        if (this.requestConfig.responseMiddleware) {\n          this.requestConfig.responseMiddleware(response)\n        }\n        return response.data\n      })\n      .catch((error) => {\n        if (this.requestConfig.responseMiddleware) {\n          this.requestConfig.responseMiddleware(error)\n        }\n        throw error\n      })\n  }\n\n  setHeaders(headers: Dom.RequestInit['headers']): GraphQLClient {\n    this.requestConfig.headers = headers\n    return this\n  }\n\n  /**\n   * Attach a header to the client. All subsequent requests will have this header.\n   */\n  setHeader(key: string, value: string): GraphQLClient {\n    const { headers } = this.requestConfig\n\n    if (headers) {\n      // todo what if headers is in nested array form... ?\n      //@ts-ignore\n      headers[key] = value\n    } else {\n      this.requestConfig.headers = { [key]: value }\n    }\n\n    return this\n  }\n\n  /**\n   * Change the client endpoint. All subsequent requests will send to this endpoint.\n   */\n  setEndpoint(value: string): GraphQLClient {\n    this.url = value\n    return this\n  }\n}\n\nconst makeRequest = async <T = unknown, V extends Variables = Variables>(params: {\n  url: string\n  query: string | string[]\n  variables?: V\n  headers?: Dom.RequestInit['headers']\n  operationName?: string\n  fetch: Fetch\n  method?: HTTPMethodInput\n  fetchOptions: Dom.RequestInit\n  middleware?: RequestMiddleware<V>\n}): Promise<Response<T>> => {\n  const { query, variables, fetchOptions } = params\n  const fetcher = createHttpMethodFetcher(uppercase(params.method ?? `post`))\n  const isBatchingQuery = Array.isArray(params.query)\n  const response = await fetcher(params)\n  const result = await getResult(response, fetchOptions.jsonSerializer ?? defaultJsonSerializer)\n\n  const successfullyReceivedData = Array.isArray(result)\n    ? !result.some(({ data }) => !data)\n    : Boolean(result.data)\n\n  const successfullyPassedErrorPolicy =\n    Array.isArray(result) ||\n    !result.errors ||\n    (Array.isArray(result.errors) && !result.errors.length) ||\n    fetchOptions.errorPolicy === `all` ||\n    fetchOptions.errorPolicy === `ignore`\n\n  if (response.ok && successfullyPassedErrorPolicy && successfullyReceivedData) {\n    // @ts-expect-error TODO fixme\n    const { errors, ...rest } = Array.isArray(result) ? result : result\n    const data = fetchOptions.errorPolicy === `ignore` ? rest : result\n    const dataEnvelope = isBatchingQuery ? { data } : data\n\n    // @ts-expect-error TODO\n    return {\n      ...dataEnvelope,\n      headers: response.headers,\n      status: response.status,\n    }\n  } else {\n    const errorResult =\n      typeof result === `string`\n        ? {\n            error: result,\n          }\n        : result\n    throw new ClientError(\n      // @ts-expect-error TODO\n      { ...errorResult, status: response.status, headers: response.headers },\n      { query, variables }\n    )\n  }\n}\n\n// prettier-ignore\ninterface RawRequestMethod {\n  <T, V extends Variables = Variables>(query: string, variables?: V, requestHeaders?: Dom.RequestInit['headers']): Promise<Response<T>>\n  <T, V extends Variables = Variables>(options: RawRequestOptions<V>): Promise<Response<T>>\n}\n\n// prettier-ignore\ntype RawRequestMethodArgs<V extends Variables> =\n  | [query: string, variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n  | [RawRequestOptions<V>]\n\n// prettier-ignore\ninterface RawRequest {\n  <T, V extends Variables = Variables>(url: string, query: string, ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>): Promise<Response<T>>\n  <T, V extends Variables = Variables>(options: RawRequestExtendedOptions<V>): Promise<Response<T>>\n}\n\n// prettier-ignore\ntype RawRequestArgs<V extends Variables> = \n  | [options: RawRequestExtendedOptions<V>, query?: string, ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>]\n  | [url: string,                           query?: string, ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>]\n\n/**\n * Send a GraphQL Query to the GraphQL server for execution.\n */\nexport const rawRequest: RawRequest = async <T, V extends Variables>(\n  ...args: RawRequestArgs<V>\n): Promise<Response<T>> => {\n  const [urlOrOptions, query, ...variablesAndRequestHeaders] = args\n  const requestOptions = parseRawRequestExtendedArgs<V>(urlOrOptions, query, ...variablesAndRequestHeaders)\n  const client = new GraphQLClient(requestOptions.url)\n  return client.rawRequest<T, V>({\n    ...requestOptions,\n  })\n}\n\n/**\n * Send a GraphQL Document to the GraphQL server for execution.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\nexport async function request<T, V extends Variables = Variables>(\n  url: string,\n  // @ts-ignore\n  document: RequestDocument | TypedDocumentNode<T, V>,\n  ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>\n): Promise<T>\nexport async function request<T, V extends Variables = Variables>(\n  options: RequestExtendedOptions<V, T>\n): Promise<T>\nexport async function request<T, V extends Variables = Variables>(\n  urlOrOptions: string | RequestExtendedOptions<V, T>,\n  // @ts-ignore\n  document?: RequestDocument | TypedDocumentNode<T, V>,\n  ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>\n): Promise<T> {\n  // @ts-ignore\n  const requestOptions = parseRequestExtendedArgs<V>(urlOrOptions, document, ...variablesAndRequestHeaders)\n  const client = new GraphQLClient(requestOptions.url)\n  return client.request<T, V>({\n    ...requestOptions,\n  })\n}\n\n/**\n * Send a batch of GraphQL Document to the GraphQL server for execution.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await batchRequests('https://foo.bar/graphql', [\n * {\n *  query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * },\n * {\n *   query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * }])\n *\n * // You can also pass a GraphQL DocumentNode as query. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])\n * ```\n */\nexport const batchRequests: BatchRequests = async (...args: BatchRequestsArgs) => {\n  const params = parseBatchRequestsArgsExtended(args)\n  const client = new GraphQLClient(params.url)\n  return client.batchRequests(params)\n}\n\ninterface Result<Data extends object = object> {\n  data: Data\n}\n\ntype BatchResult = [Result, ...Result[]]\n\n// prettier-ignore\ninterface BatchRequests {\n  <T extends BatchResult, V extends Variables = Variables>(url: string, documents: BatchRequestDocument<V>[], requestHeaders?: Dom.RequestInit['headers']): Promise<T>\n  <T extends BatchResult, V extends Variables = Variables>(options: BatchRequestsExtendedOptions<V>): Promise<T>\n}\n\ntype BatchRequestsArgs =\n  | [url: string, documents: BatchRequestDocument[], requestHeaders?: Dom.RequestInit['headers']]\n  | [options: BatchRequestsExtendedOptions]\n\nconst parseBatchRequestsArgsExtended = (args: BatchRequestsArgs): BatchRequestsExtendedOptions => {\n  if (args.length === 1) {\n    return args[0]\n  } else {\n    return {\n      url: args[0],\n      documents: args[1],\n      requestHeaders: args[2],\n      signal: undefined,\n    }\n  }\n}\n\nexport default request\n\nconst getResult = async (\n  response: Dom.Response,\n  jsonSerializer: Dom.JsonSerializer\n): Promise<\n  | { data: object; errors: undefined }[]\n  | { data: object; errors: undefined }\n  | { data: undefined; errors: object }\n  | { data: undefined; errors: object[] }\n> => {\n  let contentType: string | undefined\n\n  response.headers.forEach((value, key) => {\n    if (key.toLowerCase() === `content-type`) {\n      contentType = value\n    }\n  })\n\n  if (\n    contentType &&\n    (contentType.toLowerCase().startsWith(`application/json`) ||\n      contentType.toLowerCase().startsWith(`application/graphql+json`) ||\n      contentType.toLowerCase().startsWith(`application/graphql-response+json`))\n  ) {\n    return jsonSerializer.parse(await response.text()) as any\n  } else {\n    return response.text() as any\n  }\n}\n\nconst callOrIdentity = <T>(value: MaybeFunction<T>) => {\n  return typeof value === `function` ? (value as () => T)() : value\n}\n\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nexport const gql = (chunks: TemplateStringsArray, ...variables: any[]): string => {\n  return chunks.reduce(\n    (accumulator, chunk, index) => `${accumulator}${chunk}${index in variables ? variables[index] : ``}`,\n    ``\n  )\n}\n\nexport { GraphQLWebSocketClient } from './graphql-ws.js'\nexport { resolveRequestDocument } from './resolveRequestDocument.js'\n", "import { resolveRequestDocument } from './resolveRequestDocument.js'\nimport type * as Dom from './types.dom.js'\nimport type { RequestDocument, Variables } from './types.js'\nimport { ClientError } from './types.js'\n// import type WebSocket from 'ws'\n\nconst CONNECTION_INIT = `connection_init`\nconst CONNECTION_ACK = `connection_ack`\nconst PING = `ping`\nconst PONG = `pong`\nconst SUBSCRIBE = `subscribe`\nconst NEXT = `next`\nconst ERROR = `error`\nconst COMPLETE = `complete`\n\ntype MessagePayload = { [key: string]: any }\n\ntype SubscribePayload<V extends Variables = Variables, E = any> = {\n  operationName?: string | null\n  query: string\n  variables?: V\n  extensions?: E\n}\n\nclass GraphQLWebSocketMessage<A = MessagePayload> {\n  private _type: string\n  private _id?: string\n  private _payload?: A\n\n  public get type(): string {\n    return this._type\n  }\n  public get id(): string | undefined {\n    return this._id\n  }\n  public get payload(): A | undefined {\n    return this._payload\n  }\n\n  constructor(type: string, payload?: A, id?: string) {\n    this._type = type\n    this._payload = payload\n    this._id = id\n  }\n\n  public get text(): string {\n    const result: any = { type: this.type }\n    if (this.id != null && this.id != undefined) result.id = this.id\n    if (this.payload != null && this.payload != undefined) result.payload = this.payload\n    return JSON.stringify(result)\n  }\n\n  static parse<A>(data: string, f: (payload: any) => A): GraphQLWebSocketMessage<A> {\n    const { type, payload, id }: { type: string; payload: any; id: string } = JSON.parse(data)\n    return new GraphQLWebSocketMessage(type, f(payload), id)\n  }\n}\n\nexport type SocketHandler = {\n  onInit?: <T>() => Promise<T>\n  onAcknowledged?: <A>(payload?: A) => Promise<void>\n  onPing?: <In, Out>(payload: In) => Promise<Out>\n  onPong?: <T>(payload: T) => any\n  onClose?: () => any\n}\n\nexport type UnsubscribeCallback = () => void\n\nexport interface GraphQLSubscriber<T, E = unknown> {\n  next?(data: T, extensions?: E): void\n  error?(errorValue: ClientError): void\n  complete?(): void\n}\n\ntype SubscriptionRecord = {\n  subscriber: GraphQLSubscriber<unknown, unknown>\n  query: string\n  variables?: Variables\n}\n\ntype SocketState = {\n  acknowledged: boolean\n  lastRequestId: number\n  subscriptions: { [key: string]: SubscriptionRecord }\n}\n\nexport class GraphQLWebSocketClient {\n  static PROTOCOL = `graphql-transport-ws`\n\n  private socket: WebSocket\n  private socketState: SocketState = { acknowledged: false, lastRequestId: 0, subscriptions: {} }\n\n  constructor(socket: WebSocket, { onInit, onAcknowledged, onPing, onPong }: SocketHandler) {\n    this.socket = socket\n\n    socket.onopen = async (e) => {\n      this.socketState.acknowledged = false\n      this.socketState.subscriptions = {}\n      socket.send(ConnectionInit(onInit ? await onInit() : null).text)\n    }\n\n    socket.onclose = (e) => {\n      this.socketState.acknowledged = false\n      this.socketState.subscriptions = {}\n    }\n\n    socket.onerror = (e) => {\n      console.error(e)\n    }\n\n    socket.onmessage = (e) => {\n      try {\n        const message = parseMessage(e.data)\n        switch (message.type) {\n          case CONNECTION_ACK: {\n            if (this.socketState.acknowledged) {\n              console.warn(`Duplicate CONNECTION_ACK message ignored`)\n            } else {\n              this.socketState.acknowledged = true\n              if (onAcknowledged) onAcknowledged(message.payload)\n            }\n            return\n          }\n          case PING: {\n            if (onPing) onPing(message.payload).then((r) => socket.send(Pong(r).text))\n            else socket.send(Pong(null).text)\n            return\n          }\n          case PONG: {\n            if (onPong) onPong(message.payload)\n            return\n          }\n        }\n\n        if (!this.socketState.acknowledged) {\n          // Web-socket connection not acknowledged\n          return\n        }\n\n        if (message.id === undefined || message.id === null || !this.socketState.subscriptions[message.id]) {\n          // No subscription identifer or subscription indentifier is not found\n          return\n        }\n        const { query, variables, subscriber } = this.socketState.subscriptions[message.id]!\n\n        switch (message.type) {\n          case NEXT: {\n            if (!message.payload.errors && message.payload.data) {\n              subscriber.next && subscriber.next(message.payload.data)\n            }\n            if (message.payload.errors) {\n              subscriber.error &&\n                subscriber.error(new ClientError({ ...message.payload, status: 200 }, { query, variables }))\n            } else {\n            }\n            return\n          }\n\n          case ERROR: {\n            subscriber.error &&\n              subscriber.error(\n                new ClientError({ errors: message.payload, status: 200 }, { query, variables })\n              )\n            return\n          }\n\n          case COMPLETE: {\n            subscriber.complete && subscriber.complete()\n            delete this.socketState.subscriptions[message.id]\n            return\n          }\n        }\n      } catch (e) {\n        // Unexpected errors while handling graphql-ws message\n        console.error(e)\n        socket.close(1006)\n      }\n      socket.close(4400, `Unknown graphql-ws message.`)\n    }\n  }\n\n  private makeSubscribe<T, V extends Variables, E>(\n    query: string,\n    operationName: string | undefined,\n    subscriber: GraphQLSubscriber<T, E>,\n    variables?: V\n  ): UnsubscribeCallback {\n    const subscriptionId = (this.socketState.lastRequestId++).toString()\n    this.socketState.subscriptions[subscriptionId] = { query, variables, subscriber }\n    this.socket.send(Subscribe(subscriptionId, { query, operationName, variables }).text)\n    return () => {\n      this.socket.send(Complete(subscriptionId).text)\n      delete this.socketState.subscriptions[subscriptionId]\n    }\n  }\n\n  rawRequest<T = any, V extends Variables = Variables, E = any>(\n    query: string,\n    variables?: V\n  ): Promise<{ data: T; extensions?: E }> {\n    return new Promise<{ data: T; extensions?: E; headers?: Dom.Headers; status?: number }>(\n      (resolve, reject) => {\n        let result: { data: T; extensions?: E }\n        this.rawSubscribe(\n          query,\n          {\n            next: (data: T, extensions: E) => (result = { data, extensions }),\n            error: reject,\n            complete: () => resolve(result),\n          },\n          variables\n        )\n      }\n    )\n  }\n\n  request<T = any, V extends Variables = Variables>(document: RequestDocument, variables?: V): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      let result: T\n      this.subscribe(\n        document,\n        {\n          next: (data: T) => (result = data),\n          error: reject,\n          complete: () => resolve(result),\n        },\n        variables\n      )\n    })\n  }\n\n  subscribe<T = any, V extends Variables = Variables, E = any>(\n    document: RequestDocument,\n    subscriber: GraphQLSubscriber<T, E>,\n    variables?: V\n  ): UnsubscribeCallback {\n    const { query, operationName } = resolveRequestDocument(document)\n    return this.makeSubscribe(query, operationName, subscriber, variables)\n  }\n\n  rawSubscribe<T = any, V extends Variables = Variables, E = any>(\n    query: string,\n    subscriber: GraphQLSubscriber<T, E>,\n    variables?: V\n  ): UnsubscribeCallback {\n    return this.makeSubscribe(query, undefined, subscriber, variables)\n  }\n\n  ping(payload: Variables) {\n    this.socket.send(Ping(payload).text)\n  }\n\n  close() {\n    this.socket.close(1000)\n  }\n}\n\n// Helper functions\n\nfunction parseMessage<A = any>(data: string, f: (payload: any) => A = (a) => a): GraphQLWebSocketMessage<A> {\n  const m = GraphQLWebSocketMessage.parse<A>(data, f)\n  return m\n}\n\nfunction ConnectionInit<A>(payload?: A) {\n  return new GraphQLWebSocketMessage(CONNECTION_INIT, payload)\n}\n\nfunction Ping(payload: any) {\n  return new GraphQLWebSocketMessage(PING, payload, undefined)\n}\nfunction Pong(payload: any) {\n  return new GraphQLWebSocketMessage(PONG, payload, undefined)\n}\n\nfunction Subscribe(id: string, payload: SubscribePayload) {\n  return new GraphQLWebSocketMessage(SUBSCRIBE, payload, id)\n}\n\nfunction Complete(id: string) {\n  return new GraphQLWebSocketMessage(COMPLETE, undefined, id)\n}\n"],
  "mappings": "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",
  "names": ["_", "x", "OperationType", "Utils", "DefaultAppSyncMutationAdapter", "DefaultAppSyncQueryAdapter", "query", "DefaultMutationAdapter", "query", "DefaultQueryAdapter", "query", "DefaultSubscriptionAdapter", "Symbol", "Symbol", "Symbol", "Map", "Map", "Symbol", "i", "result", "global", "self", "exports", "Headers", "request", "import_camelcase", "import_pluralize", "query", "FormDataNode", "k", "query", "operationName", "request", "query", "e", "params_", "query", "crossFetch", "url", "variables", "getChildNodesField", "node", "_a", "_b", "getOperationFields", "documentNode", "fieldLines", "isInitialEnter", "depth", "isNestedField", "visit", "nodeToReturn", "isMutation", "generateSubscription", "client", "callback", "params", "meta", "type", "generatorMap", "generateCreatedSubscription", "generateUpdatedSubscription", "generateDeletedSubscription", "resource", "filters", "subscriptionType", "id", "ids", "generator", "operation", "query", "variables", "operationName", "onNext", "payload", "operatorMap", "operatorMapper", "operator", "value", "generateFilters", "result", "f", "filter", "set", "generateSorting", "sorters", "sorter", "generatePaging", "pagination", "gqlOperation", "singularResourceName", "camelcase", "singular", "queryVariables", "field", "dataProvider", "paging", "gqlQuery", "response", "pascalResource", "mutationOperation", "mutation", "gqlTag", "stringFields", "url", "method", "headers", "gqlMutation", "dataProvider_default", "liveProvider", "subscribeToResource", "action", "unsubscribes", "unsubscribe", "src_default"]
}
