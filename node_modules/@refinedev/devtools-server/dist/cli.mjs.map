{"version":3,"sources":["../src/index.ts","../src/serve-client.ts","../src/serve-ws.ts","../src/constants.ts","../src/reload-on-change.ts","../src/setup-server.ts","../src/create-db.ts","../src/serve-api.ts","../src/feed/get-feed.ts","../src/packages/get-installed-package-data.ts","../src/packages/get-installed-package-json-path.ts","../src/packages/get-packages-from-package-json.ts","../src/packages/get-changelog.ts","../src/packages/get-documentation.ts","../src/packages/get-all-packages.ts","../src/packages/get-available-packages.ts","../src/packages/update-package.ts","../src/packages/get-latest-package-data.ts","../src/project-id/get-project-id-from-package-json.ts","../src/project-id/set-project-id-to-package-json.ts","../src/project-id/set-project-id-to-refine-component.ts","../src/project-id/update-project-id.ts","../src/serve-proxy.ts","../src/serve-open-in-editor.ts","../src/cli.ts"],"sourcesContent":["import express from \"express\";\n\nimport { DevtoolsEvent, receive, send } from \"@refinedev/devtools-shared\";\n\nimport { serveClient } from \"./serve-client\";\nimport { serveWs } from \"./serve-ws\";\nimport { reloadOnChange } from \"./reload-on-change\";\nimport { setupServer } from \"./setup-server\";\nimport { type Activity, createDb } from \"./create-db\";\nimport { serveApi } from \"./serve-api\";\nimport { serveProxy } from \"./serve-proxy\";\nimport { serveOpenInEditor } from \"./serve-open-in-editor\";\n\ntype Options = {\n  projectPath?: string;\n  onError?: () => void;\n};\n\nexport const server = async ({\n  projectPath = process.cwd(),\n  onError = () => {\n    process.exit(1);\n  },\n}: Options = {}) => {\n  return new Promise((_, reject) => {\n    const app = express();\n    const server = setupServer(app, () => {\n      reject();\n      onError();\n    });\n    const ws = serveWs(server, () => {\n      reject();\n      onError();\n    });\n\n    const db = createDb();\n\n    ws.on(\"connection\", (client) => {\n      // Initialize development client\n      receive(client as any, DevtoolsEvent.DEVTOOLS_INIT, (data) => {\n        if (db.connectedApp) {\n          // send client the devtools client url if already connected\n          send(client as any, DevtoolsEvent.DEVTOOLS_ALREADY_CONNECTED, {\n            url: db.connectedApp,\n          });\n        } else {\n          db.connectedApp = data.url;\n          db.clientWs = client;\n\n          ws.clients.forEach((c) => {\n            send(c as any, DevtoolsEvent.DEVTOOLS_CONNECTED_APP, {\n              url: db.connectedApp,\n            });\n          });\n        }\n      });\n\n      receive(client as any, DevtoolsEvent.ACTIVITY, (data) => {\n        // match by identifier, if identifier is same, update data instead of pushing\n        const index = db.activities.findIndex(\n          (activity) => activity.identifier === data.identifier,\n        );\n\n        const record: Activity = {\n          ...data,\n          createdAt: Date.now(),\n          updatedAt: Date.now(),\n        };\n\n        if (index > -1) {\n          record.createdAt = db.activities[index].createdAt;\n\n          db.activities[index] = record;\n        } else {\n          db.activities.push(record);\n        }\n\n        ws.clients.forEach((c) => {\n          send(c as any, DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE, {\n            updatedActivities: [record],\n          });\n        });\n      });\n\n      receive(\n        client as any,\n        DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR,\n        ({ name }) => {\n          ws.clients.forEach((c) => {\n            send(c as any, DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION, {\n              name,\n            });\n          });\n        },\n      );\n\n      receive(\n        client as any,\n        DevtoolsEvent.DEVTOOLS_INVALIDATE_QUERY,\n        ({ queryKey }) => {\n          ws.clients.forEach((c) => {\n            send(c as any, DevtoolsEvent.DEVTOOLS_INVALIDATE_QUERY_ACTION, {\n              queryKey,\n            });\n          });\n        },\n      );\n\n      receive(client as any, DevtoolsEvent.DEVTOOLS_LOGIN_SUCCESS, () => {\n        ws.clients.forEach((c) => {\n          send(c as any, DevtoolsEvent.DEVTOOLS_RELOAD_AFTER_LOGIN, {});\n        });\n      });\n\n      // close connected app if client disconnects\n      client.on(\"close\", (_, reason) => {\n        if (__DEVELOPMENT__) {\n          console.log(\"Client disconnected\", ws.clients.size);\n        }\n\n        if (db.clientWs) {\n          if (!ws.clients.has(db.clientWs)) {\n            db.clientWs = null;\n            db.connectedApp = null;\n\n            db.activities = [];\n\n            ws.clients.forEach((c) => {\n              send(c as any, DevtoolsEvent.DEVTOOLS_DISCONNECTED_APP, {\n                url: db.connectedApp,\n              });\n            });\n          }\n        }\n      });\n\n      if (__DEVELOPMENT__) {\n        console.log(\"Client connected\", ws.clients.size);\n      }\n    });\n\n    reloadOnChange(ws);\n    serveClient(app);\n    serveApi(app, db);\n    serveProxy(app);\n    serveOpenInEditor(app, projectPath);\n\n    process.on(\"SIGTERM\", () => {\n      reject();\n    });\n  });\n};\n","import express from \"express\";\nimport path from \"path\";\n\nimport type { Express } from \"express\";\n\nexport const serveClient = (app: Express) => {\n  app.use(express.static(path.join(__dirname, \"client\")));\n\n  app.use((req, res, next) => {\n    if (req.path.startsWith(\"/api\")) {\n      return next();\n    }\n    if (req.path.startsWith(\"/open-in-editor\")) {\n      return next();\n    }\n    res.status(200).sendFile(path.join(`${__dirname}/client/index.html`));\n  });\n};\n","import WebSocket from \"ws\";\nimport { SERVER_PORT } from \"./constants\";\nimport { DevtoolsEvent, send } from \"@refinedev/devtools-shared\";\nimport { bold, cyanBright } from \"chalk\";\nimport type http from \"http\";\n\nexport const serveWs = (\n  server: http.Server<typeof http.IncomingMessage, typeof http.ServerResponse>,\n  onError: () => void,\n) => {\n  const ws = new WebSocket.Server({ server }).on(\"error\", (error: any) => {\n    if (error?.code === \"EADDRINUSE\") {\n      console.error(\n        `\\n${cyanBright.bold(\"\\u2717 \")}${bold(\n          \"Refine Devtools server\",\n        )} (websocket) failed to start. Port ${SERVER_PORT} is already in use.\\n`,\n      );\n    } else {\n      console.error(\n        `\\n${cyanBright.bold(\"\\u2717 \")}${bold(\"error from refine devtools\")}`,\n        error,\n      );\n    }\n    ws.close(() => {\n      if (__DEVELOPMENT__) {\n        console.log(\"Process terminated\");\n      }\n    });\n    onError();\n  });\n\n  ws.on(\"connection\", (client) => {\n    // send client the devtools client url\n    send(client as any, DevtoolsEvent.DEVTOOLS_HANDSHAKE, {\n      url: `http://localhost:${SERVER_PORT}`,\n    });\n\n    client.on(\"close\", () => {\n      client.terminate();\n    });\n  });\n\n  process.on(\"SIGTERM\", () => {\n    ws.close(() => {\n      if (__DEVELOPMENT__) {\n        console.log(\"Process terminated\");\n      }\n    });\n  });\n\n  return ws;\n};\n","export const DEFAULT_SERVER_PORT = 5001;\nexport const SERVER_PORT = DEFAULT_SERVER_PORT;\n\nexport const REFINE_API_URL = __DEVELOPMENT__\n  ? \"https://develop.cloud.refine.dev\"\n  : \"https://cloud2.refine.dev\";\n\nexport const FEED_MD_URL =\n  \"https://raw.githubusercontent.com/refinedev/refine/master/packages/devtools-server/FEED.md\";\n","import fs from \"fs\";\nimport path from \"path\";\nimport { debounce } from \"lodash\";\nimport { DevtoolsEvent, send } from \"@refinedev/devtools-shared\";\n\nimport type { Server } from \"ws\";\nimport { OPEN } from \"ws\";\n\nexport const reloadOnChange = __DEVELOPMENT__\n  ? (ws: Server) => {\n      const reloadEmitter = debounce(() => {\n        setTimeout(() => {\n          ws.clients.forEach((client) => {\n            if (client.readyState === OPEN) {\n              console.log(\"Reloading connected client...\");\n              send(client as any, DevtoolsEvent.RELOAD, {});\n            }\n          });\n        }, 800);\n      }, 1000);\n\n      const watcher = fs.watch(\n        path.resolve(__dirname, \"client\"),\n        { recursive: true },\n        reloadEmitter,\n      );\n\n      process.on(\"SIGTERM\", () => {\n        watcher.close();\n      });\n    }\n  : () => 0;\n","import type { Express } from \"express\";\nimport { SERVER_PORT } from \"./constants\";\nimport { bold, cyanBright } from \"chalk\";\nimport http from \"http\";\n\nexport const setupServer = (app: Express, onError: () => void) => {\n  const server = http.createServer(app);\n\n  server\n    .on(\"error\", (error: any) => {\n      if (error?.code === \"EADDRINUSE\") {\n        console.error(\n          `\\n${cyanBright.bold(\"\\u2717 \")}${bold(\n            \"Refine Devtools server\",\n          )} (http) failed to start. Port ${SERVER_PORT} is already in use.\\n`,\n        );\n      } else {\n        console.error(\n          `\\n${cyanBright.bold(\"\\u2717 \")}${bold(\n            \"error from Refine Devtools\",\n          )}`,\n          error,\n        );\n      }\n      server.close(() => {\n        if (__DEVELOPMENT__) {\n          console.log(\"Process terminated\");\n        }\n      });\n      onError();\n    })\n    .on(\"listening\", () => {\n      console.log(\n        `\\n${cyanBright.bold(\"\\u2713 \")}${bold(\n          \"Refine Devtools\",\n        )} is running at port ${cyanBright.bold(SERVER_PORT)}\\n`,\n      );\n    });\n\n  process.on(\"SIGTERM\", () => {\n    server.close(() => {\n      if (__DEVELOPMENT__) {\n        console.log(\"Process terminated\");\n      }\n    });\n  });\n\n  server.listen(SERVER_PORT, undefined, undefined, () => {\n    if (__DEVELOPMENT__) {\n      console.log(`Server started on PORT ${SERVER_PORT}`);\n    }\n  });\n\n  return server;\n};\n","import type {\n  DevtoolsEvent,\n  DevtoolsEventPayloads,\n} from \"@refinedev/devtools-shared\";\nimport type { WebSocket } from \"ws\";\n\nexport type Activity =\n  DevtoolsEventPayloads[DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE][\"updatedActivities\"][number];\n\nexport type Data = {\n  connectedApp: null | string;\n  clientWs: null | WebSocket;\n  devtoolsWsClients: WebSocket[];\n  appWsClients: WebSocket[];\n  activities: Activity[];\n  packages: string[];\n};\n\nconst defaultData: Data = {\n  connectedApp: null,\n  clientWs: null,\n  // connections\n  devtoolsWsClients: [],\n  appWsClients: [],\n  // data\n  activities: [],\n  packages: [],\n};\n\nexport const createDb = (): Data => {\n  return {\n    ...defaultData,\n  };\n};\n","import type { Express } from \"express\";\nimport { json } from \"express\";\nimport uniq from \"lodash-es/uniq.js\";\nimport type {\n  AvailablePackageType,\n  Feed,\n  PackageType,\n} from \"@refinedev/devtools-shared\";\n\nimport type { Data } from \"./create-db\";\nimport { getFeed } from \"./feed/get-feed\";\nimport { getAllPackages } from \"./packages/get-all-packages\";\nimport { getAvailablePackages } from \"./packages/get-available-packages\";\nimport { updatePackage } from \"./packages/update-package\";\nimport { getLatestPackageData } from \"./packages/get-latest-package-data\";\nimport { getProjectIdFromPackageJson } from \"./project-id/get-project-id-from-package-json\";\nimport { updateProjectId } from \"./project-id/update-project-id\";\n\nexport const serveApi = (app: Express, db: Data) => {\n  app.use(\"/api\", json());\n\n  app.get(\"/api/connected-app\", (_, res) => {\n    res.json({ url: db.connectedApp });\n  });\n\n  app.get(\"/api/activities\", (req, res) => {\n    const { offset = 0, limit = db.activities.length } = req.query;\n\n    res.setHeader(\"x-total-count\", db.activities.length);\n\n    res.json({\n      data: db.activities.slice(Number(offset), Number(limit)),\n    });\n  });\n\n  app.get(\"/api/activities/reset\", (_, res) => {\n    db.activities = [];\n    res.json({ success: true });\n  });\n\n  app.get(\"/api/unique-trace-items\", (req, res) => {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\n      \"Access-Control-Allow-Headers\",\n      \"Origin, X-Requested-With, Content-Type, Accept\",\n    );\n\n    const traceItems = db.activities.flatMap(\n      (activity) =>\n        activity.trace?.map((t) => t.function).filter(Boolean) ?? [],\n    ) as string[];\n    const uniqueTraceItems = uniq(traceItems);\n\n    res.setHeader(\"x-total-count\", uniqueTraceItems.length);\n\n    res.json({ data: uniqueTraceItems });\n  });\n\n  let cachedInstalledPackages: PackageType[] | null = null;\n  app.get(\"/api/installed-packages\", async (req, res) => {\n    const { force } = req.query ?? {};\n\n    if (!cachedInstalledPackages || force) {\n      cachedInstalledPackages = await getAllPackages();\n    }\n\n    res.header(\"x-total-count\", `${cachedInstalledPackages.length}`);\n\n    res.json({ data: cachedInstalledPackages });\n  });\n\n  let cachedAvailablePackages: AvailablePackageType[] | null = null;\n  app.get(\"/api/available-packages\", async (_, res) => {\n    if (!cachedAvailablePackages) {\n      cachedAvailablePackages = await getAvailablePackages();\n    }\n\n    res.header(\"x-total-count\", `${cachedAvailablePackages.length}`);\n\n    res.json({ data: cachedAvailablePackages });\n  });\n\n  const cachedLatestPackages = new Map<string, any>();\n  app.get(\"/api/packages/:packageName/latest\", async (req, res) => {\n    const { packageName } = req.params ?? {};\n\n    if (!packageName) {\n      res.status(400).json({ error: \"Package name is required\" });\n      return;\n    }\n\n    if (!cachedLatestPackages.has(packageName)) {\n      const latest = await getLatestPackageData(packageName);\n      cachedLatestPackages.set(packageName, latest);\n    }\n\n    return res.json({ data: cachedLatestPackages.get(packageName) });\n  });\n\n  app.post(\"/api/packages/install\", async (req, res) => {\n    const { packages } = req.body ?? {};\n\n    if (packages?.length === 0) {\n      res.status(400).json({ error: \"Package name is required\" });\n      return;\n    }\n\n    const success = await updatePackage(packages as string[]);\n\n    if (success) {\n      cachedInstalledPackages = null;\n      cachedAvailablePackages = null;\n      res.status(200).json({ success: true });\n    } else {\n      res.status(400).json({\n        success: false,\n        error: \"Failed to update package\",\n      });\n    }\n  });\n\n  let cachedFeed: Feed | null = null;\n  app.get(\"/api/feed\", async (req, res) => {\n    if (!cachedFeed) {\n      cachedFeed = await getFeed();\n    }\n\n    res.header(\"x-total-count\", `${cachedFeed.length}`);\n\n    res.json({ data: cachedFeed });\n  });\n\n  app.get(\"/api/project-id/status\", async (_, res) => {\n    const projectId = await getProjectIdFromPackageJson();\n\n    if (projectId) {\n      res.status(200).json({ projectId });\n      return;\n    }\n    if (projectId === false) {\n      res.status(404).json({ projectId: null });\n      return;\n    }\n    res.status(500).json({ projectId: null });\n    return;\n  });\n\n  app.post(\"/api/project-id/update\", async (req, res) => {\n    const { projectId } = req.body ?? {};\n\n    if (!projectId) {\n      res.status(400).json({ error: \"Project ID is required\" });\n      return;\n    }\n\n    const success = await updateProjectId(projectId);\n\n    if (success) {\n      res.status(200).json({ success: true });\n      return;\n    }\n    res.status(500).json({\n      success: false,\n      error: \"Failed to update project ID\",\n    });\n    return;\n  });\n};\n","import fetch from \"node-fetch\";\nimport matter from \"gray-matter\";\nimport { marked } from \"marked\";\nimport sanitizeHtml from \"sanitize-html\";\n\nimport type { Feed, FeedSection } from \"@refinedev/devtools-shared\";\n\nimport { FEED_MD_URL } from \"src/constants\";\n\nconst splitSections = (feed: string) => {\n  const sections = feed.split(\"---section\");\n\n  return sections.slice(1).map((section) => `---section${section}`);\n};\n\nconst contentToHtml = (content: string) => {\n  const renderer = new marked.Renderer();\n  renderer.link = function (...args) {\n    const out = marked.Renderer.prototype.link.apply(this, args);\n    return out.replace(/^<a/, '<a target=\"_blank\" rel=\"noopener noreferrer\"');\n  };\n\n  const html = marked(content, {\n    renderer,\n  });\n\n  return sanitizeHtml(html, {\n    allowedTags: sanitizeHtml.defaults.allowedTags.concat([\"img\"]),\n    allowedAttributes: {\n      ...sanitizeHtml.defaults.allowedAttributes,\n      img: [\"src\"],\n    },\n  });\n};\n\nconst parseSection = (section: string): FeedSection => {\n  const parsed = matter(section.replace(\"---section\", \"---\"));\n\n  return {\n    ...parsed.data,\n    content: contentToHtml(parsed.content),\n  } as FeedSection;\n};\n\nconst fetchFeed = async () => {\n  try {\n    const response = await fetch(FEED_MD_URL);\n\n    return response.text();\n  } catch (_) {\n    return \"\";\n  }\n};\n\nexport const getFeed = async (): Promise<Feed> => {\n  try {\n    const rawContent = await fetchFeed();\n    const rawSections = splitSections(rawContent);\n    const sections = rawSections.map(parseSection);\n\n    return sections;\n  } catch (e) {\n    return [];\n  }\n};\n","import fs from \"fs\";\nimport { getInstalledPackageJSONPath } from \"./get-installed-package-json-path\";\n\nexport const getInstalledPackageData = async (packageName: string) => {\n  try {\n    const packagePath = await getInstalledPackageJSONPath(packageName);\n\n    if (!packagePath) {\n      return null;\n    }\n\n    const parsed = JSON.parse(\n      fs.readFileSync(packagePath, { encoding: \"utf-8\" }),\n    );\n\n    return {\n      name: parsed.name,\n      version: parsed.version,\n      description: parsed.description,\n    };\n  } catch (e) {\n    return null;\n  }\n};\n","import path from \"path\";\nimport globby from \"globby\";\n\nexport const getInstalledPackageJSONPath = async (packageName: string) => {\n  try {\n    const filesFromGlobbySearch = await globby(\n      `node_modules/${packageName}/package.json`,\n      {\n        onlyFiles: true,\n      },\n    );\n\n    let fileFromModule: string | null = null;\n\n    try {\n      const pkgJsonPath = require.resolve(\n        path.join(packageName, \"package.json\"),\n      );\n      if (pkgJsonPath) {\n        fileFromModule = pkgJsonPath;\n      }\n    } catch (err) {\n      //\n    }\n\n    return (\n      [\n        ...filesFromGlobbySearch,\n        ...(fileFromModule ? [fileFromModule] : []),\n      ][0] ?? null\n    );\n  } catch (err) {\n    return null;\n  }\n};\n","import path from \"path\";\nimport { readJSON } from \"fs-extra\";\n\nexport const getPackagesFromPackageJSON = async (\n  projectPath: string = process.cwd(),\n) => {\n  const packageJson = await readJSON(path.join(projectPath, \"package.json\"), {\n    encoding: \"utf-8\",\n  });\n\n  const refinePackages = Object.keys(packageJson.dependencies).filter(\n    (packageName) => packageName.startsWith(\"@refinedev/\"),\n  );\n\n  return refinePackages;\n};\n","export const getChangelog = (packageName: string) => {\n  return packageName.replace(\"@refinedev/\", \"https://c.refine.dev/\");\n};\n","export const getDocumentation = (packageName: string) => {\n  return \"https://refine.dev/docs/api-reference/general-concepts/\";\n};\n","import type { PackageType } from \"@refinedev/devtools-shared\";\nimport { getInstalledPackageData } from \"./get-installed-package-data\";\nimport { getPackagesFromPackageJSON } from \"./get-packages-from-package-json\";\nimport { getChangelog } from \"./get-changelog\";\nimport { getDocumentation } from \"./get-documentation\";\n\nexport const getAllPackages = async (projectPath?: string) => {\n  try {\n    const refinePackages = await getPackagesFromPackageJSON(projectPath);\n    const installedVersions = await Promise.all(\n      refinePackages.map(async (packageName) => {\n        const currentInfo = await getInstalledPackageData(packageName);\n\n        return {\n          name: packageName,\n          currentVersion: currentInfo?.version,\n          description: currentInfo?.description,\n          changelog: getChangelog(packageName),\n          documentation: getDocumentation(packageName),\n        } as PackageType;\n      }),\n    );\n\n    return installedVersions;\n  } catch (error) {\n    return [];\n  }\n};\n","import type { AvailablePackageType } from \"@refinedev/devtools-shared\";\nimport dedent from \"dedent\";\nimport { getPackagesFromPackageJSON } from \"./get-packages-from-package-json\";\n\nexport const AVAILABLE_PACKAGES: AvailablePackageType[] = [\n  {\n    name: \"@refinedev/ably\",\n    description: \"Ably integration for Refine\",\n    install: \"npm install @refinedev/ably\",\n    usage: dedent(\n      `\n            import { liveProvider, Ably } from \"@refinedev/ably\";\n\n            export const ablyClient = new Ably.Realtime(\"YOUR_API_TOKEN\");\n\n            const App = () => {\n                return (\n                    <Refine\n                        liveProvider={liveProvider(ablyClient)}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n        `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/airtable\",\n    description: \"Airtable integration for Refine\",\n    install: \"npm install @refinedev/airtable\",\n    usage: dedent(\n      `\n            import dataProvider from \"@refinedev/airtable\";\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(\"API_KEY\", \"BASE_ID\")}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/antd\",\n    description: \"Ant Design integration for Refine\",\n    install: \"npm install @refinedev/antd antd\",\n    usage: dedent(\n      `\n            import { ThemedLayoutV2 } from \"@refinedev/antd\";\n\n            import \"@refinedev/antd/dist/reset.css\";\n\n            const App = () => {\n                return (\n                    <Refine\n                        /* ... */\n                    >\n                        <ThemedLayoutV2>\n                            {/* ... */}\n                        </ThemedLayoutV2>\n                    </Refine>\n                );\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/appwrite\",\n    description: \"Appwrite integration for Refine\",\n    install: \"npm install @refinedev/appwrite\",\n    usage: dedent(\n      `\n            import { dataProvider, liveProvider, Account, Appwrite, Storage } from \"@refinedev/appwrite\";\n\n            const appwriteClient = new Appwrite();\n            appwriteClient.setEndpoint(\"API_URL\").setProject(\"PROJECT_ID\");\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(appwriteClient, { databaseId: \"default\" })}\n                        liveProvider={liveProvider(appwriteClient, { databaseId: \"default\" })}\n                        /* ... */\n                    >\n                        <ThemedLayout>\n                            {/* ... */}\n                        </ThemedLayout>\n                    </Refine>\n                );\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/chakra-ui\",\n    description: \"Chakra UI integration for Refine\",\n    install:\n      \"npm install @refinedev/chakra-ui @chakra-ui/react @emotion/react @emotion/styled framer-motion @tabler/icons-react\",\n    usage: dedent(\n      `\n            import { ThemedLayoutV2 } from \"@refinedev/chakra-ui\";\n            import { ChakraProvider } from \"@chakra-ui/react\";\n\n            const App = () => {\n                return (\n                        <ChakraProvider>\n                        <Refine\n                            /* ... */\n                        >\n                            <ThemedLayoutV2>\n                                {/* ... */}\n                            </ThemedLayoutV2>\n                        </Refine>\n                    </ChakraProvider>\n                );\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/graphql\",\n    description: \"GraphQL integration for Refine\",\n    install: \"npm install @refinedev/graphql\",\n    usage: dedent(\n      `\n            import dataProvider, { GraphQLClient } from \"@refinedev/graphql\";\n\n            const client = new GraphQLClient(\"YOUR_API_URL\");\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(client)}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/hasura\",\n    description: \"GraphQL integration for Refine\",\n    install: \"npm install @refinedev/hasura\",\n    usage: dedent(\n      `\n            import dataProvider, { GraphQLClient } from \"@refinedev/hasura\";\n\n            const client = new GraphQLClient(\"HASURA_API_URL\", {\n                headers: {\n                    \"x-hasura-role\": \"public\",\n                },\n            });\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(client)}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/inferencer\",\n    description: \"Auto generate views based on your APIs with Refine\",\n    install: \"npm install @refinedev/inferencer\",\n    usage: dedent(\n      `\n        import { AntdInferencer } from \"@refinedev/inferencer/antd\";\n\n        const App = () => {\n            return (\n                <Refine\n                    /* ... */\n                >\n                    <AntdInferencer action=\"list\" resource=\"posts\" />\n                </Refine>\n            );\n        };\n        `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/kbar\",\n    description: \"Command palette integration with kbar for Refine\",\n    install: \"npm install @refinedev/kbar\",\n    usage: dedent(\n      `\n            import { RefineKbar, RefineKbarProvider } from \"@refinedev/kbar\";\n\n            const App = () => {\n                return (\n                    <RefineKbarProvider>\n                        <Refine\n                            /* ... */\n                        >\n                            <RefineKbar />\n                        </Refine>\n                    </RefineKbarProvider>\n                );\n            };\n        `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/mantine\",\n    description: \"Mantine UI integration for Refine\",\n    install:\n      \"npm install @refinedev/mantine @refinedev/react-table @mantine/core @mantine/hooks @mantine/form @mantine/notifications @emotion/react @tabler/icons-react\",\n    usage: dedent(\n      `\n            import { ThemedLayoutV2 } from \"@refinedev/mantine\";\n            import { MantineProvider } from \"@mantine/core\";\n\n            const App = () => {\n                return (\n                    <MantineProvider>\n                        <Refine\n                            /* ... */\n                        >\n                            <ThemedLayoutV2>\n                                {/* ... */}\n                            </ThemedLayoutV2>\n                        </Refine>\n                    </MantineProvider>\n                );\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/medusa\",\n    description: \"Medusa store integration for Refine\",\n    install: \"npm install @refinedev/medusa\",\n    usage: dedent(\n      `\n            import dataProvider, { authProvider } from \"@refinedev/medusa\";\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(\"API_URL\")}\n                        authProvider={authProvider(\"API_URL\")}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/mui\",\n    description: \"Material UI integration for Refine\",\n    install:\n      \"npm install @refinedev/mui @refinedev/react-hook-form @mui/material @mui/lab @mui/x-data-grid @emotion/react @emotion/styled react-hook-form\",\n    usage: dedent(\n      `\n            import { ThemedLayoutV2 } from \"@refinedev/mui\";\n\n            import CssBaseline from \"@mui/material/CssBaseline\";\n            import GlobalStyles from \"@mui/material/GlobalStyles\";\n            import { ThemeProvider } from \"@mui/material/styles\";\n\n            const App = () => {\n                return (\n                    <ThemeProvider>\n                        <CssBaseline />\n                        <GlobalStyles styles={{ html: { WebkitFontSmoothing: \"auto\" } }} />\n                        <Refine\n                            /* ... */\n                        >\n                            <ThemedLayoutV2>\n                                {/* ... */}\n                            </ThemedLayoutV2>\n                        </Refine>\n                    </ThemeProvider>\n                );\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/nestjs-query\",\n    description: \"NestJS Query data provider integration for Refine\",\n    install: \"npm install @refinedev/nestjs-query graphql-ws\",\n    usage: dedent(\n      `\n            import dataProvider, {\n                GraphQLClient,\n                liveProvider,\n            } from \"@refinedev/nestjs-query\";\n\n            import { createClient } from \"graphql-ws\";\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(new GraphQLClient( \"API_URL\" ))}\n                        liveProvider={liveProvider(createClient({ url: \"WS_URL\" }))}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/nestjsx-crud\",\n    description: \"NestJSX CRUD data provider integration for Refine\",\n    install: \"npm install @refinedev/nestjsx-crud\",\n    usage: dedent(\n      `\n            import dataProvider from \"@refinedev/nestjsx-crud\";\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(\"API_URL\")}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/react-hook-form\",\n    description: \"React Hook Form integration for Refine\",\n    install: \"npm install @refinedev/react-hook-form react-hook-form\",\n    usage: dedent(\n      `\n            import { useForm } from \"@refinedev/react-hook-form\";\n\n            const EditPost = () => {\n                const {\n                    register,\n                    handleSubmit,\n                    formState,\n                    refineCore,\n                } = useForm({\n                    refineCoreProps: {\n                        resource: \"posts\",\n                        id: \"1\",\n                    },\n                });\n\n                return /* ... */\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/react-table\",\n    description: \"Tanstack React Table integration for Refine\",\n    install: \"npm install @refinedev/react-table @tanstack/react-table\",\n    usage: dedent(\n      `\n            import { useTable } from \"@refinedev/react-table\";\n\n            import { ColumnDef, flexRender } from \"@tanstack/react-table\";\n\n            const EditPost = () => {\n                const columns = React.useMemo<ColumnDef<IPost>[]>(\n                    () => [\n                        {\n                            id: \"id\",\n                            header: \"ID\",\n                            accessorKey: \"id\",\n                        },\n                        {\n                            id: \"title\",\n                            header: \"Title\",\n                            accessorKey: \"title\",\n                            meta: {\n                                filterOperator: \"contains\",\n                            },\n                        },\n                ], []);\n\n                const tableInstance = useTable({\n                    columns,\n                    refineCoreProps: {\n                        resource: \"posts\",\n                    }\n                });\n\n                return /* ... */\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/simple-rest\",\n    description: \"Data provider integration for REST APIs with Refine\",\n    install: \"npm install @refinedev/simple-rest\",\n    usage: dedent(\n      `\n            import dataProvider from \"@refinedev/simple-rest\";\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(\"API_URL\")}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/supabase\",\n    description:\n      \"Data provider and live provider integrations for Supabase with Refine\",\n    install: \"npm install @refinedev/supabase\",\n    usage: dedent(\n      `\n            import { dataProvider, liveProvider, createClient } from \"@refinedev/supabase\";\n\n            const supabaseClient = createClient(\"SUPABASE_URL\", \"SUPABASE_KEY\");\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(supabaseClient)}\n                        liveProvider={liveProvider(supabaseClient)}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/strapi\",\n    description: \"Strapi integration of Refine\",\n    install: \"npm install @refinedev/strapi axios\",\n    usage: dedent(\n      `\n            import { DataProvider, AuthHelper } from \"@refinedev/strapi\";\n\n            const axiosInstance = axios.create();\n            const strapiAuthHelper = AuthHelper(\"API_URL\");\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={DataProvider(\"API_URL\", axiosInstance)}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n    ),\n  },\n  {\n    name: \"@refinedev/strapi-v4\",\n    description: \"StrapiV4 integration of Refine\",\n    install: \"npm install @refinedev/strapi-v4 axios\",\n    usage: dedent(\n      `\n            import { DataProvider, AuthHelper } from \"@refinedev/strapi-v4\";\n\n            const axiosInstance = axios.create();\n            const strapiAuthHelper = AuthHelper(\"API_URL\");\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={DataProvider(\"API_URL\", axiosInstance)}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n    ),\n  },\n];\n\nexport const getAvailablePackages = async (projectPath?: string) => {\n  const installedRefinePackages = await getPackagesFromPackageJSON(projectPath);\n\n  return AVAILABLE_PACKAGES.filter(\n    (p) => !installedRefinePackages.includes(p.name),\n  );\n};\n","import preferredPM from \"preferred-pm\";\nimport execa from \"execa\";\n\nexport const updatePackage = async (\n  packages: string[],\n  projectPath: string = process.cwd(),\n) => {\n  try {\n    const { name: pm } = (await preferredPM(projectPath)) ?? {\n      name: \"npm\",\n    };\n\n    const { failed } = await execa(pm ?? \"npm\", [\n      \"install\",\n      ...packages.map((p) => `${p}@latest`),\n    ]);\n\n    return !failed;\n  } catch (error) {\n    return false;\n  }\n};\n","import execa from \"execa\";\n\nexport const getLatestPackageData = async (\n  packageName: string,\n): Promise<{ name: string; version?: string }> => {\n  try {\n    const { stdout } = await execa(\"npm\", [\n      \"view\",\n      packageName,\n      \"name\",\n      \"version\",\n      \"--json\",\n    ]);\n    const parsed = JSON.parse(stdout);\n\n    return parsed;\n  } catch (e) {\n    return { name: packageName };\n  }\n};\n","import { readJSON } from \"fs-extra\";\nimport path from \"path\";\n\nexport const getProjectIdFromPackageJson = async (\n  projectPath = process.cwd(),\n) => {\n  try {\n    const packageJson = await readJSON(path.join(projectPath, \"package.json\"), {\n      encoding: \"utf-8\",\n    });\n\n    const projectId = packageJson?.refine?.projectId as string;\n\n    if (projectId) {\n      return projectId;\n    }\n\n    return false;\n  } catch (e) {\n    return null;\n  }\n};\n","import execa from \"execa\";\n\nexport const setProjectIdToPackageJson = async (\n  projectId: string,\n  projectPath = process.cwd(),\n) => {\n  try {\n    execa.sync(\"npm\", [\"pkg\", \"set\", `refine.projectId=${projectId}`], {\n      cwd: projectPath,\n    });\n    return true;\n  } catch (e) {\n    return null;\n  }\n};\n","import execa from \"execa\";\nimport path from \"path\";\n\nexport const setProjectIdToRefineComponent = async (\n  projectId: string,\n  projectPath = process.cwd(),\n) => {\n  try {\n    const jscodeshiftExecutable = require.resolve(\".bin/jscodeshift\");\n\n    const execution = execa.sync(\n      jscodeshiftExecutable,\n      [\n        \"./\",\n        \"--extensions=ts,tsx,js,jsx\",\n        \"--parser=tsx\",\n        `--transform=${path.resolve(\n          path.join(__dirname, \"..\", \"src\", \"project-id\", \"transform.ts\"),\n        )}`,\n        \"--ignore-pattern=**/.cache/**\",\n        \"--ignore-pattern=**/node_modules/**\",\n        \"--ignore-pattern=**/build/**\",\n        \"--ignore-pattern=**/dist/**\",\n        \"--ignore-pattern=**/.next/**\",\n        `--__projectId=${projectId}`,\n      ],\n      {\n        cwd: projectPath,\n        timeout: 1000 * 10,\n      },\n    );\n\n    if (execution.stderr) {\n      console.error(execution.stderr);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n  return;\n};\n","import { setProjectIdToPackageJson } from \"./set-project-id-to-package-json\";\nimport { setProjectIdToRefineComponent } from \"./set-project-id-to-refine-component\";\n\nexport const updateProjectId = async (\n  projectId: string,\n  projectPath = process.cwd(),\n) => {\n  try {\n    await Promise.all([\n      setProjectIdToPackageJson(projectId, projectPath),\n      setProjectIdToRefineComponent(projectId, projectPath),\n    ]);\n\n    return true;\n  } catch (_) {\n    return false;\n  }\n};\n","import { readJSON, writeJSON } from \"fs-extra\";\nimport { FrontendApi } from \"@ory/client\";\nimport { createProxyMiddleware, type Options } from \"http-proxy-middleware\";\nimport path from \"path\";\nimport { REFINE_API_URL, SERVER_PORT } from \"./constants\";\nimport { getProjectIdFromPackageJson } from \"./project-id/get-project-id-from-package-json\";\n\nimport type { Express, RequestHandler } from \"express\";\n\nlet currentProjectId: string | null | false = null;\nconst projectIdAppender: RequestHandler = async (req, res, next) => {\n  if (!currentProjectId) {\n    currentProjectId = await getProjectIdFromPackageJson();\n  }\n\n  if (currentProjectId) {\n    req.headers[\"x-project-id\"] = currentProjectId;\n  }\n\n  next();\n};\n\nconst restream: Options[\"onProxyReq\"] = (proxyReq, req) => {\n  if (req.body) {\n    const bodyData = JSON.stringify(req.body);\n    // incase if content-type is application/x-www-form-urlencoded -> we need to change to application/json\n    proxyReq.setHeader(\"Content-Type\", \"application/json\");\n    proxyReq.setHeader(\"Content-Length\", Buffer.byteLength(bodyData));\n    // stream the content\n    proxyReq.write(bodyData);\n  }\n};\n\nconst tokenize = async (token: string) => {\n  try {\n    const ORY_URL = `${REFINE_API_URL}/.auth`;\n\n    const ory = new FrontendApi({\n      isJsonMime: () => true,\n      basePath: ORY_URL,\n      baseOptions: {\n        withCredentials: true,\n      },\n    });\n\n    const { data } = await ory.toSession({\n      xSessionToken: token,\n      tokenizeAs: \"jwt_template_1\",\n    });\n\n    return data?.tokenized;\n  } catch (err) {\n    //\n  }\n\n  return undefined;\n};\n\nconst saveAuth = async (token?: string, jwt?: string) => {\n  try {\n    writeJSON(path.join(__dirname, \"..\", \".persist.json\"), {\n      token: token,\n      jwt: jwt,\n    });\n  } catch (error) {\n    //\n  }\n};\n\nconst loadAuth = async () => {\n  try {\n    const persist = await readJSON(path.join(__dirname, \"..\", \".persist.json\"));\n    return persist as { token?: string; jwt?: string };\n  } catch (error) {\n    //\n  }\n\n  return {\n    token: undefined,\n    jwt: undefined,\n  };\n};\n\nconst handleLogoutToken: (\n  token?: string,\n) => NonNullable<Options[\"onProxyReq\"]> = (token) => {\n  return (proxyReq, req) => {\n    if (req.url.includes(\"self-service/logout/api\")) {\n      const bodyData = JSON.stringify({\n        session_token: token,\n      });\n      proxyReq.setHeader(\"Content-Length\", Buffer.byteLength(bodyData));\n      // stream the content\n      proxyReq.write(bodyData);\n    }\n  };\n};\n\nconst handleSignInCallbacks: (\n  onToken: (token?: string, jwt?: string) => void,\n) => NonNullable<Options[\"onProxyRes\"]> = (onToken) => {\n  return (proxyRes, req, res) => {\n    let body = \"\";\n    proxyRes.on(\"data\", (chunk) => {\n      body += chunk;\n    });\n    proxyRes.on(\"end\", () => {\n      let sessionToken: string | undefined = undefined;\n      try {\n        const parsed = JSON.parse(body);\n        sessionToken = parsed.session_token;\n      } catch (err) {\n        //\n      }\n      if (!sessionToken) {\n        if (body?.includes?.(\"an+account+with+the+same+identifier\")) {\n          res.redirect(\n            \"/after-login?error=An+account+with+the+same+identifier+exists+already\",\n          );\n          return;\n        }\n        res.redirect(\"/after-login?error=Invalid-session-token\");\n        return;\n      }\n\n      // After grabbing the session_token, convert it to JWT, then redirect to /after-login\n      tokenize(sessionToken).then((tokenized) => {\n        onToken(sessionToken, tokenized ?? \"\");\n        res.redirect(\"/after-login\");\n      });\n    });\n  };\n};\n\nexport const serveProxy = async (app: Express) => {\n  let { token, jwt } = await loadAuth();\n\n  const authProxy = createProxyMiddleware({\n    target: REFINE_API_URL,\n    changeOrigin: true,\n    pathRewrite: { \"^/api/.auth\": \"/.auth\" },\n    cookieDomainRewrite: {\n      \"refine.dev\": \"localhost\",\n    },\n    logLevel: __DEVELOPMENT__ ? \"debug\" : \"silent\",\n    headers: {\n      \"auth-base-url-rewrite\": `http://localhost:${SERVER_PORT}/api/.auth`,\n    },\n    selfHandleResponse: true,\n    onProxyReq: (proxyReq, req, ...rest) => {\n      if (token) {\n        proxyReq.setHeader(\"X-Session-Token\", token ?? \"\");\n\n        handleLogoutToken(token)(proxyReq, req, ...rest);\n      }\n    },\n    onProxyRes: (proxyRes, req, res) => {\n      const newSetCookie = proxyRes.headers[\"set-cookie\"]?.map((cookie) =>\n        cookie\n          .replace(\"Domain=refine.dev;\", \"Domain=localhost;\")\n          .replace(\" HttpOnly; Secure; SameSite=Lax\", \"\"),\n      );\n      if (newSetCookie) proxyRes.headers[\"set-cookie\"] = newSetCookie;\n\n      if (req.url.includes(\"self-service/methods/oidc/callback\")) {\n        return handleSignInCallbacks((_token, _jwt) => {\n          token = _token;\n          jwt = _jwt;\n          saveAuth(token, jwt);\n        })(proxyRes, req, res);\n      }\n\n      if (proxyRes.statusCode === 401) {\n        res.writeHead(200, {\n          ...proxyRes.headers,\n          \"Access-Control-Expose-Headers\": `Refine-Is-Authenticated, ${proxyRes.headers[\"Access-Control-Expose-Headers\"]}`,\n        });\n      } else {\n        res.writeHead(proxyRes.statusCode || 500, proxyRes.headers);\n      }\n\n      proxyRes.pipe(res, { end: true });\n    },\n  });\n\n  app.use(\"/api/.auth\", authProxy);\n\n  const refineApiProxy = createProxyMiddleware({\n    target: REFINE_API_URL,\n    secure: false,\n    changeOrigin: true,\n    logLevel: __DEVELOPMENT__ ? \"debug\" : \"silent\",\n    pathRewrite: { \"^/api/.refine\": \"/.refine\" },\n    onProxyReq: (proxyReq, ...rest) => {\n      if (jwt) {\n        proxyReq.setHeader(\"Authorization\", `Bearer ${jwt}`);\n        proxyReq.removeHeader(\"cookie\");\n      }\n\n      restream(proxyReq, ...rest);\n    },\n  });\n\n  app.use(\"/api/.refine\", projectIdAppender, refineApiProxy);\n};\n","import type { Express } from \"express\";\nimport path from \"path\";\n\nexport const serveOpenInEditor = (app: Express, basePath: string) => {\n  app.get(\"/open-in-editor/*\", (req, res) => {\n    const { line, column } = req.query;\n\n    const filePath = req.path.replace(\"/open-in-editor\", \"\");\n\n    const vscodeUrl = `vscode://file/${path.join(basePath, filePath)}?${\n      line ? `line=${line}` : \"\"\n    }${column ? `&column=${column}` : \"\"}`;\n\n    res.redirect(vscodeUrl);\n  });\n};\n","#!/usr/bin/env node\nimport { server } from \"./index\";\n\nserver().catch(() => 0);\n"],"mappings":"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","names":["express","DevtoolsEvent","receive","send","express","path","serveClient","app","req","res","next","WebSocket","REFINE_API_URL","FEED_MD_URL","DevtoolsEvent","send","bold","cyanBright","serveWs","server","onError","ws","WebSocket","error","client","reloadOnChange","bold","cyanBright","http","setupServer","app","onError","server","error","defaultData","createDb","json","uniq","fetch","matter","marked","sanitizeHtml","splitSections","feed","section","contentToHtml","content","renderer","marked","args","html","sanitizeHtml","parseSection","parsed","matter","fetchFeed","fetch","FEED_MD_URL","getFeed","rawContent","fs","path","globby","getInstalledPackageJSONPath","packageName","filesFromGlobbySearch","globby","fileFromModule","pkgJsonPath","__require","path","getInstalledPackageData","packageName","packagePath","getInstalledPackageJSONPath","parsed","fs","path","readJSON","getPackagesFromPackageJSON","projectPath","packageJson","packageName","getChangelog","packageName","getDocumentation","packageName","getAllPackages","projectPath","refinePackages","getPackagesFromPackageJSON","packageName","currentInfo","getInstalledPackageData","getChangelog","getDocumentation","dedent","AVAILABLE_PACKAGES","dedent","getAvailablePackages","projectPath","installedRefinePackages","getPackagesFromPackageJSON","p","preferredPM","execa","updatePackage","packages","projectPath","pm","failed","p","execa","getLatestPackageData","packageName","stdout","readJSON","path","getProjectIdFromPackageJson","projectPath","_a","packageJson","projectId","execa","setProjectIdToPackageJson","projectId","projectPath","execa","path","setProjectIdToRefineComponent","projectId","projectPath","jscodeshiftExecutable","__require","execution","execa","path","error","updateProjectId","projectId","projectPath","setProjectIdToPackageJson","setProjectIdToRefineComponent","serveApi","app","db","json","_","res","req","offset","limit","traceItems","activity","_a","t","uniqueTraceItems","uniq","cachedInstalledPackages","force","getAllPackages","cachedAvailablePackages","getAvailablePackages","cachedLatestPackages","packageName","latest","getLatestPackageData","packages","updatePackage","cachedFeed","getFeed","projectId","getProjectIdFromPackageJson","updateProjectId","readJSON","writeJSON","FrontendApi","createProxyMiddleware","path","currentProjectId","projectIdAppender","req","res","next","getProjectIdFromPackageJson","restream","proxyReq","bodyData","tokenize","token","ORY_URL","REFINE_API_URL","ory","FrontendApi","data","saveAuth","jwt","writeJSON","path","loadAuth","readJSON","handleLogoutToken","handleSignInCallbacks","onToken","proxyRes","body","chunk","_a","sessionToken","tokenized","serveProxy","app","authProxy","createProxyMiddleware","rest","newSetCookie","cookie","_token","_jwt","refineApiProxy","path","serveOpenInEditor","app","basePath","req","res","line","column","filePath","vscodeUrl","server","projectPath","onError","_","reject","app","express","setupServer","ws","serveWs","db","createDb","client","receive","DevtoolsEvent","data","send","c","index","activity","record","name","queryKey","reason","reloadOnChange","serveClient","serveApi","serveProxy","serveOpenInEditor","server"]}