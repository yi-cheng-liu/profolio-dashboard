import {
  require_react
} from "./chunk-K3XTCCNO.js";
import {
  __toESM
} from "./chunk-GFT2G5UO.js";

// node_modules/@refinedev/devtools-shared/dist/index.mjs
var import_react = __toESM(require_react(), 1);
var T = ((t) => (t.RELOAD = "devtools:reload", t.DEVTOOLS_INIT = "devtools:init", t.DEVTOOLS_HANDSHAKE = "devtools:handshake", t.DEVTOOLS_ALREADY_CONNECTED = "devtools:already-connected", t.ACTIVITY = "devtools:send-activity", t.DEVTOOLS_ACTIVITY_UPDATE = "devtools:activity-update", t.DEVTOOLS_CONNECTED_APP = "devtools:connected-app", t.DEVTOOLS_DISCONNECTED_APP = "devtools:disconnected-app", t.DEVTOOLS_HIGHLIGHT_IN_MONITOR = "devtools:highlight-in-monitor", t.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION = "devtools:highlight-in-monitor-action", t.DEVTOOLS_LOGIN_SUCCESS = "devtools:login-success", t.DEVTOOLS_RELOAD_AFTER_LOGIN = "devtools:reload-after-login", t.DEVTOOLS_INVALIDATE_QUERY = "devtools:invalidate-query", t.DEVTOOLS_INVALIDATE_QUERY_ACTION = "devtools:invalidate-query-action", t))(T || {});
var v = { useCan: "access-control", useLog: "audit-log", useLogList: "audit-log", useCreate: "data", useCreateMany: "data", useCustom: "data", useCustomMutation: "data", useDelete: "data", useDeleteMany: "data", useInfiniteList: "data", useList: "data", useMany: "data", useOne: "data", useUpdate: "data", useUpdateMany: "data", useForgotPassword: "auth", useGetIdentity: "auth", useIsAuthenticated: "auth", useLogin: "auth", useLogout: "auth", useOnError: "auth", usePermissions: "auth", useRegister: "auth", useUpdatePassword: "auth" };
var _ = Object.entries(v).reduce((e, [a, o]) => (e[o] || (e[o] = []), e[o].push(a), e), {});
async function d(e, a, o) {
  if (e.readyState !== e.OPEN) {
    await new Promise((s) => {
      let r = () => {
        e.send(JSON.stringify({ event: a, payload: o })), s(), e.removeEventListener("open", r);
      };
      e.addEventListener("open", r);
    });
    return;
  }
  e.send(JSON.stringify({ event: a, payload: o }));
}
function c(e, a, o) {
  let s = (r) => {
    let { event: u, payload: l } = JSON.parse(r.data);
    a === u && o(l);
  };
  return e.addEventListener("message", s), () => {
    e.removeEventListener("message", s);
  };
}
var O = import_react.default.createContext({ __devtools: false, port: 5001, url: "localhost", secure: false, ws: null });
var L = ({ __devtools: e, port: a, children: o }) => {
  let [s, r] = import_react.default.useState({ __devtools: e ?? false, port: a ?? 5001, url: "localhost", secure: false, ws: null }), [u, l] = import_react.default.useState(null);
  import_react.default.useEffect(() => {
    let n = new WebSocket(`${s.secure ? "wss" : "ws"}://localhost:${s.port}`), y = c(n, "devtools:handshake", (p) => {
      r((D) => ({ ...D, devtoolsUrl: p.url })), y();
    });
    return n.addEventListener("open", () => {
      s.__devtools || d(n, "devtools:init", { url: window.location.origin });
    }), l(n), () => {
      y(), n.readyState === WebSocket.CONNECTING ? n.addEventListener("open", () => {
        n.close(1e3, window.location.origin);
      }) : n.close(1e3, window.location.origin);
    };
  }, []);
  let E = import_react.default.useMemo(() => ({ ...s, ws: u }), [s, u]);
  return import_react.default.createElement(O.Provider, { value: E }, o);
};

export {
  T,
  v,
  d,
  c,
  O,
  L
};
//# sourceMappingURL=chunk-SYHWUSVZ.js.map
