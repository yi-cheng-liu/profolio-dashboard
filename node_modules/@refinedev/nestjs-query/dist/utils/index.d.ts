import type { CrudSorting, LogicalFilter, Pagination } from "@refinedev/core";
import type { Client } from "graphql-ws";
export declare const generateSubscription: (client: Client, { callback, params, meta }: any, type: string) => () => void;
export declare const generateFilters: (filters: LogicalFilter[]) => {
    [key: string]: {
        [key: string]: string | number;
    };
};
export declare const generateSorting: (sorters: CrudSorting) => {
    field: string;
    direction: string;
}[];
export declare const generatePaging: (pagination: Pagination) => {
    limit: number;
    offset?: undefined;
} | {
    limit: number;
    offset: number;
} | undefined;
export declare const generateCreatedSubscription: ({ resource, filters, meta, }: any) => {
    query: string;
    variables: {
        [k: string]: any;
    };
    operation: string;
    operationName: string;
} | {
    query: string;
    variables: any;
    operation: string;
    operationName?: undefined;
};
export declare const generateUpdatedSubscription: ({ id, resource, filters, meta, }: any) => {
    query: string;
    variables: {
        [k: string]: any;
    };
    operation: string;
    operationName: string;
} | {
    query: string;
    variables: any;
    operation: string;
    operationName?: undefined;
};
export declare const generateDeletedSubscription: ({ resource, filters, meta, }: any) => {
    query: string;
    variables: {
        [k: string]: any;
    };
    operation: string;
    operationName: string;
} | {
    query: string;
    variables: any;
    operation: string;
    operationName?: undefined;
};
//# sourceMappingURL=index.d.ts.map