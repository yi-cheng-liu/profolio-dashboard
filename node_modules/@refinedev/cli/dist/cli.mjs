#!/usr/bin/env node
var rr=Object.defineProperty;var h=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var or=(e,t)=>{for(var r in t)rr(e,r,{get:t[r],enumerable:!0})};import{Command as Jn}from"commander";import Hn from"figlet";import Xe from"chalk";import he from"center-align";import nr from"ora";var ir=async(e,t)=>{let r=nr({color:"cyan",text:t}).start(),o=await e();return r.stop(),o},D=ir;import ue from"execa";import{existsSync as sr,pathExists as Fe,readFileSync as ar,readJSON as cr}from"fs-extra";import lr from"globby";import $e from"path";import mr from"preferred-pm";var A=()=>{if(!sr("package.json"))throw new Error("./package.json not found");return JSON.parse(ar("package.json","utf8"))},O=()=>{let e=A();return Object.keys(e.dependencies||{})};var Ue=()=>{let e=A();return Object.keys(e.devDependencies||{})},pr=()=>[...O(),...O()],Z=()=>A().scripts,$=async()=>{var e;try{let t=await ue("npm",["ls","--depth=0","--json"],{reject:!1}),r=((e=JSON.parse(t.stdout))==null?void 0:e.dependencies)||{},o=Object.keys(r).filter(i=>i.startsWith("@refinedev")||i.startsWith("@pankod/refine-")),n=[];for(let i of o){let a=r[i].version;n.push({name:i,version:a})}return n}catch{return Promise.resolve(null)}},Y=async()=>{let e=["ably","airtable","antd","appwrite","chakra-ui","codemod","core","devtools","devtools-internal","devtools-server","devtools-shared","devtools-ui","graphql","hasura","inferencer","kbar","mantine","medusa","mui","nestjs-query","nestjsx-crud","nextjs-router","react-hook-form","react-router-v6","react-table","remix-router","shared","simple-rest","strapi","strapi-v4","supabase"];try{let t=await lr("node_modules/@refinedev/*",{onlyDirectories:!0}),r=e.flatMap(n=>{try{let i=h.resolve($e.join("@refinedev",n,"package.json"));return[$e.dirname(i)]}catch{return[]}}),o=[];return await Promise.all([...r,...t].map(async n=>{if(await Fe(`${n}/package.json`)){let a=await cr(`${n}/package.json`);o.push({name:a.name,version:a.version,path:n})}})),o}catch{return[]}},Be=async e=>await Fe(`${e}/refine.config.js`),j={npm:{install:["install","--save"],installDev:["install","--save-dev"],outdatedJson:["outdated","--json"]},yarn:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--json"]},pnpm:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--format","json"]},bun:{install:["add"],installDev:["add","--dev"],outdatedJson:["outdated","--format","json"]}},C=async()=>{let e=await D(()=>mr(process.cwd()),"Getting package manager...");if(!e)throw new Error("Package manager not found.");return e},Q=async e=>{let t=await C();try{let r=j[t.name].install,o=ue(t.name,[...r,...e],{stdio:"inherit"});o.on("message",n=>{console.log(n)}),o.on("error",n=>{console.log(n)}),o.on("exit",n=>{if(n===0){console.log("All `Refine` packages updated  \u{1F389}");return}console.log(`Application exited with code ${n}`)})}catch(r){throw new Error(r)}},fe=async e=>{let t=await C();try{let r=j[t.name].install,o=ue.sync(t.name,[...r,...e],{stdio:"inherit"});if(o.failed||o.exitCode!==0)throw new Error(o.stderr);return o}catch(r){throw new Error(r)}},Me=e=>{let t=e.lastIndexOf("@");return t<=0?{name:e,version:null}:{name:e.slice(0,t),version:e.slice(t+1)}},Le=()=>{var t;let e=A();return(t=e==null?void 0:e.refine)==null?void 0:t.projectId},ee=async()=>(await Y()).some(t=>t.name==="@refinedev/devtools"),dr=e=>{let t=O();return e.filter(r=>!t.includes(r))},ze=async e=>{console.log("\u{1F331} Checking dependencies...");let t=dr(e);t.length>0?(console.log(`\u{1F331} Installing ${t.join(", ")}`),await fe(t),console.log("\u{1F389} Installation complete...")):console.log("\u{1F389} All required packages are already installed")},Ve=e=>{let t=pr(),r=e.filter(o=>t.includes(o));return r.length>0?(console.log(`\u{1F6A8} This feature doesn't support ${r.join(", ")} package.`),!0):!1};import ur from"cli-table3";import te from"chalk";var We=e=>e.charAt(0).toUpperCase()+e.slice(1),qe=e=>e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,"");var X={name:"name",current:"current",wanted:"wanted",latest:"latest",changelog:"changelog"},ge=[X.name,X.current,X.wanted,X.latest,X.changelog],re=(e=[])=>{var b;let t=Object.keys((e==null?void 0:e[0])||{});if(!e||!t.length)return{table:"",width:0};let r=process.stdout.columns||80,o=Math.max(...e.map(l=>l.name.length))+2,n=7+2,i=6,a=Math.min(35,r-o-n*3-i),s={name:o,current:n,wanted:n,latest:n,changelog:a},f=new ur({head:ge,wordWrap:!1,wrapOnWordBoundary:!0,colWidths:ge.map(l=>s[l]),style:{head:["blue"]}}),m=(l,c)=>{if(l.length>c){let p=c-3,d=l.slice(0,Math.floor(p/2)),v=l.slice(-Math.ceil(p/2));return`${d}...${v}`}return l};e.forEach(l=>{f.push(ge.map(c=>{let p=l[c];if(!p)return p;if(c==="latest"||c==="wanted"){let d=Ye(l.current),v=Ye(p),y=fr(d,v),S=te[y.major](v.major),E=te[y.minor](v.minor),q=te[y.patch](v.patch);return`${S}.${E}.${q}`}return c==="changelog"?te.blueBright.underline(p):p}))});let u=f.toString(),P=qe(((b=u.split(`
`))==null?void 0:b[0])||"").length;return{table:u,width:P}},Ye=e=>{let t=e.split(".");return{major:t[0],minor:t[1],patch:t[2]}},fr=(e,t)=>e.major.trim()!==t.major.trim()?{major:"red",minor:"red",patch:"red"}:e.minor.trim()!==t.minor.trim()?{major:"white",minor:"yellow",patch:"yellow"}:e.patch.trim()!==t.patch.trim()?{major:"white",minor:"white",patch:"green"}:{major:"white",minor:"white",patch:"white"};var oe=async e=>{let t=e==null?void 0:e.data,r=Object.keys((t==null?void 0:t[0])||{});if(!t||!r.length)return;let{table:o,width:n}=re(t);console.log(),console.log(he("Update Available",n)),console.log(o),console.log(he(`To update ${Xe.bold("`Refine`")} packages with wanted version`,n)),console.log(he(` Run the following command: ${Xe.yellowBright(await gr())}`,n)),console.log()},gr=async()=>{let e="npx @refinedev/cli update",t=O(),r=Object.keys(Z()),o=t.includes("@refinedev/cli"),n=r.includes("refine");if(!o&&!n)return e;let i=await C();return n?`${i.name} run refine update`:o?"npx refine update":e};import hr from"execa";import vr from"semver-diff";var yr=e=>e.command("check-updates").description("Check all installed `Refine` packages are up to date").action(wr),wr=async()=>{let e=await D(J,"Checking for updates...");if(!e.length){console.log("All `Refine` packages are up to date \u{1F389}\n");return}await oe({data:e})},J=async()=>await Pr(),Pr=async()=>{let e=await xr();if(!e)return[];let t=[],r;return Object.keys(e).forEach(n=>{let i=e[n];n.includes("@refinedev")&&(r=n.replace(/@refinedev\//,"https://c.refine.dev/"),t.push({name:n,current:i.current,wanted:i.wanted,latest:i.latest,changelog:r}))}),t.filter(n=>!!vr(n.current,n.latest))},xr=async()=>{let e="npm",{stdout:t,timedOut:r}=await hr(e,j[e].outdatedJson,{reject:!1,timeout:25e3});if(r)throw new Error("Timed out while checking for updates.");return t?JSON.parse(t):null},Je=yr;var w=(s=>(s.REACT_SCRIPT="react-scripts",s.REMIX="remix",s.NEXTJS="nextjs",s.VITE="vite",s.CRACO="craco",s.PARCEL="parcel",s.UNKNOWN="unknown",s))(w||{});var ve=(n=>(n.ANTD="antd",n.MUI="mui",n.MANTINE="mantine",n.CHAKRA="chakra-ui",n))(ve||{});var He=(o=>(o.NPM="npm",o.YARN="yarn",o.PNPM="pnpm",o))(He||{});var g=e=>{if(e)return e;let t=O(),r=Ue();return t.includes("@craco/craco")||r.includes("@craco/craco")?"craco":t.includes("react-scripts")||r.includes("react-scripts")?"react-scripts":t.includes("next")||r.includes("next")?"nextjs":t.includes("@remix-run/react")||r.includes("@remix-run/react")?"remix":t.includes("vite")||r.includes("vite")?"vite":t.includes("parcel")||r.includes("parcel")?"parcel":"unknown"},Ke=()=>{let e=O();if(e.includes("@refinedev/antd"))return"antd";if(e.includes("@refinedev/mui"))return"mui";if(e.includes("@refinedev/chakra-ui"))return"chakra-ui";if(e.includes("@refinedev/mantine"))return"mantine"};var H=e=>{switch(e){case"nextjs":return{path:"src/components",alias:"../src/components"};case"remix":return{path:"app/components",alias:"~/components"}}return{path:"src/pages",alias:"pages"}},Ge=e=>{switch(e){case"nextjs":return{path:"src/providers",alias:"../src/providers"};case"remix":return{path:"app/providers",alias:"~/providers"}}return{path:"src/providers",alias:"providers"}},Ze=e=>{switch(e){case"remix":return"./app";default:return"./src"}};import F from"handlebars";import{readFileSync as Ir,readdirSync as Rr,createFileSync as br,writeFileSync as Er,unlinkSync as Cr}from"fs-extra";var kr=(e,t)=>{let r=Ir(e);return F.registerHelper("ifIn",(n,i,a)=>n.includes(i)?a.fn(F):a.inverse(F)),F.registerHelper("formatInferencerComponent",n=>{if(n)switch(n){case"chakra-ui":return"ChakraUI";default:return n.charAt(0).toUpperCase()+n.slice(1)}}),F.registerHelper("capitalize",n=>{if(n)return n.charAt(0).toUpperCase()+n.slice(1)}),F.compile(r.toString())(t)},Qe=(e,t)=>{Rr(e).forEach(o=>{let n=`${e}/${o}`,i=`${e}/${o.replace(".hbs","")}`;br(i),Er(i,kr(n,t)),Cr(n)})};import Nr from"execa";import{copySync as Tr,mkdirSync as Sr,moveSync as Dr,pathExistsSync as et,unlinkSync as Or}from"fs-extra";import Ar from"inquirer";import{join as tt}from"path";import{plural as jr}from"pluralize";import ye from"temp";var ne=["list","create","edit","show"],U=async(e,t)=>{var n;let r=(e==null?void 0:e.path)||H(g()).path,o=e.actions||ne.join(",");if(!t.length){let{name:i,selectedActions:a}=await Ar.prompt([{type:"input",name:"name",message:"Resource Name (users, products, orders etc.)",validate:s=>s?!0:"Resource Name is required"},{type:"checkbox",name:"selectedActions",message:"Select Actions",choices:ne,default:(n=e==null?void 0:e.actions)==null?void 0:n.split(",")}]);t=[i],o=a.join(",")}t.forEach(i=>{let a=o?o.split(","):void 0,s=jr(i).toLowerCase(),f=tt(process.cwd(),r,s);if(et(f)){console.error(`\u274C Resource (${tt(r,s)}) already exist!`);return}let m=We(i),u=Ke(),P=`${__dirname}/../templates/resource`,b=_r();Tr(P,b);let l={resourceName:i,resource:m,actions:a||ne,uiFramework:u};Qe(b,l),a&&ne.forEach(y=>{a.includes(y)||Or(`${b}/${y}.tsx`)}),Sr(r,{recursive:!0});let c=`${r}/${s}`,p={};et(c)&&(p={overwrite:!0}),Dr(b,c,p),ye.cleanupSync();let d=h.resolve(".bin/jscodeshift"),{stderr:v}=Nr.sync(d,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/resource.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist",`--__actions=${l.actions}`,`--__pathAlias=${H(g()).alias}`,`--__resourceFolderName=${s}`,`--__resource=${m}`,`--__resourceName=${i}`]);v&&console.log(v),console.log(`\u{1F389} Resource (${c}) generated successfully!`)})},_r=()=>(ye.track(),ye.mkdirSync("resource"));var $r=e=>{let t=g(),{path:r}=H(t);return e.command("create-resource").allowExcessArguments(!0).description('Create a new resource files (deprecated, please use "add resource" command)').option("-a, --actions [actions]","Only generate the specified actions. (ex: list,create,edit,show)","list,create,edit,show").option("-p, --path [path]","Path to generate the resource files",r).action(Fr)},Fr=async(e,t)=>{U(e,t.args)},rt=$r;import*as ot from"dotenv";ot.config();var Ur={development:/dev/i,production:/prod/i,test:/test|tst/i,"continuous-integration":/ci/i,"user-acceptance-testing":/uat/i,"system-integration-testing":/sit/i},Br=()=>{let e=process.env.NODE_ENV;if(!e)return"development";let t="custom";for(let[r,o]of Object.entries(Ur))if(o.test(e)){t=r;break}return t},k={NODE_ENV:Br(),REFINE_NO_TELEMETRY:process.env.REFINE_NO_TELEMETRY||"false",UPDATE_NOTIFIER_IS_DISABLED:process.env.UPDATE_NOTIFIER_IS_DISABLED||"false",UPDATE_NOTIFIER_CACHE_TTL:process.env.UPDATE_NOTIFIER_CACHE_TTL||1e3*60*60*24,REFINE_PROXY_DOMAIN:process.env.REFINE_PROXY_DOMAIN||"https://refine.dev",REFINE_PROXY_TARGET:process.env.REFINE_PROXY_TARGET||"http://localhost:3000",REFINE_PROXY_PORT:process.env.REFINE_PROXY_PORT||"7313",REFINE_PROXY_REWRITE_URL:process.env.REFINE_REWRITE_URL||"http://localhost:7313"};import Mr from"express";import{createProxyMiddleware as we}from"http-proxy-middleware";var Lr=e=>e.command("proxy").description("Manage proxy settings").action(zr).option("-p, --port [port]","Port to serve the proxy server. You can also set this with the `REFINE_PROXY_PORT` environment variable.",k.REFINE_PROXY_PORT).option("-t, --target [target]","Target to proxy. You can also set this with the `REFINE_PROXY_TARGET` environment variable.",k.REFINE_PROXY_TARGET).option("-d, --domain [domain]","Domain to proxy. You can also set this with the `REFINE_PROXY_DOMAIN` environment variable.",k.REFINE_PROXY_DOMAIN).option("-r, --rewrite-url [rewrite URL]","Rewrite URL for redirects. You can also set this with the `REFINE_PROXY_REWRITE_URL` environment variable.",k.REFINE_PROXY_REWRITE_URL),zr=async({port:e,target:t,domain:r,rewriteUrl:o})=>{let n=Mr(),a=new URL(t).protocol==="http:"?s=>{var f;s.headers["set-cookie"]&&((f=s.headers["set-cookie"])==null||f.forEach((m,u)=>{var P;(P=s==null?void 0:s.headers)!=null&&P["set-cookie"]&&(s.headers["set-cookie"][u]=m.replace("Secure;",""))}))}:void 0;n.use("/.refine",we({target:`${r}/.refine`,changeOrigin:!0,pathRewrite:{"^/.refine":""},logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy rewrite rule created")||(`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.refine to ${r}/.refine`):s&&console.log(s))},warn:console.warn,debug:console.debug,error:console.error})})),n.use("/.auth",we({target:`${r}/.auth`,changeOrigin:!0,cookieDomainRewrite:{"refine.dev":""},headers:{"auth-base-url-rewrite":`${o}/.auth`},pathRewrite:{"^/.auth":""},logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy rewrite rule created")||(`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.auth to ${r}/.auth`):s&&console.log(s))},warn:console.warn,debug:console.debug,error:console.error}),onProxyRes:a})),n.use("*",we({target:`${t}`,changeOrigin:!0,ws:!0,logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e} to ${t}`):s&&console.log(s)},warn:console.warn,debug:console.debug,error:console.error})})),n.listen(Number(e))},nt=Lr;import{Option as Zr}from"commander";import Vr from"conf";import Wr from"chalk";var it=e=>typeof btoa<"u"?btoa(e):Buffer.from(e).toString("base64");var qr="refine-update-notifier",N=new Vr({projectName:qr,defaults:{key:"",lastUpdated:0,packages:[]}}),B=async()=>{if(Kr())return;let e=await Xr();if(e!==null){if(e){st();return}Yr(),st()}},Yr=async()=>{let e=N.get("packages");e!=null&&e.length&&(await oe({data:e}),console.log(`
`))},Xr=async()=>{let e=await Hr(),t=Jr();return e===null?null:!!(t||!e)},st=async()=>{try{let e=await J();return N.set("packages",e),N.set("lastUpdated",Date.now()),N.set("key",await at()),e}catch{return N.set("packages",[]),N.set("lastUpdated",Date.now()),N.set("key",""),null}},Jr=()=>{let e=N.get("lastUpdated");if(!e)return!0;let r=Date.now()-e,o=Number(k.UPDATE_NOTIFIER_CACHE_TTL);return r>=o},Hr=async()=>{let e=N.get("key"),t=await at();return t===null?null:e===t},at=async()=>{let e=await $();if(!e)return console.error(Wr.red("Something went wrong when trying to get installed `Refine` packages.")),null;let t=e.map(o=>`${o.name}@${o.version}`);return it(t.toString())},Kr=()=>k.UPDATE_NOTIFIER_IS_DISABLED.toLocaleLowerCase()==="true";var I={["react-scripts"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>h.resolve(".bin/react-scripts")},["vite"]:{getDev:e=>["dev",...e],getStart:e=>["preview",...e],getBuild:e=>["build",...e],getBin:()=>h.resolve(".bin/vite")},["nextjs"]:{getDev:e=>["dev",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>h.resolve(".bin/next")},["remix"]:{getDev:e=>["dev",...e],getStart:e=>(e==null?void 0:e.length)?e:(console.log(),console.warn("\u{1F6A8} Remix requires a path to the entry file. Please provide it as an argument to `refine start` command in package.json scripts"),console.warn("Refine will use `./build/index.js` as default"),console.warn("Example: `refine start ./build/index.js`"),console.log(),["./build/index.js"]),getBuild:e=>["build",...e],getBin:e=>{let t=e==="start"?"remix-serve":"remix";return h.resolve(`.bin/${t}`)}},["craco"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>h.resolve(".bin/craco")},["parcel"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>h.resolve(".bin/parcel")},["unknown"]:{getDev:e=>[...e],getStart:e=>[...e],getBuild:e=>[...e],getBin:()=>"unknown"}};import Gr from"execa";var T=async(e,t)=>{var o,n;if(e==="unknown"){let i=Object.values(w).filter(a=>a!=="unknown").join(", ");console.error(`We couldn't find executable for your project. Supported executables are ${i}.
Please use your own script directly. If you think this is an issue, please report it at: https://github.com/refinedev/refine/issues`);return}let r=Gr(e,t,{stdio:"pipe",windowsHide:!1,env:{FORCE_COLOR:"true",...process.env}});return(o=r.stdout)==null||o.pipe(process.stdout),(n=r.stderr)==null||n.pipe(process.stderr),await r};var M=e=>{let t=g(),r=[];switch(e){case"dev":r=I[t].getDev([""]);break;case"start":r=I[t].getStart([""]);break;case"build":r=I[t].getBuild([""]);break}return t==="remix"&&e==="start"&&(t="remix-serve"),`It runs: \`${t} ${r.join(" ")}\`. Also accepts all the arguments \`${t}\` accepts.`},L=()=>`Platform to run command on. 
ex: ${Object.values(w).join(", ")}`;var Qr=e=>e.command("start").description(M("start")).allowUnknownOption(!0).addOption(new Zr("-p, --platform <platform>",L()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(eo),eo=async(e,{platform:t})=>{let r=g(t),o=I[r].getBin("start"),n=I[r].getStart(e);await B(),T(o,n)},Pe=Qr;import{Option as ft}from"commander";import{server as no}from"@refinedev/devtools-server";import oo from"execa";import{format as to,resolveConfig as ro}from"prettier";var xe=async e=>{try{let t=await ro(process.cwd());return to(e,{...t??{},parser:"typescript"})}catch{return e}};var ct=async()=>{let e=h.resolve(".bin/jscodeshift"),{stderr:t}=oo.sync(e,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/add-devtools-component.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist"]);t&&console.log(t)};var lt=()=>{let t=A().scripts||{};return{dev:((t==null?void 0:t.dev)||"").match(/refine dev(\s|$|;){1}/)!==null}};import io from"boxen";import so from"cardinal";import mt from"chalk";import{Argument as ao}from"commander";import co from"dedent";import Re from"semver";var lo=["start","init"],mo="start",pt="4.42.0",po=e=>e.command("devtools").description("Start or install Refine Devtools server; it starts on port 5001.").addArgument(new ao("[command]","devtools related commands").choices(lo).default(mo)).addHelpText("after",`
Commands:
    start     Start Refine Devtools server
    init      Install Refine Devtools client and adds it to your project
`).action(uo),uo=async e=>{switch(e){case"start":be();return;case"init":fo();return}},fo=async()=>{var n;let e=await Ie();if(await D(ee,"Checking if devtools is installed...")){console.log("\u{1F389} Refine Devtools is already installed");return}if(e&&await dt({pkg:e}))return;console.log("\u{1F331} Installing Refine Devtools...");let r=["@refinedev/devtools@latest"];if((!e||Re.lt(e.version,pt))&&(r.push("@refinedev/core@latest"),console.log("\u{1F331} Refine core package is being updated for devtools...")),await fe(r),console.log(""),console.log(""),console.log("\u{1F331} Adding devtools component to your project...."),await ct(),console.log("\u2705 Refine Devtools package and components added to your project"),r.includes("@refinedev/core@latest")){let i=await Ie();console.log(`\u2705 Refine core package updated from ${(e==null?void 0:e.version)??"unknown"} to ${(i==null?void 0:i.version)??"unknown"}`),console.log(`   Changelog: ${mt.underline.blueBright(`https://c.refine.dev/core#${(e==null?void 0:e.version.replaceAll(".",""))??""}`)}`)}console.log("");let{dev:o}=lt();if(o){console.log(`\u{1F64C} You're good to go. "npm run dev" will automatically starts the devtools server.`),console.log('\u{1F449} You can also start the devtools server manually by running "refine devtools start"');return}if(!o){let i=(n=A().scripts)==null?void 0:n.dev;console.log('\u{1F6A8} Your have modified the "dev" script in your package.json. Because of that, "npm run dev" will not start the devtools server automatically.'),console.log('\u{1F449} You can append "refine devtools" to "dev" script'),console.log('\u{1F449} You can start the devtools server manually by running "refine devtools"'),console.log(""),console.log(io(so.highlight(co(`
                {
                    "scripts": {
                        "dev": "${i} & refine devtools",
                        "refine": "refine"
                    }
                }  
        `)),{padding:1,title:"package.json",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"}))}},be=async({exitOnError:e=!0}={})=>{let t=await Ie();if(t){if(await dt({pkg:t}))return;if(Re.lt(t.version,pt)){console.log(`\u{1F6A8} You're using an old version of Refine(${t.version}). Refine version should be @4.42.0 or higher to use devtools.`);let r=await C();console.log(`\u{1F449} You can update @refinedev/core package by running "${r.name} run refine update"`);return}}no({onError:()=>{e&&process.exit(1)}}).catch(r=>{})},Ie=async()=>{let e=await Y(),t=e==null?void 0:e.find(r=>r.name==="@refinedev/core"||r.name==="@pankod/refine-core");if(t)return t},dt=async({pkg:e})=>e.name==="@pankod/refine-core"||Re.lt(e.version,"4.0.0")?(console.log(`\u{1F6A8} You're using an old version of Refine(${e.version}). Refine version should be @4.42.0 or higher to use devtools.`),console.log("You can follow migration guide to update Refine."),console.log(mt.blue("https://refine.dev/docs/migration-guide/3x-to-4x/")),!0):!1,ut=po;var go=e=>e.command("dev").description(M("dev")).allowUnknownOption(!0).addOption(new ft("-p, --platform <platform>",L()).choices(Object.values(w).filter(t=>t!=="unknown"))).addOption(new ft("-d, --devtools <devtools>","Start Refine Devtools server").default("true","true if devtools is installed")).argument("[args...]").action(ho),ho=async(e,{platform:t,...r})=>{let o=g(t),n=I[o].getBin("dev"),i=I[o].getDev(e);await B();let a=await ee();(r.devtools==="false"?!1:a)&&be({exitOnError:!1}),T(n,i)},Ee=go;import{Option as vo}from"commander";var yo=e=>e.command("build").description(M("build")).allowUnknownOption(!0).addOption(new vo("-p, --platform <platform>",L()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(wo),wo=async(e,{platform:t})=>{let r=g(t),o=I[r].getBin("build"),n=I[r].getBuild(e);await B();try{await T(o,n)}catch{process.exit(1)}},Ce=yo;import gt from"chalk";var Po=e=>e.command("run").description("Runs a defined package script. If no `command` is provided, it will list the available scripts").allowUnknownOption(!0).argument("[command] [args...]").action(xo),xo=async e=>{let[t,...r]=e,o=Z();if(!t){console.log(`Available via ${gt.blue("`refine run`")}:
`);for(let[a,s]of Object.entries(o))console.log(`  ${a}`),console.log(`    ${gt.dim(s)}`),console.log();return}if(!Object.keys(o).includes(t)){let a=`${process.cwd()}/node_modules/.bin/${t}`;T(a,r);return}let i=await C();T(i.name,["run",t,...r])},ke=Po;import Nt from"path";import V from"chalk";import ae from"inquirer";import Lo from"inquirer-autocomplete-prompt";import{ensureFile as zo,pathExists as Tt,readFile as Vo,writeFile as Wo}from"fs-extra";import It from"path";import No from"path";var Ne={};or(Ne,{PackageManagerTypes:()=>He,ProjectTypes:()=>w,UIFrameworks:()=>ve,appendAfterImports:()=>wt,getFileContent:()=>ie,getImports:()=>z,getNameChangeInImport:()=>vt});var Io=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Ro=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,z=e=>{let t=e.matchAll(Io),r=[];for(let o of t){let[n,i,a,s,f]=o;r.push({statement:n,importPath:f,...i&&{defaultImport:i},...a&&{namedImports:a},...s&&{namespaceImport:s}})}return r==null?void 0:r.filter(Boolean)},vt=e=>{let t=e.matchAll(Ro),r=[];for(let o of t){let[n,i,a,s,f]=o;r.push({statement:n,fromName:i.trim(),toName:s.trim(),afterCharacter:f})}return r},bo=(e,t)=>{var i;let r=e.substring(0,e.indexOf(t.statement)),o=z(r).pop();return o?r.substring(r.indexOf(o==null?void 0:o.statement)+((i=o==null?void 0:o.statement)==null?void 0:i.length)):r},Eo=(e,t)=>!!(t?bo(e,t):"").trim(),ht=["react","@refinedev/core","@refinedev/"],yt=e=>{var l;let t=e,r=z(e),o=r.filter(c=>!c.statement.includes("import type ")),n=r.filter(c=>c.statement.includes("import type")),i=[],a=[];o.forEach(c=>{Eo(e,c)?i.push(c):a.push(c)});let s=t.indexOf((l=a==null?void 0:a[0])==null?void 0:l.statement);a.forEach(c=>{t=t.replace(c.statement,"")}),n.forEach(c=>{t=t.replace(c.statement,"")});let f=a.reduce((c,p)=>{let{importPath:d}=p;return c[d]?c[d].push(p):c[d]=[p],c},{}),P=[...Object.entries(f).map(([c,p])=>{let d=p.find(E=>E.defaultImport),v=p.find(E=>E.namespaceImport),y=p.filter(E=>E.namedImports).map(E=>(E.namedImports??"").replace(/{|}/g,"").trim().split(",").map(de=>de.trim()).filter(Boolean).join(", ")).join(", "),S="";return v&&(S+=`${v.statement}
`),(d||y)&&(d&&y?S+=`import ${d.defaultImport}, { ${y} } from "${p[0].importPath}";
`:d?S+=`import ${d.defaultImport} from "${p[0].importPath}";
`:S+=`import { ${y} } from "${p[0].importPath}";
`),[c,S]})].sort(([c],[p])=>{let d=ht.findIndex(y=>c.includes(y)),v=ht.findIndex(y=>p.includes(y));return d===v?c.localeCompare(p):d===-1?1:v===-1?-1:d-v}).map(([,c])=>c).join(""),b=n.map(c=>c.statement).join(`
`);return t=t.substring(0,s)+P+b+t.substring(s),t};var wt=(e,t)=>{let r=z(e),o=r[r.length-1],n=o?e.indexOf(o.statement):e.length-1;return`${e.slice(0,n+(o==null?void 0:o.statement.length))}
${t}
${e.slice(n+(o==null?void 0:o.statement.length))}`};import{readFileSync as Co}from"fs-extra";import{join as ko}from"path";function ie(e){if(this!=null&&this.absolutePackageDir)try{return Co(ko(this.absolutePackageDir,e)).toString()}catch{return}}var Pt=h("module"),To=Pt.prototype.require,xt=(e,t)=>{Pt.prototype.require=function(...r){return r[0]==="@refinedev/cli"?{...Ne,getFileContent:o=>ie.call({absolutePackageDir:t?e:No.join(process.cwd(),e)},o)}:To.apply(this,r)}};var Te=async(e,t)=>{try{return xt(e,t),h(It.join(t?e:It.join(process.cwd(),e),"refine.config.js"))}catch{return}};import $o from"dedent";var R={SUCCESS:"SUCCESS",UNKNOWN_ERROR:"UNKNOWN_ERROR",SOURCE_PATH_NOT_FOUND:"SOURCE_PATH_NOT_FOUND",TARGET_PATH_NOT_FOUND:"TARGET_PATH_NOT_FOUND",SOURCE_PATH_NOT_A_FILE:"SOURCE_PATH_NOT_A_FILE",TARGET_ALREADY_EXISTS:"TARGET_ALREADY_EXISTS"};import x from"chalk";import So from"chalk";import Do from"cardinal";import Oo from"boxen";var Ao=e=>{let t=/^(?:\/\/\s?title:\s?)(.*?)\n/g,[r,o]=t.exec(e)??[];if(o){let n=o.trim(),i=e.replace(r||"","");return{title:n,code:i}}return{code:e}},Rt=e=>{let{title:t,code:r}=Ao(e),o="";try{o=Do.highlight(r,{jsx:!0})}catch{o=r}return Oo(o,{padding:1,margin:0,borderStyle:"round",borderColor:"gray",titleAlignment:"left",title:t?So.bold(t):void 0})};import{marked as jo}from"marked";import _o from"marked-terminal";var se=e=>jo(e,{renderer:new _o({code:Rt})});var bt=({label:e,files:t,message:r="**`Warning:`** You should use the component where you want to use it."})=>{let o=t.filter(([,m])=>Object.values(R).filter(u=>u!==R.SUCCESS).includes(m)),n="success";switch(o.length){case 0:n="success";break;case t.length:n="error";break;default:n="warning";break}let i=m=>{let u=m==null?void 0:m.replace(process.cwd(),"");return u!=null&&u.startsWith("/")?u.slice(1):u!=null&&u.startsWith("./")?u.slice(2):u},a=()=>{switch(n){case"success":console.log(x.blueBright(`Successfully swizzled ${x.bold(e)}`));return;case"warning":console.log(x.yellowBright(`Swizzle completed with errors for ${x.bold(e)}`));return;case"error":console.log(x.redBright(`Swizzle failed for ${x.bold(e)}`));return;default:return}},s=()=>{let m=[];m.push(x.dim(`File${t.length>1?"s":""} created:`)),m.push(t.map(([u,P])=>P===R.SUCCESS?x.cyanBright.dim(` - ${i(u)}`):P===R.TARGET_ALREADY_EXISTS?x.cyanBright.dim(` - ${x.yellowBright.bold("[FILE_ALREADY_EXISTS] ")}${i(u)}`):P===R.SOURCE_PATH_NOT_A_FILE?x.cyanBright.dim(` - ${x.yellowBright.bold("[SOURCE NOT FOUND] ")}${i(u)}`):x.cyanBright.dim(` - ${x.yellowBright.bold(`[${P}]`)}${i(u)}`)).join(`
`)),console.log(m.join(`
`))},f=()=>{r&&n!=="error"&&console.log(se($o(`
${r}`)))};console.log(""),a(),s(),console.log(""),f()};var Et=e=>{let t=/(\/\/|\/\*)(\s?)swizzle-remove-start([\s\S]*?)(\/\/|\/\*)(\s?)swizzle-remove-end(\s*)(\*\/)?/g;return e.replace(t,"")};import qo from"boxen";var Ct=()=>{let e;try{e=g()}catch{e=void 0}return Ze(e)};import Fo from"inquirer";import Uo from"chalk";var kt=async e=>{await Bo(e)?await Q(e):await Mo(e)},Bo=async e=>{let t=`This component requires following packages to be installed:
`.concat(e.map(o=>` - ${o}`).join(`
`)).concat(`
Do you want to install them?`),{installRequiredPackages:r}=await Fo.prompt([{type:"confirm",name:"installRequiredPackages",default:!0,message:t}]);return r},Mo=async e=>{let t=await C(),r=j[t.name].install.join(" "),o=e.join(" "),n=`${t.name} ${r} ${o}`;console.log(`
You can install them manually by running this command:`),console.log(Uo.bold.blueBright(n))};var Yo=e=>e.command("swizzle").description(`Export a component or a function from ${V.bold("Refine")} packages to customize it in your project`).action(Xo),St=e=>(t,r="")=>e.filter(n=>{var i;return n.label.toLowerCase().includes(r.toLowerCase())||((i=n.group)==null?void 0:i.toLowerCase().includes(r.toLowerCase()))}).flatMap((n,i,a)=>{var m;return[...(n==null?void 0:n.group)&&((m=a[i-1])==null?void 0:m.group)!==n.group&&n.group?[new ae.Separator(V.bold(n.group))]:[],{name:` ${n.label}`,value:n!=null&&n.value?n.value:n}]}),Xo=async e=>{var u,P,b;ae.registerPrompt("autocomplete",Lo);let t=await Y(),r=[];if(await Promise.all(t.map(async l=>{let c=await Be(l.path),p=r.findIndex(d=>d.name===l.name)===-1;c&&p&&r.push(l)})),r.length===0){console.log("No Refine packages found with swizzle configuration.");return}console.log(`${qo(`Found ${V.blueBright(r.length)} installed ${V.blueBright.bold("Refine")} packages with swizzle configuration.`,{padding:1,textAlignment:"center",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"})}
`);let o=await Promise.all(r.map(async l=>{let c=await Te(l.path,!0)??await Te(l.path,!1)??{swizzle:{items:[]}};return{...l,config:c}})),{selectedPackage:n}=await ae.prompt([{type:"autocomplete",pageSize:10,name:"selectedPackage",message:"Which package do you want to swizzle?",emptyText:"No packages found.",source:St(o.sort((l,c)=>{var p,d;return(((p=l.config)==null?void 0:p.group)??"").localeCompare(((d=c.config)==null?void 0:d.group)??"")}).map(l=>{var c,p;return{label:((c=l.config)==null?void 0:c.name)??l.name,value:l,group:(p=l.config)==null?void 0:p.group}}))}]),{swizzle:{items:i,transform:a}}=n.config,s;if(i.length===0){console.log(`No swizzle items found for ${V.bold(((u=n.config)==null?void 0:u.name)??n.name)}`);return}if(i.length===1?s=i[0]:i.length>1&&(s=(await ae.prompt([{type:"list",pageSize:10,name:"selectedComponent",message:"Which component do you want to swizzle?",emptyText:"No components found.",choices:St(i.sort((c,p)=>c.group.localeCompare(p.group)))({},"")}])).selectedComponent),!s){console.log(`No swizzle items selected for ${V.bold(((P=n.config)==null?void 0:P.name)??n.name)}`);return}let f=Ct(),m=await Promise.all(s.files.map(async l=>{var c;try{let p=l.src?Nt.join(n.path,l.src):void 0,d=l.dest?Nt.join(process.cwd(),f,l.dest):void 0;if(!p)return console.log("No src path found for file",l),["",R.SOURCE_PATH_NOT_FOUND];if(!d)return console.log("No destination path found for file",l),["",R.TARGET_PATH_NOT_FOUND];if(!await Tt(p))return[d,R.SOURCE_PATH_NOT_A_FILE];let y=await Vo(p,"utf-8");if(await Tt(d))return[d,R.TARGET_ALREADY_EXISTS];await zo(d);let E=Et(y),q=((c=l.transform)==null?void 0:c.call(l,E))??E,de=(a==null?void 0:a(q,p,d))??q,er=yt(de),tr=await xe(er);return await Wo(d,tr),[d,R.SUCCESS]}catch{return["",R.UNKNOWN_ERROR]}}));m.length>0&&(bt({files:m,label:s.label,message:s.message}),(b=s==null?void 0:s.requiredPackages)!=null&&b.length&&await kt(s.requiredPackages))},Dt=Yo;import Go from"inquirer";import Zo from"center-align";import{Option as Qo}from"commander";import K from"inquirer";import At from"semver-diff";import Se from"chalk";var Ot=e=>{let t=e.filter((o,n)=>e.indexOf(o)!==n),r=new Set(t);return Array.from(r)};var jt=async e=>{let t=Ho(e);if(!t){console.log("All `Refine` packages are up to date. \u{1F389}");return}let r=Ko(t),o=await K.prompt([{type:"checkbox",name:"packages",message:"Choose packages to update",pageSize:r.pageSize,choices:r.choices,validate:Jo}]);return o.packages.length>0?o.packages:null},Jo=e=>{let r=e.map(n=>Me(n)).map(n=>n.name),o=Ot(r);return o.length>0?`You can't update the same package more than once. Please choice one.
 Duplicates: ${o.join(", ")}`:!0},Ho=e=>{if(e.length===0)return null;let t={patch:[],minor:[],major:[]};return e.forEach(r=>{let o=r.current,n=At(o,r.wanted),i=At(o,r.latest);if(n===i&&i){t[i].push({name:r.name,from:o,to:r.latest});return}n&&t[n].push({name:r.name,from:o,to:r.wanted}),i&&t[i].push({name:r.name,from:o,to:r.latest})}),t},Ko=e=>{let t=0,r=0;[e.patch,e.minor,e.major].forEach(m=>{m.forEach(u=>{u.name.length>t&&(t=u.name.length),u.from.length>r&&(r=u.from.length)})}),t+=2;let o=[],n="Package".padEnd(t),i="From".padEnd(r),s=`
   ${n} ${i}${"To".padStart(r)}`;o.push(new K.Separator(s)),e.patch.length>0&&(o.push(new K.Separator(Se.reset.bold.blue(`
Patch Updates`))),e.patch.forEach(m=>{o.push({name:`${m.name.padEnd(t)} ${m.from.padStart(r)} -> ${m.to}`,value:`${m.name}@${m.to}`})})),e.minor.length>0&&(o.push(new K.Separator(Se.reset.bold.blue(`
Minor Updates`))),e.minor.forEach(m=>{o.push({name:`${m.name.padEnd(t)} ${m.from.padStart(r)} -> ${m.to}`,value:`${m.name}@${m.to}`})})),e.major.length>0&&(o.push(new K.Separator(Se.reset.bold.blue(`
Major Updates`))),e.major.forEach(m=>{o.push({name:`${m.name.padEnd(t)} ${m.from.padStart(r)} -> ${m.to}`,value:`${m.name}@${m.to}`})}));let f=o.length+6;return{choices:o,pageSize:f}};var en=e=>e.command("update").description("Interactively select and update all `Refine` packages to selected version. To skip the interactive mode, use the `--all` option.").addOption(new Qo("-t, --tag [tag]","Select version to update to.").choices(["next","latest"]).default("wanted","Version ranges in the `package.json` will be installed")).option("-a, --all","Update all `Refine` packages to the selected `tag`. If `tag` is not provided, version ranges in the `package.json` will be installed. This option skips the interactive mode.",!1).option("-d, --dry-run","Get outdated packages installation command without automatic updating. If `tag` is not provided, version ranges in the `package.json` will be used.",!1).action(tn),tn=async e=>{let{tag:t,dryRun:r,all:o}=e,n=await D(J,"Checking for updates...");if(!(n!=null&&n.length)){console.log("All `Refine` packages are up to date \u{1F389}");return}let i=null;if(o)_t(t,n);else{let{table:a,width:s}=re(n)??"";console.log(Zo("Available Updates",s)),console.log(a);let{allByPrompt:f}=await Go.prompt([{type:"list",name:"allByPrompt",message:"Do you want to update all Refine packages for minor and patch versions?",choices:[{name:"Yes (Recommended)",value:!0},{name:"No, use interactive mode",value:!1}]}]);f?i=_t(t,n):i=await jt(n)}if(i){if(r){rn(i);return}on(i)}},_t=(e,t)=>e==="wanted"&&t.every(n=>n.current===n.wanted)?(console.log("All `Refine` packages are up to date with the wanted version \u{1F389}"),null):t.map(o=>{let n=e==="wanted"?o.wanted:e;return`${o.name}@${n}`}),rn=async e=>{let t=await C(),r=j[t.name].install;console.log(`${t.name} ${r.join(" ")} ${e.join(" ")}`)},on=e=>{console.log("Updating `Refine` packages..."),console.log(e.map(t=>` - ${t}`).join(`
`)),Q(e)},$t=en;import nn from"envinfo";import sn from"ora";var an=e=>e.command("whoami").description("View the details of the development environment").action(cn),cn=async()=>{let e=sn("Loading environment details...").start(),t=await nn.run({System:["OS","CPU"],Binaries:["Node","Yarn","npm"],Browsers:["Chrome","Firefox","Safari"]},{showNotFound:!0,markdown:!0}),o=(await $()||[]).map(n=>` - ${n.name}: ${n.version}`).join(`
`);e.stop(),console.log(t),console.log("## Refine Packages:"),console.log(o)},Ft=an;import me from"chalk";import pe from"inquirer";import yn from"inquirer";import ln from"execa";var ce=async e=>{let{incompatiblePackages:t,integrationName:r,requiredPackages:o,transformerFileName:n}=e;if(Ve(t))return;await ze(o),console.log(`\u{1F680} Setting up ${r}...`);let i=h.resolve(".bin/jscodeshift"),{stderr:a}=ln.sync(i,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/integrations/${n}.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist"]);a&&console.log(a),console.log(`\u{1F389} ${r} setup completed!`)};import De from"chalk";var le=e=>{let{id:t,title:r,description:o,disabled:n}=e;return n?{value:t,name:`${De.gray(r)}`,disabled:De.redBright(n)}:{value:t,name:`${De.blueBright(r)} - ${o}`}};var Ut="ant-design",mn="Ant Design",pn=["@remix-run/react","next"],dn=["antd","@refinedev/antd"],un="ant-design",Bt={id:Ut,getChoice:e=>{let t="Ant Design",r="Setup Ant Design with Refine",o;return["nextjs","remix"].includes(e)&&(o="Automatic setup only available Vite for now. See the documentation for manual installation: https://refine.dev/docs/ui-integrations/ant-design/introduction/#installation"),le({id:Ut,title:t,description:r,disabled:o})},runTransformer:async()=>await ce({incompatiblePackages:pn,integrationName:mn,requiredPackages:dn,transformerFileName:un})};var Mt="react-router",fn="React Router",gn=["@remix-run/react","next"],hn=["react-router-dom","@refinedev/react-router-v6"],vn="react-router",Lt={id:Mt,getChoice:e=>{let t="React Router",r="Setup routing with React Router",o;return e==="nextjs"&&(o="Can't be used with Next.js. https://nextjs.org/docs/app/building-your-application/routing"),e==="remix"&&(o="Can't be used with Remix. https://remix.run/docs/en/main/discussion/routes"),le({id:Mt,title:t,description:r,disabled:o})},runTransformer:async()=>await ce({incompatiblePackages:gn,integrationName:fn,requiredPackages:hn,transformerFileName:vn})};var _=[Bt,Lt];var Oe=()=>{let e=g(),t=_.map(r=>r.getChoice(e));return t.every(r=>r.disabled)?[{value:"none",name:"No integration available for this project type."},...t]:t},zt=async()=>await yn.prompt([{type:"list",name:"id",message:"Which integration do you want to add?",choices:Oe(),default:"none"}]);import bn from"chalk";import En from"inquirer";import{copySync as wn,mkdirSync as Pn,pathExistsSync as xn}from"fs-extra";import{join as Vt}from"path";var W=[{id:"auth",title:"Auth provider",description:"Manage user authentication and authorization",fileName:"auth-provider.tsx",templateFileName:"demo-auth-provider.tsx.template"},{id:"live",title:"Live provider",description:"Enable real-time updates and synchronization",fileName:"live-provider.tsx",templateFileName:"demo-live-provider.tsx.template"},{id:"data",title:"Data provider",description:"Communicate with your API",fileName:"data-provider.tsx",templateFileName:"demo-data-provider.tsx.template"},{id:"access-control",title:"Access Control",description:"Manage user permissions & roles",fileName:"access-control-provider.tsx",templateFileName:"demo-access-control-provider.tsx.template"},{id:"notification",title:"Notification provider",description:"Display in-app alerts and messages",fileName:"notification-provider.tsx",templateFileName:"demo-notification-provider.tsx.template"},{id:"i18n",title:"I18n provider",description:"Support multiple languages and locales",fileName:"i18n-provider.tsx",templateFileName:"demo-i18n-provider.tsx.template"},{id:"audit-log",title:"Audit Log provider",description:"Display audit logs for your resources",fileName:"audit-log-provider.tsx",templateFileName:"demo-audit-log-provider.tsx.template"}];var In=`${__dirname}/../templates/provider`,G=(e,t)=>{e.forEach(r=>{let{fileName:o,templateFileName:n}=Rn(r),i=t??Ae(),a=Vt(i,o),s=Vt(process.cwd(),i,o);if(xn(s)){console.error(`\u274C Provider (${a}) already exist!`);return}Pn(i,{recursive:!0}),wn(`${In}/${n}`,s),console.log(`\u{1F389} Provider (${a}) created successfully!`)})},Rn=e=>{let t=W.find(r=>r.id===e);if(!t)throw new Error(`Invalid provider: ${e}`);return t},Ae=()=>{let e=g(),{path:t}=Ge(e);return t};var je=()=>W.map(e=>{let{id:t,title:r,description:o}=e;return{value:t,name:`${bn.blueBright(r)} - ${o}`}}),Wt=async()=>await En.prompt([{type:"checkbox",name:"providers",message:"Which providers do you want to add?",choices:je()},{type:"input",name:"providersPath",message:"Where do you want to generate the providers?",default:Ae()}]);var qt=(e,t)=>t.map(r=>({...r,name:` . ${r.name}`,value:{group:e,component:r.value}})),Yt=async()=>await pe.prompt([{type:"list",name:"component",message:"What do you want to add?",choices:[new pe.Separator(me.bold("Provider")),...qt("provider",je()),new pe.Separator(me.bold("Integration")),...qt("integration",Oe()),new pe.Separator(me.bold("Resource")),{name:me.blueBright(" .  Add new resource"),value:{group:"resource",component:"resource"}}],pageSize:25}]);import{Argument as Cn,Command as kn}from"commander";var Nn=async e=>{let t=e;t||(t=(await zt()).id);let r=_.find(o=>o.id===t);r&&await r.runTransformer()},Xt=new kn("integration").addArgument(new Cn("[name]","Name of the integration").choices(_.map(e=>e.id))).action(Nn);import{Argument as Tn,Command as Sn}from"commander";var Dn=async(e,t)=>{if(!e.length){let{providers:r,providersPath:o}=await Wt();return G(r,o)}G(e,t.path)},Jt=new Sn("provider").addArgument(new Tn("[providers...]","Create provider(s)").choices(W.map(e=>e.id)).default([])).option("-p, --path [path]","Path to generate providers").action(Dn);import{Argument as On,Command as An}from"commander";var jn=async(e,t,r)=>{U({actions:t==null?void 0:t.actions,path:r.optsWithGlobals().path},e)},Ht=new An("resource").addArgument(new On("[resources...]","Create new resource(s)")).option("-p, --path [path]","Path to generated resource files").option("-a, --actions [actions]","Only generate the specified resource actions. (ex: list,create,edit,show)","list,create,edit,show").action(jn);var _n=e=>e.command("add").description("Add new resources, providers, or integrations").allowExcessArguments(!1).action($n).addCommand(Ht).addCommand(Jt).addCommand(Xt),$n=async()=>{let{component:e}=await Yt();if(e.group==="provider"&&G([e.component]),e.group==="integration"){let t=_.find(r=>r.id===e.component);await(t==null?void 0:t.runTransformer())}e.group==="resource"&&await U({},[])},Kt=_n;import Fn from"envinfo";import Un from"os";var Bn=()=>{let e=Un.type();return{Darwin:"macOS",Linux:"Linux",Windows_NT:"Windows"}[e]},Gt=async()=>{let[e,t]=await Fn.helpers.getOSInfo();return{name:Bn(),version:t}};import Mn from"node-fetch";var Ln=async()=>{let e=await Gt();return{nodeEnv:k.NODE_ENV,nodeVersion:process.version,os:e.name,osVersion:e.version,command:process.argv[2],packages:await $()||[],projectFramework:g(),projectId:Le()}},Zt=async()=>{if(k.REFINE_NO_TELEMETRY!=="true")try{let e=await Ln();await Mn("https://telemetry.refine.dev/cli",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})}catch{}};import zn from"gray-matter";import Vn from"boxen";var Wn="https://raw.githubusercontent.com/refinedev/refine/master/packages/cli/ANNOUNCEMENTS.md",_e="---announcement",qn=e=>e.split(_e).slice(1).map(r=>`${_e}${r}`),Yn=e=>{let t=e.replace(_e,"---"),r=zn(t),o=(r.content.length===0?t.replace(/---/g,""):r.content.replace(/---/g,"")).trim();return{...r.data,content:o}},Xn=async()=>{try{let e=await fetch(Wn).then(r=>r.text()).catch(()=>"");return qn(e).map(r=>Yn(r))}catch{return[]}},Qt=async()=>{let t=(await Xn()).filter(o=>!o.hidden);if(t.length===0)return;let r=t.map(o=>{let n=t.length>1?"\u2014 ":"",i=se(o.content);return`${n}${i}`}).join("").trim();console.log(Vn(r,{padding:1,margin:0,borderStyle:"round",borderColor:"blueBright",titleAlignment:"left"}))};var Kn="1.0.0",Gn=()=>{let e=new Jn;e.version(`@refinedev/cli@${Kn}`,"-v, --version","Output the current version.").description(Hn.textSync("refine",{font:"Isometric1",horizontalLayout:"full",verticalLayout:"full",whitespaceBreak:!0})).usage("<command> [options]").helpOption("-h, --help","Output usage information."),Dt(e),rt(e),$t(e),Ee(e),Ce(e),Pe(e),ke(e),Je(e),Ft(e),nt(e),ut(e),Kt(e),e.hook("preAction",async t=>{t.args.includes("dev")&&await Qt()}),e.hook("postAction",t=>{let r=t.args[0];["run"].includes(r)||Zt()}),e.parse(process.argv),process.argv.slice(2).length||e.outputHelp()};Gn();
//# sourceMappingURL=cli.mjs.map