{"version":3,"sources":["../src/event-types.ts","../src/scopes.ts","../src/context.tsx","../src/send.ts","../src/receive.ts"],"sourcesContent":["import type {\n  Mutation,\n  MutationKey,\n  MutationStatus,\n  QueryKey,\n  QueryState,\n  QueryStatus,\n} from \"@tanstack/react-query\";\nimport type { TraceType } from \"./trace\";\n\nexport enum DevtoolsEvent {\n  RELOAD = \"devtools:reload\",\n  DEVTOOLS_INIT = \"devtools:init\",\n  DEVTOOLS_HANDSHAKE = \"devtools:handshake\",\n  DEVTOOLS_ALREADY_CONNECTED = \"devtools:already-connected\",\n  ACTIVITY = \"devtools:send-activity\",\n  DEVTOOLS_ACTIVITY_UPDATE = \"devtools:activity-update\",\n  DEVTOOLS_CONNECTED_APP = \"devtools:connected-app\",\n  DEVTOOLS_DISCONNECTED_APP = \"devtools:disconnected-app\",\n  DEVTOOLS_HIGHLIGHT_IN_MONITOR = \"devtools:highlight-in-monitor\",\n  DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION = \"devtools:highlight-in-monitor-action\",\n  DEVTOOLS_LOGIN_SUCCESS = \"devtools:login-success\",\n  DEVTOOLS_RELOAD_AFTER_LOGIN = \"devtools:reload-after-login\",\n  DEVTOOLS_INVALIDATE_QUERY = \"devtools:invalidate-query\",\n  DEVTOOLS_INVALIDATE_QUERY_ACTION = \"devtools:invalidate-query-action\",\n}\n\ntype Timestamps = {\n  createdAt: number;\n  updatedAt: number;\n};\n\ntype ActivityPayload =\n  | {\n      type: \"mutation\";\n      identifier: string;\n      key?: MutationKey;\n      status?: MutationStatus;\n      trace?: TraceType[];\n      state: Mutation<any, any, any, any>[\"state\"];\n      variables?: Mutation<any, any, any, any>[\"state\"][\"variables\"];\n      hookName: string;\n      resourcePath: string | null;\n      resourceName?: string;\n      legacyKey: boolean;\n    }\n  | {\n      type: \"query\";\n      identifier: string;\n      key?: QueryKey;\n      status?: QueryStatus;\n      trace?: TraceType[];\n      state: QueryState<any, any>;\n      hookName: string;\n      resourcePath: string | null;\n      resourceName?: string;\n      legacyKey: boolean;\n    };\n\nexport type DevtoolsEventPayloads = {\n  [DevtoolsEvent.RELOAD]: {};\n  [DevtoolsEvent.DEVTOOLS_INIT]: { url: string };\n  [DevtoolsEvent.DEVTOOLS_HANDSHAKE]: { url: string };\n  [DevtoolsEvent.DEVTOOLS_ALREADY_CONNECTED]: { url: string };\n  [DevtoolsEvent.ACTIVITY]: ActivityPayload;\n  [DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE]: {\n    updatedActivities: (ActivityPayload & Timestamps)[];\n  };\n  [DevtoolsEvent.DEVTOOLS_CONNECTED_APP]: { url: string | null };\n  [DevtoolsEvent.DEVTOOLS_DISCONNECTED_APP]: {};\n  [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR]: { name: string };\n  [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION]: { name: string };\n  [DevtoolsEvent.DEVTOOLS_LOGIN_SUCCESS]: {};\n  [DevtoolsEvent.DEVTOOLS_RELOAD_AFTER_LOGIN]: {};\n  [DevtoolsEvent.DEVTOOLS_INVALIDATE_QUERY]: { queryKey: QueryKey };\n  [DevtoolsEvent.DEVTOOLS_INVALIDATE_QUERY_ACTION]: { queryKey: QueryKey };\n};\n","export type RefineHook =\n  | \"useCan\"\n  | \"useLog\"\n  | \"useLogList\"\n  | \"useCreate\"\n  | \"useCreateMany\"\n  | \"useCustom\"\n  | \"useCustomMutation\"\n  | \"useDelete\"\n  | \"useDeleteMany\"\n  | \"useInfiniteList\"\n  | \"useList\"\n  | \"useMany\"\n  | \"useOne\"\n  | \"useUpdate\"\n  | \"useUpdateMany\"\n  | \"useForgotPassword\"\n  | \"useGetIdentity\"\n  | \"useIsAuthenticated\"\n  | \"useLogin\"\n  | \"useLogout\"\n  | \"useOnError\"\n  | \"usePermissions\"\n  | \"useRegister\"\n  | \"useUpdatePassword\";\n\nexport type Scopes = \"data\" | \"audit-log\" | \"access-control\" | \"auth\";\n\nexport const scopes: Record<RefineHook, Scopes> = {\n  useCan: \"access-control\",\n  useLog: \"audit-log\",\n  useLogList: \"audit-log\",\n  useCreate: \"data\",\n  useCreateMany: \"data\",\n  useCustom: \"data\",\n  useCustomMutation: \"data\",\n  useDelete: \"data\",\n  useDeleteMany: \"data\",\n  useInfiniteList: \"data\",\n  useList: \"data\",\n  useMany: \"data\",\n  useOne: \"data\",\n  useUpdate: \"data\",\n  useUpdateMany: \"data\",\n  useForgotPassword: \"auth\",\n  useGetIdentity: \"auth\",\n  useIsAuthenticated: \"auth\",\n  useLogin: \"auth\",\n  useLogout: \"auth\",\n  useOnError: \"auth\",\n  usePermissions: \"auth\",\n  useRegister: \"auth\",\n  useUpdatePassword: \"auth\",\n};\n\nexport const hooksByScope = Object.entries(scopes).reduce(\n  (acc, [hook, scope]) => {\n    if (!acc[scope]) {\n      acc[scope] = [];\n    }\n\n    acc[scope].push(hook as RefineHook);\n\n    return acc;\n  },\n  {} as Record<Scopes, RefineHook[]>,\n);\n","import React from \"react\";\nimport { DevtoolsEvent } from \"./event-types\";\nimport { send } from \"./send\";\nimport { receive } from \"./receive\";\n\ntype DevToolsContextValue = {\n  __devtools: boolean;\n  port: number;\n  url: string;\n  secure: boolean;\n  ws: WebSocket | null;\n  devtoolsUrl?: string;\n};\n\nexport const DevToolsContext = React.createContext<DevToolsContextValue>({\n  __devtools: false,\n  port: 5001,\n  url: \"localhost\",\n  secure: false,\n  ws: null,\n});\n\ntype Props = React.PropsWithChildren<\n  Partial<Pick<DevToolsContextValue, \"port\" | \"__devtools\">>\n>;\n\nexport const DevToolsContextProvider: React.FC<Props> = ({\n  __devtools,\n  port,\n  children,\n}) => {\n  const [values, setValues] = React.useState<DevToolsContextValue>({\n    __devtools: __devtools ?? false,\n    port: port ?? 5001,\n    url: \"localhost\",\n    secure: false,\n    ws: null,\n  });\n\n  const [ws, setWs] = React.useState<WebSocket | null>(null);\n\n  React.useEffect(() => {\n    const wsInstance = new WebSocket(\n      `${values.secure ? \"wss\" : \"ws\"}://localhost:${values.port}`,\n    );\n\n    const unsubscribe = receive(\n      wsInstance,\n      DevtoolsEvent.DEVTOOLS_HANDSHAKE,\n      (data) => {\n        setValues((v) => ({\n          ...v,\n          devtoolsUrl: data.url,\n        }));\n        unsubscribe();\n      },\n    );\n\n    wsInstance.addEventListener(\"open\", () => {\n      if (!values.__devtools) {\n        send(wsInstance, DevtoolsEvent.DEVTOOLS_INIT, {\n          url: window.location.origin,\n        });\n      }\n    });\n\n    setWs(wsInstance);\n\n    return () => {\n      unsubscribe();\n\n      // In strict mode, the WebSocket instance might not be connected yet\n      // so we need to wait for it to connect before closing it\n      // otherwise it will log an unnecessary error in the console\n      if (wsInstance.readyState === WebSocket.CONNECTING) {\n        wsInstance.addEventListener(\"open\", () => {\n          wsInstance.close(1000, window.location.origin);\n        });\n      } else {\n        wsInstance.close(1000, window.location.origin);\n      }\n    };\n  }, []);\n\n  const contextValues = React.useMemo<DevToolsContextValue>(\n    () => ({\n      ...values,\n      ws,\n    }),\n    [values, ws],\n  );\n\n  return (\n    <DevToolsContext.Provider value={contextValues}>\n      {children}\n    </DevToolsContext.Provider>\n  );\n};\n","import type { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\n\nexport async function send<T extends DevtoolsEvent>(\n  ws: WebSocket,\n  event: T,\n  payload: DevtoolsEventPayloads[T],\n) {\n  // check if the socket is open\n  // if not, wait for it to open\n  if (ws.readyState !== ws.OPEN) {\n    await new Promise<void>((resolve) => {\n      const listener = () => {\n        ws.send(JSON.stringify({ event, payload }));\n        resolve();\n        ws.removeEventListener(\"open\", listener);\n      };\n\n      ws.addEventListener(\"open\", listener);\n    });\n    return;\n  }\n  ws.send(JSON.stringify({ event, payload }));\n  return;\n}\n","// receive ws message by adding a listener to the ws object\n\nimport type { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\n\nexport function receive<T extends DevtoolsEvent>(\n  ws: WebSocket,\n  event: T,\n  callback: (payload: DevtoolsEventPayloads[T]) => void,\n) {\n  const listener = (e: MessageEvent) => {\n    const { event: receivedEvent, payload } = JSON.parse(e.data);\n    if (event === receivedEvent) {\n      callback(payload);\n    }\n  };\n\n  ws.addEventListener(\"message\", listener);\n\n  return () => {\n    ws.removeEventListener(\"message\", listener);\n  };\n}\n"],"mappings":"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","names":["DevtoolsEvent","scopes","hooksByScope","acc","hook","scope","React","send","ws","event","payload","resolve","listener","receive","ws","event","callback","listener","e","receivedEvent","payload","DevToolsContext","React","DevToolsContextProvider","__devtools","port","children","values","setValues","ws","setWs","wsInstance","unsubscribe","receive","data","v","send","contextValues"]}