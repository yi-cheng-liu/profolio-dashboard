import { type CrudFilters, type CrudOperators, type CrudSorting, type CrudFilter } from "@refinedev/core";
import type { TableProps } from "antd";
export type FilterValue = Parameters<NonNullable<TableProps["onChange"]>>[1][string];
export type SortOrder = NonNullable<TableProps["sortDirections"]>[number];
export type SorterResult = Exclude<Parameters<NonNullable<TableProps["onChange"]>>[2], any[]>;
export declare const getDefaultSortOrder: (columnName: string, sorter?: CrudSorting) => SortOrder | undefined;
/**
 * @deprecated getDefaultFilter moved to `@refinedev/core`. Use from `@refinedev/core`
 */
export declare const getDefaultFilter: (columnName: string, filters?: CrudFilters, operatorType?: CrudOperators) => CrudFilter["value"] | undefined;
export declare const mapAntdSorterToCrudSorting: (sorter: SorterResult | SorterResult[]) => CrudSorting;
export declare const mapAntdFilterToCrudFilter: (tableFilters: Record<string, FilterValue | (string | number | boolean) | (string | number | boolean)[] | null>, prevFilters: CrudFilters, initialFilters?: CrudFilters) => CrudFilters;
//# sourceMappingURL=index.d.ts.map